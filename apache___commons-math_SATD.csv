,created_in_file,last_appeared_in_file,created_in_line,last_appeared_in_line,created_in_commit,deleted_in_commit,created_at_date,deleted_at_date,content,deleted_in_lines,created_in_lines,updated_in_commits
0,src/test/org/apache/commons/math/UnivariateImplTest.java,src/test/org/apache/commons/math/UnivariateImplTest.java,200,235,b84e61ffcf873ef8d588ca3adce2bcd3c7406905,429a652114f94bf81e97a7737f1b3ea63fb3de91,2003-05-23 17:33:18+00:00,2003-05-29 23:25:12+00:00,//FiXME: test all other NaN contract specs,,,
1,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,141,141,e4694325bc52209c0700294437d4e260991e9f82,97568dc06f50372c16e333e4c8367f845758470a,2003-05-12 19:04:38+00:00,2003-05-15 05:39:01+00:00,// FIXME: throw something meaningful if n = 0,,,
2,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,151,151,e4694325bc52209c0700294437d4e260991e9f82,97568dc06f50372c16e333e4c8367f845758470a,2003-05-12 19:04:38+00:00,2003-05-15 05:39:01+00:00,// FIXME: throw something meaningful if n = 0,,,
3,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/Univariate.java,160,160,e4694325bc52209c0700294437d4e260991e9f82,97568dc06f50372c16e333e4c8367f845758470a,2003-05-12 19:04:38+00:00,2003-05-15 05:39:01+00:00,// FIXME: throw something meaningful if n = 0,,,
4,src/java/org/apache/commons/math/UnivariateImpl.java,src/java/org/apache/commons/math/UnivariateImpl.java,104,125,97568dc06f50372c16e333e4c8367f845758470a,b84e61ffcf873ef8d588ca3adce2bcd3c7406905,2003-05-15 05:39:01+00:00,2003-05-23 17:33:18+00:00,// FIXME: throw something meaningful if n = 0,,,
5,src/java/org/apache/commons/math/UnivariateImpl.java,src/java/org/apache/commons/math/UnivariateImpl.java,162,201,71dfdabde1f5e9f0def1d2035822518b43e70587,b84e61ffcf873ef8d588ca3adce2bcd3c7406905,2003-05-16 05:23:29+00:00,2003-05-23 17:33:18+00:00,"// TODO: The next two lines seems rather expensive, but
// TODO: The next two lines seems rather expensive, but",[172],[173],['437e275a504d5d2de36365419e048ad9a05d83df']
6,src/java/org/apache/commons/math/UnivariateFunction.java,src/java/org/apache/commons/math/analysis/UnivariateFunction.java,60,60,703fbafa34601e0689430d4d45ab53aac9eb73c7,2ab38de23239bacee1c924c325179968b5ac0f4a,2003-05-29 19:34:38+00:00,2003-07-11 15:59:14+00:00,// TODO: More documentation,,,
7,src/java/org/apache/commons/math/analysis/UnivariateFunction.java,src/java/org/apache/commons/math/analysis/UnivariateFunction.java,60,60,b3a6a6b3b5b269cf6ccab91588c320d925dac9ae,14bbddbc4ccd05c028a07f2be0cf3cb4e967cc4c,2003-11-14 22:25:28+00:00,2003-11-15 18:56:16+00:00,// TODO: More documentation,,,
8,src/java/org/apache/commons/math/ExpandableDoubleArray.java,src/java/org/apache/commons/math/util/ExpandableDoubleArray.java,96,95,246d50aa44f8679390023f4a5552de9836eb4f1d,e389289e779612c5930d7c292bbbc94027695ae5,2003-05-21 06:24:30+00:00,2003-11-01 16:09:22+00:00,"// TODO: expansionFactor is valuable, by if I only need storage",,,
9,src/java/org/apache/commons/math/util/ExpandableDoubleArray.java,src/java/org/apache/commons/math/util/ExpandableDoubleArray.java,95,60,b3a6a6b3b5b269cf6ccab91588c320d925dac9ae,45224a8ead4295f0941720322a744b5f5318506a,2003-11-14 22:25:28+00:00,2004-06-14 21:41:33+00:00,"// TODO: expansionFactor is valuable, by if I only need storage",,,
10,src/java/org/apache/commons/math/FixedDoubleArray.java,src/java/org/apache/commons/math/util/FixedDoubleArray.java,168,336,d6f7028269df96a72cccf7b72a41b89aaa820e9f,0fd2f5fd11cc138ab373a2bbd29a5c465f12e601,2003-05-17 23:24:21+00:00,2003-07-05 18:13:35+00:00,"// TODO: AH! implemented there is not concept of ""front""
// TODO: AH! implemented there is not concept of ""front""",[168],[172],['437e275a504d5d2de36365419e048ad9a05d83df']
11,src/java/org/apache/commons/math/analysis/CubicSplineFunction.java,src/java/org/apache/commons/math/analysis/CubicSplineFunction.java,84,91,a235488095cc73e661c1bc817d54f8b7aa12ef39,e389289e779612c5930d7c292bbbc94027695ae5,2003-06-25 01:29:18+00:00,2003-11-01 16:09:22+00:00,"// TODO: should copy the arguments here, for safety. This could be a major overhead.",,,
12,src/java/org/apache/commons/math/analysis/CubicSplineFunction.java,src/java/org/apache/commons/math/analysis/CubicSplineFunction.java,91,54,b3a6a6b3b5b269cf6ccab91588c320d925dac9ae,5f543b9e930b56844f5a5627f9ed24242509d154,2003-11-14 22:25:28+00:00,2004-04-02 21:39:21+00:00,"// TODO: should copy the arguments here, for safety. This could be a major overhead.",,,
13,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/BeanListUnivariateImpl.java,128,126,c9fc45757a05ff6816ce8e1baa46fe62d6a0f5ae,7c808d90714c6b80d902f7b50d2a1dafb65ddf11,2003-05-29 19:41:32+00:00,2003-07-09 21:46:33+00:00,// TODO: We could use a better strategy for error handling,,,
14,src/experimental/org/apache/commons/math/function/DefaultContext.java,src/experimental/org/apache/commons/math/function/DefaultContext.java,69,32,4683ebbf939a0f49f919b2166be963c88f535bf9,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2003-11-20 04:22:17+00:00,2010-03-27 20:00:19+00:00,// TODO Auto-generated constructor stub,,,
15,src/experimental/org/apache/commons/math/function/DefaultContext.java,src/experimental/org/apache/commons/math/function/DefaultContext.java,76,39,4683ebbf939a0f49f919b2166be963c88f535bf9,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2003-11-20 04:22:17+00:00,2010-03-27 20:00:19+00:00,// TODO Auto-generated method stub,,,
16,src/experimental/org/apache/commons/math/function/DefaultContext.java,src/experimental/org/apache/commons/math/function/DefaultContext.java,84,47,4683ebbf939a0f49f919b2166be963c88f535bf9,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2003-11-20 04:22:17+00:00,2010-03-27 20:00:19+00:00,// TODO Auto-generated method stub,,,
17,src/experimental/org/apache/commons/math/function/DefaultContext.java,src/experimental/org/apache/commons/math/function/DefaultContext.java,92,55,4683ebbf939a0f49f919b2166be963c88f535bf9,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2003-11-20 04:22:17+00:00,2010-03-27 20:00:19+00:00,// TODO Auto-generated method stub,,,
18,src/experimental/org/apache/commons/math/function/DefaultContext.java,src/experimental/org/apache/commons/math/function/DefaultContext.java,100,63,4683ebbf939a0f49f919b2166be963c88f535bf9,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2003-11-20 04:22:17+00:00,2010-03-27 20:00:19+00:00,// TODO Auto-generated method stub,,,
19,src/experimental/org/apache/commons/math/function/DefaultContext.java,src/experimental/org/apache/commons/math/function/DefaultContext.java,108,71,4683ebbf939a0f49f919b2166be963c88f535bf9,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2003-11-20 04:22:17+00:00,2010-03-27 20:00:19+00:00,// TODO Auto-generated method stub,,,
20,src/experimental/org/apache/commons/math/function/DefaultContext.java,src/experimental/org/apache/commons/math/function/DefaultContext.java,116,79,4683ebbf939a0f49f919b2166be963c88f535bf9,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2003-11-20 04:22:17+00:00,2010-03-27 20:00:19+00:00,// TODO Auto-generated method stub,,,
21,src/experimental/org/apache/commons/math/function/DefaultContext.java,src/experimental/org/apache/commons/math/function/DefaultContext.java,124,87,4683ebbf939a0f49f919b2166be963c88f535bf9,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2003-11-20 04:22:17+00:00,2010-03-27 20:00:19+00:00,// TODO Auto-generated method stub,,,
22,src/experimental/org/apache/commons/math/function/DefaultContext.java,src/experimental/org/apache/commons/math/function/DefaultContext.java,132,95,4683ebbf939a0f49f919b2166be963c88f535bf9,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2003-11-20 04:22:17+00:00,2010-03-27 20:00:19+00:00,// TODO Auto-generated method stub,,,
23,src/experimental/org/apache/commons/math/function/DefaultContext.java,src/experimental/org/apache/commons/math/function/DefaultContext.java,140,103,4683ebbf939a0f49f919b2166be963c88f535bf9,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2003-11-20 04:22:17+00:00,2010-03-27 20:00:19+00:00,// TODO Auto-generated method stub,,,
24,src/experimental/org/apache/commons/math/function/DefaultContext.java,src/experimental/org/apache/commons/math/function/DefaultContext.java,148,111,4683ebbf939a0f49f919b2166be963c88f535bf9,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2003-11-20 04:22:17+00:00,2010-03-27 20:00:19+00:00,// TODO Auto-generated method stub,,,
25,src/experimental/org/apache/commons/math/function/DefaultContext.java,src/experimental/org/apache/commons/math/function/DefaultContext.java,156,119,4683ebbf939a0f49f919b2166be963c88f535bf9,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2003-11-20 04:22:17+00:00,2010-03-27 20:00:19+00:00,// TODO Auto-generated method stub,,,
26,src/experimental/org/apache/commons/math/function/DefaultContext.java,src/experimental/org/apache/commons/math/function/DefaultContext.java,164,127,4683ebbf939a0f49f919b2166be963c88f535bf9,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2003-11-20 04:22:17+00:00,2010-03-27 20:00:19+00:00,// TODO Auto-generated method stub,,,
27,src/experimental/org/apache/commons/math/function/DefaultContext.java,src/experimental/org/apache/commons/math/function/DefaultContext.java,177,140,4683ebbf939a0f49f919b2166be963c88f535bf9,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2003-11-20 04:22:17+00:00,2010-03-27 20:00:19+00:00,// TODO Auto-generated constructor stub,,,
28,src/experimental/org/apache/commons/math/function/DefaultContext.java,src/experimental/org/apache/commons/math/function/DefaultContext.java,212,175,4683ebbf939a0f49f919b2166be963c88f535bf9,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2003-11-20 04:22:17+00:00,2010-03-27 20:00:19+00:00,// TODO Auto-generated method stub,,,
29,src/experimental/org/apache/commons/math/function/DefaultContext.java,src/experimental/org/apache/commons/math/function/DefaultContext.java,220,183,4683ebbf939a0f49f919b2166be963c88f535bf9,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2003-11-20 04:22:17+00:00,2010-03-27 20:00:19+00:00,// TODO Auto-generated method stub,,,
30,src/experimental/org/apache/commons/math/function/DefaultContext.java,src/experimental/org/apache/commons/math/function/DefaultContext.java,228,191,4683ebbf939a0f49f919b2166be963c88f535bf9,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2003-11-20 04:22:17+00:00,2010-03-27 20:00:19+00:00,// TODO Auto-generated method stub,,,
31,src/experimental/org/apache/commons/math/function/DefaultContext.java,src/experimental/org/apache/commons/math/function/DefaultContext.java,236,199,4683ebbf939a0f49f919b2166be963c88f535bf9,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2003-11-20 04:22:17+00:00,2010-03-27 20:00:19+00:00,// TODO Auto-generated method stub,,,
32,src/experimental/org/apache/commons/math/function/DefaultContext.java,src/experimental/org/apache/commons/math/function/DefaultContext.java,244,207,4683ebbf939a0f49f919b2166be963c88f535bf9,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2003-11-20 04:22:17+00:00,2010-03-27 20:00:19+00:00,// TODO Auto-generated method stub,,,
33,src/experimental/org/apache/commons/math/function/DefaultContext.java,src/experimental/org/apache/commons/math/function/DefaultContext.java,252,215,4683ebbf939a0f49f919b2166be963c88f535bf9,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2003-11-20 04:22:17+00:00,2010-03-27 20:00:19+00:00,// TODO Auto-generated method stub,,,
34,src/experimental/org/apache/commons/math/function/EvaluationException.java,src/experimental/org/apache/commons/math/function/EvaluationException.java,69,34,4683ebbf939a0f49f919b2166be963c88f535bf9,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2003-11-20 04:22:17+00:00,2010-03-27 20:00:19+00:00,// TODO Auto-generated constructor stub,,,
35,src/experimental/org/apache/commons/math/function/EvaluationException.java,src/experimental/org/apache/commons/math/function/EvaluationException.java,77,42,4683ebbf939a0f49f919b2166be963c88f535bf9,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2003-11-20 04:22:17+00:00,2010-03-27 20:00:19+00:00,// TODO Auto-generated constructor stub,,,
36,src/experimental/org/apache/commons/math/function/EvaluationException.java,src/experimental/org/apache/commons/math/function/EvaluationException.java,86,51,4683ebbf939a0f49f919b2166be963c88f535bf9,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2003-11-20 04:22:17+00:00,2010-03-27 20:00:19+00:00,// TODO Auto-generated constructor stub,,,
37,src/experimental/org/apache/commons/math/function/EvaluationException.java,src/experimental/org/apache/commons/math/function/EvaluationException.java,94,59,4683ebbf939a0f49f919b2166be963c88f535bf9,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2003-11-20 04:22:17+00:00,2010-03-27 20:00:19+00:00,// TODO Auto-generated constructor stub,,,
38,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,264,263,a4c605d8a63ee8a6c0f71aefa435e10ec79b7f0e,e389289e779612c5930d7c292bbbc94027695ae5,2003-06-25 01:35:46+00:00,2003-11-01 16:09:22+00:00,//FIXME: textbook example reported t stat uses pooled variance,,,
39,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,263,215,b3a6a6b3b5b269cf6ccab91588c320d925dac9ae,e9c7ed28a6d0039279573680f730fbeb8066d061,2003-11-14 22:25:28+00:00,2004-03-07 21:55:18+00:00,"//FIXME: textbook example reported t stat uses pooled variance
//FIXME: textbook example reported t stat uses pooled variance
//FIXME: textbook example reported t stat uses pooled variance","[331, 355]","[453, 215]","['0718895962e9d43858cbbe49cd592b5e2d0920c9', 'bd460b62fbb84d43cb0678751ec0e56bdee1d0de']"
40,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,149,157,e5833affa168b6e168d31bd24a2acbdf75f2d7ce,bd460b62fbb84d43cb0678751ec0e56bdee1d0de,2003-11-15 16:01:42+00:00,2004-03-07 20:47:06+00:00,"// TODO Auto-generated catch block
// TODO Auto-generated catch block",[149],[195],['0718895962e9d43858cbbe49cd592b5e2d0920c9']
41,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,152,160,e5833affa168b6e168d31bd24a2acbdf75f2d7ce,bd460b62fbb84d43cb0678751ec0e56bdee1d0de,2003-11-15 16:01:42+00:00,2004-03-07 20:47:06+00:00,"// TODO Auto-generated catch block
// TODO Auto-generated catch block",[152],[198],['0718895962e9d43858cbbe49cd592b5e2d0920c9']
42,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,176,230,e5833affa168b6e168d31bd24a2acbdf75f2d7ce,1b96f28e41ecb466a42e5a86c6bcdd97c510e0bb,2003-11-15 16:01:42+00:00,2004-01-25 21:30:41+00:00,"// TODO Auto-generated catch block
// TODO Auto-generated catch block",[176],[230],['0718895962e9d43858cbbe49cd592b5e2d0920c9']
43,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,179,233,e5833affa168b6e168d31bd24a2acbdf75f2d7ce,1b96f28e41ecb466a42e5a86c6bcdd97c510e0bb,2003-11-15 16:01:42+00:00,2004-01-25 21:30:41+00:00,"// TODO Auto-generated catch block
// TODO Auto-generated catch block",[179],[233],['0718895962e9d43858cbbe49cd592b5e2d0920c9']
44,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,201,258,e5833affa168b6e168d31bd24a2acbdf75f2d7ce,1b96f28e41ecb466a42e5a86c6bcdd97c510e0bb,2003-11-15 16:01:42+00:00,2004-01-25 21:30:41+00:00,"// TODO Auto-generated catch block
// TODO Auto-generated catch block",[201],[258],['0718895962e9d43858cbbe49cd592b5e2d0920c9']
45,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,204,261,e5833affa168b6e168d31bd24a2acbdf75f2d7ce,1b96f28e41ecb466a42e5a86c6bcdd97c510e0bb,2003-11-15 16:01:42+00:00,2004-01-25 21:30:41+00:00,"// TODO Auto-generated catch block
// TODO Auto-generated catch block",[204],[261],['0718895962e9d43858cbbe49cd592b5e2d0920c9']
46,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,232,294,e5833affa168b6e168d31bd24a2acbdf75f2d7ce,1b96f28e41ecb466a42e5a86c6bcdd97c510e0bb,2003-11-15 16:01:42+00:00,2004-01-25 21:30:41+00:00,"// TODO Auto-generated catch block
// TODO Auto-generated catch block",[232],[294],['0718895962e9d43858cbbe49cd592b5e2d0920c9']
47,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,235,297,e5833affa168b6e168d31bd24a2acbdf75f2d7ce,1b96f28e41ecb466a42e5a86c6bcdd97c510e0bb,2003-11-15 16:01:42+00:00,2004-01-25 21:30:41+00:00,"// TODO Auto-generated catch block
// TODO Auto-generated catch block",[235],[297],['0718895962e9d43858cbbe49cd592b5e2d0920c9']
48,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,262,348,e5833affa168b6e168d31bd24a2acbdf75f2d7ce,1b96f28e41ecb466a42e5a86c6bcdd97c510e0bb,2003-11-15 16:01:42+00:00,2004-01-25 21:30:41+00:00,"// TODO Auto-generated catch block
// TODO Auto-generated catch block",[262],[348],['0718895962e9d43858cbbe49cd592b5e2d0920c9']
49,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,265,351,e5833affa168b6e168d31bd24a2acbdf75f2d7ce,1b96f28e41ecb466a42e5a86c6bcdd97c510e0bb,2003-11-15 16:01:42+00:00,2004-01-25 21:30:41+00:00,"// TODO Auto-generated catch block
// TODO Auto-generated catch block",[265],[351],['0718895962e9d43858cbbe49cd592b5e2d0920c9']
50,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,308,427,e5833affa168b6e168d31bd24a2acbdf75f2d7ce,1b96f28e41ecb466a42e5a86c6bcdd97c510e0bb,2003-11-15 16:01:42+00:00,2004-01-25 21:30:41+00:00,"// TODO Auto-generated catch block
// TODO Auto-generated catch block",[308],[427],['0718895962e9d43858cbbe49cd592b5e2d0920c9']
51,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,311,430,e5833affa168b6e168d31bd24a2acbdf75f2d7ce,1b96f28e41ecb466a42e5a86c6bcdd97c510e0bb,2003-11-15 16:01:42+00:00,2004-01-25 21:30:41+00:00,"// TODO Auto-generated catch block
// TODO Auto-generated catch block",[311],[430],['0718895962e9d43858cbbe49cd592b5e2d0920c9']
52,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,322,443,e5833affa168b6e168d31bd24a2acbdf75f2d7ce,1b96f28e41ecb466a42e5a86c6bcdd97c510e0bb,2003-11-15 16:01:42+00:00,2004-01-25 21:30:41+00:00,"// TODO Auto-generated catch block
// TODO Auto-generated catch block",[322],[443],['0718895962e9d43858cbbe49cd592b5e2d0920c9']
53,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,325,446,e5833affa168b6e168d31bd24a2acbdf75f2d7ce,1b96f28e41ecb466a42e5a86c6bcdd97c510e0bb,2003-11-15 16:01:42+00:00,2004-01-25 21:30:41+00:00,"// TODO Auto-generated catch block
// TODO Auto-generated catch block",[325],[446],['0718895962e9d43858cbbe49cd592b5e2d0920c9']
54,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,108,70,0718895962e9d43858cbbe49cd592b5e2d0920c9,bd460b62fbb84d43cb0678751ec0e56bdee1d0de,2003-11-19 03:22:54+00:00,2004-03-07 20:47:06+00:00,// TODO Auto-generated catch block,,,
55,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,129,91,0718895962e9d43858cbbe49cd592b5e2d0920c9,bd460b62fbb84d43cb0678751ec0e56bdee1d0de,2003-11-19 03:22:54+00:00,2004-03-07 20:47:06+00:00,// TODO Auto-generated catch block,,,
56,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,155,117,0718895962e9d43858cbbe49cd592b5e2d0920c9,bd460b62fbb84d43cb0678751ec0e56bdee1d0de,2003-11-19 03:22:54+00:00,2004-03-07 20:47:06+00:00,// TODO Auto-generated catch block,,,
57,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,165,127,0718895962e9d43858cbbe49cd592b5e2d0920c9,bd460b62fbb84d43cb0678751ec0e56bdee1d0de,2003-11-19 03:22:54+00:00,2004-03-07 20:47:06+00:00,// TODO Auto-generated catch block,,,
58,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,284,226,0718895962e9d43858cbbe49cd592b5e2d0920c9,bd460b62fbb84d43cb0678751ec0e56bdee1d0de,2003-11-19 03:22:54+00:00,2004-03-07 20:47:06+00:00,// TODO Auto-generated catch block,,,
59,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,314,246,0718895962e9d43858cbbe49cd592b5e2d0920c9,bd460b62fbb84d43cb0678751ec0e56bdee1d0de,2003-11-19 03:22:54+00:00,2004-03-07 20:47:06+00:00,// TODO Auto-generated catch block,,,
60,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,393,315,0718895962e9d43858cbbe49cd592b5e2d0920c9,bd460b62fbb84d43cb0678751ec0e56bdee1d0de,2003-11-19 03:22:54+00:00,2004-03-07 20:47:06+00:00,// TODO Auto-generated catch block,,,
61,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,403,325,0718895962e9d43858cbbe49cd592b5e2d0920c9,bd460b62fbb84d43cb0678751ec0e56bdee1d0de,2003-11-19 03:22:54+00:00,2004-03-07 20:47:06+00:00,// TODO Auto-generated catch block,,,
62,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,412,334,0718895962e9d43858cbbe49cd592b5e2d0920c9,bd460b62fbb84d43cb0678751ec0e56bdee1d0de,2003-11-19 03:22:54+00:00,2004-03-07 20:47:06+00:00,// TODO Auto-generated catch block,,,
63,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,490,392,0718895962e9d43858cbbe49cd592b5e2d0920c9,bd460b62fbb84d43cb0678751ec0e56bdee1d0de,2003-11-19 03:22:54+00:00,2004-03-07 20:47:06+00:00,// TODO Auto-generated catch block,,,
64,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,499,401,0718895962e9d43858cbbe49cd592b5e2d0920c9,bd460b62fbb84d43cb0678751ec0e56bdee1d0de,2003-11-19 03:22:54+00:00,2004-03-07 20:47:06+00:00,// TODO Auto-generated catch block,,,
65,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,508,410,0718895962e9d43858cbbe49cd592b5e2d0920c9,bd460b62fbb84d43cb0678751ec0e56bdee1d0de,2003-11-19 03:22:54+00:00,2004-03-07 20:47:06+00:00,// TODO Auto-generated catch block,,,
66,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,517,419,0718895962e9d43858cbbe49cd592b5e2d0920c9,bd460b62fbb84d43cb0678751ec0e56bdee1d0de,2003-11-19 03:22:54+00:00,2004-03-07 20:47:06+00:00,// TODO Auto-generated catch block,,,
67,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,526,428,0718895962e9d43858cbbe49cd592b5e2d0920c9,bd460b62fbb84d43cb0678751ec0e56bdee1d0de,2003-11-19 03:22:54+00:00,2004-03-07 20:47:06+00:00,// TODO Auto-generated catch block,,,
68,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,535,437,0718895962e9d43858cbbe49cd592b5e2d0920c9,bd460b62fbb84d43cb0678751ec0e56bdee1d0de,2003-11-19 03:22:54+00:00,2004-03-07 20:47:06+00:00,// TODO Auto-generated catch block,,,
69,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,544,446,0718895962e9d43858cbbe49cd592b5e2d0920c9,bd460b62fbb84d43cb0678751ec0e56bdee1d0de,2003-11-19 03:22:54+00:00,2004-03-07 20:47:06+00:00,// TODO Auto-generated catch block,,,
70,src/test/org/apache/commons/math/util/BeanTransformerTest.java,src/test/org/apache/commons/math/util/BeanTransformerTest.java,104,104,e5833affa168b6e168d31bd24a2acbdf75f2d7ce,9267ae3bb27364ebba95cc615c2bf0308e6cb32e,2003-11-15 16:01:42+00:00,2004-02-16 07:04:04+00:00,// TODO Auto-generated catch block,,,
71,src/test/org/apache/commons/math/util/BeanTransformerTest.java,src/test/org/apache/commons/math/util/BeanTransformerTest.java,120,80,e5833affa168b6e168d31bd24a2acbdf75f2d7ce,56d545478a8899fd940e428adf3f827f6f1b347d,2003-11-15 16:01:42+00:00,2004-05-23 00:33:41+00:00,// TODO Auto-generated catch block,,,
72,src/test/org/apache/commons/math/util/BeanTransformerTest.java,src/test/org/apache/commons/math/util/BeanTransformerTest.java,136,136,e5833affa168b6e168d31bd24a2acbdf75f2d7ce,9267ae3bb27364ebba95cc615c2bf0308e6cb32e,2003-11-15 16:01:42+00:00,2004-02-16 07:04:04+00:00,// TODO Auto-generated catch block,,,
73,src/test/org/apache/commons/math/util/BeanTransformerTest.java,src/test/org/apache/commons/math/util/BeanTransformerTest.java,152,96,e5833affa168b6e168d31bd24a2acbdf75f2d7ce,56d545478a8899fd940e428adf3f827f6f1b347d,2003-11-15 16:01:42+00:00,2004-05-23 00:33:41+00:00,// TODO Auto-generated catch block,,,
74,src/mantissa/src/org/spaceroots/mantissa/fitting/F2FP2Iterator.java,src/mantissa/src/org/spaceroots/mantissa/fitting/F2FP2Iterator.java,62,62,05195b77ca8d86fbb4fdd9216f436d8b7f3a57de,cc73bfb42fa86c01e37a1b7021b1ab41e0f0cb63,2006-11-19 21:36:15+00:00,2006-12-19 22:11:07+00:00,// hack the values (to avoid building a new object),,,
75,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsAbstractTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsAbstractTest.java,139,137,dc2a102e3c9126f5d4f616a41572e2c62281bf24,d9df34360f3e95f1b5bdda9095888dab7f45d982,2008-01-04 13:49:14+00:00,2008-12-02 02:21:22+00:00,//FiXME: test all other NaN contract specs,,,
76,src/experimental/org/apache/commons/math/linear/RecursiveLayoutRealMatrix.java,src/experimental/org/apache/commons/math/linear/RecursiveLayoutRealMatrix.java,499,497,e01294b1587ed698bea02e9e2b90cda36d0bf28b,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2009-02-13 14:38:48+00:00,2010-03-27 20:00:19+00:00,// TODO get rid of this test,,,
77,src/java/org/apache/commons/math/analysis/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/analysis/UnivariateRealSolverImpl.java,138,138,2b5b0e7a14f405f69378527bab5af9e8ddbdb111,e389289e779612c5930d7c292bbbc94027695ae5,2003-07-05 18:05:31+00:00,2003-11-01 16:09:22+00:00,// TODO: could this be an IllegalStateException instead?,,,
78,src/java/org/apache/commons/math/analysis/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/analysis/UnivariateRealSolverImpl.java,153,153,2b5b0e7a14f405f69378527bab5af9e8ddbdb111,e389289e779612c5930d7c292bbbc94027695ae5,2003-07-05 18:05:31+00:00,2003-11-01 16:09:22+00:00,// TODO: could this be an IllegalStateException instead?,,,
79,src/java/org/apache/commons/math/analysis/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/analysis/UnivariateRealSolverImpl.java,138,102,b3a6a6b3b5b269cf6ccab91588c320d925dac9ae,c952896cfab537f33102787e27acd878e9138f29,2003-11-14 22:25:28+00:00,2004-04-23 18:20:12+00:00,// TODO: could this be an IllegalStateException instead?,,,
80,src/java/org/apache/commons/math/analysis/UnivariateRealSolverImpl.java,src/java/org/apache/commons/math/analysis/UnivariateRealSolverImpl.java,153,117,b3a6a6b3b5b269cf6ccab91588c320d925dac9ae,c952896cfab537f33102787e27acd878e9138f29,2003-11-14 22:25:28+00:00,2004-04-23 18:20:12+00:00,// TODO: could this be an IllegalStateException instead?,,,
81,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,156,187,c9f353cee21a636b8d32ab35319105b061cefcaf,32354a1039ceccd4a6a71baea3329b27dff7a124,2004-06-06 16:38:05+00:00,2011-11-26 06:17:49+00:00,// TODO: try to improve on this estimate,,,
82,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,173,188,d9df34360f3e95f1b5bdda9095888dab7f45d982,32354a1039ceccd4a6a71baea3329b27dff7a124,2008-12-02 02:21:22+00:00,2011-11-26 06:17:49+00:00,// TODO: what should really happen here is not derive from AbstractContinuousDistribution,,,
83,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,174,189,d9df34360f3e95f1b5bdda9095888dab7f45d982,32354a1039ceccd4a6a71baea3329b27dff7a124,2008-12-02 02:21:22+00:00,2011-11-26 06:17:49+00:00,// TODO: because the inverse cumulative distribution is simple.,,,
84,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,162,158,2dec2474f9f5b39e6e0ffca795f52b9b1b88fdf3,5971a93e3f86973f53e3e14c2d32eef4ba367e96,2003-06-05 14:03:53+00:00,2003-09-17 19:29:32+00:00,// TODO: try to improve on this estimate,,,
85,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,178,174,2dec2474f9f5b39e6e0ffca795f52b9b1b88fdf3,5971a93e3f86973f53e3e14c2d32eef4ba367e96,2003-06-05 14:03:53+00:00,2003-09-17 19:29:32+00:00,// TODO: try to improve on this estimate,,,
86,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,204,200,2dec2474f9f5b39e6e0ffca795f52b9b1b88fdf3,5971a93e3f86973f53e3e14c2d32eef4ba367e96,2003-06-05 14:03:53+00:00,2003-09-17 19:29:32+00:00,// TODO: try to improve on this estimate,,,
87,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,127,159,f4e161390d29af66312d597dcc10dde5b6148542,32354a1039ceccd4a6a71baea3329b27dff7a124,2004-05-19 14:16:32+00:00,2011-11-26 06:17:49+00:00,// TODO: try to improve on this estimate,,,
88,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,141,173,f4e161390d29af66312d597dcc10dde5b6148542,32354a1039ceccd4a6a71baea3329b27dff7a124,2004-05-19 14:16:32+00:00,2011-11-26 06:17:49+00:00,// TODO: try to improve on this estimate,,,
89,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,167,200,f4e161390d29af66312d597dcc10dde5b6148542,32354a1039ceccd4a6a71baea3329b27dff7a124,2004-05-19 14:16:32+00:00,2011-11-26 06:17:49+00:00,// TODO: try to improve on this estimate,,,
90,src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java,src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java,171,140,fcde02ecceda552dbcbac16571678f7106150b46,c415dd79aeccea246fe39881cda0b1404d5c33c0,2004-01-26 03:04:31+00:00,2004-04-27 16:42:34+00:00,"//TODO is this ok?
//TODO is this ok?",[171],[171],['70106770ea61a5fe845653a0b793f4934cc00144']
91,src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java,111,111,19f633c6ae2b3cf342d37e1c95e975d0ad4c4cdd,2741a781e98a46217b800c4cd3e7abd64f04cec4,2009-10-28 19:59:21+00:00,2009-10-28 21:53:35+00:00,/ Math.sqrt(2.0 * Math.PI * x); // TODO make MathUtils.PI,,,
92,src/java/org/apache/commons/math/linear/decomposition/CholeskyDecompositionImpl.java,src/java/org/apache/commons/math/linear/decomposition/CholeskyDecompositionImpl.java,43,43,5d33262944512396c5316fe75703e2c10090cc5e,d51278d0fa0d22adb5540a912f85e2df9624eeea,2009-05-22 12:58:26+00:00,2009-05-25 21:46:38+00:00,// TODO: Add Serializable documentation,,,
93,src/java/org/apache/commons/math/linear/decomposition/CholeskyDecompositionImpl.java,src/java/org/apache/commons/math/linear/decomposition/CholeskyDecompositionImpl.java,44,44,5d33262944512396c5316fe75703e2c10090cc5e,d51278d0fa0d22adb5540a912f85e2df9624eeea,2009-05-22 12:58:26+00:00,2009-05-25 21:46:38+00:00,// TODO: Check Serializable implementation,,,
94,src/java/org/apache/commons/math/linear/decomposition/CholeskyDecompositionImpl.java,src/java/org/apache/commons/math/linear/decomposition/CholeskyDecompositionImpl.java,202,202,3fa90e0aa9513b73ae11cc1980bf0199131c59bc,d51278d0fa0d22adb5540a912f85e2df9624eeea,2009-05-23 11:48:41+00:00,2009-05-25 21:46:38+00:00,// TODO: Add Serializable documentation,,,
95,src/java/org/apache/commons/math/linear/decomposition/CholeskyDecompositionImpl.java,src/java/org/apache/commons/math/linear/decomposition/CholeskyDecompositionImpl.java,203,203,3fa90e0aa9513b73ae11cc1980bf0199131c59bc,d51278d0fa0d22adb5540a912f85e2df9624eeea,2009-05-23 11:48:41+00:00,2009-05-25 21:46:38+00:00,// TODO: Check Serializable implementation,,,
96,src/java/org/apache/commons/math/linear/decomposition/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/decomposition/EigenDecompositionImpl.java,370,370,3fa90e0aa9513b73ae11cc1980bf0199131c59bc,d51278d0fa0d22adb5540a912f85e2df9624eeea,2009-05-23 11:48:41+00:00,2009-05-25 21:46:38+00:00,// TODO: Add Serializable documentation,,,
97,src/java/org/apache/commons/math/linear/decomposition/EigenDecompositionImpl.java,src/java/org/apache/commons/math/linear/decomposition/EigenDecompositionImpl.java,371,371,3fa90e0aa9513b73ae11cc1980bf0199131c59bc,d51278d0fa0d22adb5540a912f85e2df9624eeea,2009-05-23 11:48:41+00:00,2009-05-25 21:46:38+00:00,// TODO: Check Serializable implementation,,,
98,src/java/org/apache/commons/math/linear/decomposition/LUDecompositionImpl.java,src/java/org/apache/commons/math/linear/decomposition/LUDecompositionImpl.java,242,242,3fa90e0aa9513b73ae11cc1980bf0199131c59bc,d51278d0fa0d22adb5540a912f85e2df9624eeea,2009-05-23 11:48:41+00:00,2009-05-25 21:46:38+00:00,// TODO: Add Serializable documentation,,,
99,src/java/org/apache/commons/math/linear/decomposition/LUDecompositionImpl.java,src/java/org/apache/commons/math/linear/decomposition/LUDecompositionImpl.java,243,243,3fa90e0aa9513b73ae11cc1980bf0199131c59bc,d51278d0fa0d22adb5540a912f85e2df9624eeea,2009-05-23 11:48:41+00:00,2009-05-25 21:46:38+00:00,// TODO: Check Serializable implementation,,,
100,src/java/org/apache/commons/math/linear/decomposition/QRDecompositionImpl.java,src/java/org/apache/commons/math/linear/decomposition/QRDecompositionImpl.java,261,261,3fa90e0aa9513b73ae11cc1980bf0199131c59bc,d51278d0fa0d22adb5540a912f85e2df9624eeea,2009-05-23 11:48:41+00:00,2009-05-25 21:46:38+00:00,// TODO: Add Serializable documentation,,,
101,src/java/org/apache/commons/math/linear/decomposition/QRDecompositionImpl.java,src/java/org/apache/commons/math/linear/decomposition/QRDecompositionImpl.java,262,262,3fa90e0aa9513b73ae11cc1980bf0199131c59bc,d51278d0fa0d22adb5540a912f85e2df9624eeea,2009-05-23 11:48:41+00:00,2009-05-25 21:46:38+00:00,// TODO: Check Serializable implementation,,,
102,src/java/org/apache/commons/math/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,214,213,765db662a581ffa5b5b093022bb69d2638d02aa3,e389289e779612c5930d7c292bbbc94027695ae5,2003-06-15 17:01:39+00:00,2003-11-01 16:09:22+00:00,// FIXME: need to add singular value decomposition or drop this,,,
103,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,213,175,b3a6a6b3b5b269cf6ccab91588c320d925dac9ae,4aaa9403bd5056b68afdfdcd7120df102eab9c8a,2003-11-14 22:25:28+00:00,2004-06-05 22:28:10+00:00,"// FIXME: need to add singular value decomposition or drop this
// @TODO need to add singular value decomposition or drop this",[213],[212],['204063d31752fc234a0e58121b03743bff3c7543']
104,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,470,434,204063d31752fc234a0e58121b03743bff3c7543,70b35ebdcc7f30d72e0ce38c31b6b58b96a9250f,2004-01-28 20:15:03+00:00,2004-04-03 22:18:04+00:00,"// @TODO A bad way to check for a singular matrix, is this the only way - kick off an LU decompose?",,,
105,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,656,622,204063d31752fc234a0e58121b03743bff3c7543,3a35f193cc24f8eac1c26016109a9542df822679,2004-01-28 20:15:03+00:00,2004-04-08 07:01:17+00:00,// @TODO Bad method name - get rid of leading capitals,,,
106,src/java/org/apache/commons/math/linear/decomposition/SingularValueDecompositionImpl.java,src/java/org/apache/commons/math/linear/decomposition/SingularValueDecompositionImpl.java,303,303,3fa90e0aa9513b73ae11cc1980bf0199131c59bc,d51278d0fa0d22adb5540a912f85e2df9624eeea,2009-05-23 11:48:41+00:00,2009-05-25 21:46:38+00:00,// TODO: Add Serializable documentation,,,
107,src/java/org/apache/commons/math/linear/decomposition/SingularValueDecompositionImpl.java,src/java/org/apache/commons/math/linear/decomposition/SingularValueDecompositionImpl.java,304,304,3fa90e0aa9513b73ae11cc1980bf0199131c59bc,d51278d0fa0d22adb5540a912f85e2df9624eeea,2009-05-23 11:48:41+00:00,2009-05-25 21:46:38+00:00,// TODO: Check Serializable implementation,,,
108,src/java/org/apache/commons/math/optimization/SimpleVectorialPointChecker.java,src/java/org/apache/commons/math/optimization/SimpleVectorialPointChecker.java,37,37,b41ff57526cadeb5ab8407dd962d61a615181b42,6135415f3184a4983f80141ccbb0907e0224bbb6,2009-05-23 11:26:56+00:00,2009-07-20 19:34:06+00:00,// TODO: Add Serializable documentation,,,
109,src/java/org/apache/commons/math/optimization/SimpleVectorialPointChecker.java,src/java/org/apache/commons/math/optimization/SimpleVectorialPointChecker.java,38,38,b41ff57526cadeb5ab8407dd962d61a615181b42,6135415f3184a4983f80141ccbb0907e0224bbb6,2009-05-23 11:26:56+00:00,2009-07-20 19:34:06+00:00,// TODO: Check Serializable implementation,,,
110,src/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,src/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,89,90,b41ff57526cadeb5ab8407dd962d61a615181b42,d088734d253b465a58fa3d2b0b5d639e92cfaa9c,2009-05-23 11:26:56+00:00,2009-06-07 21:24:18+00:00,// TODO: Add Serializable documentation,,,
111,src/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,src/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,90,91,b41ff57526cadeb5ab8407dd962d61a615181b42,d088734d253b465a58fa3d2b0b5d639e92cfaa9c,2009-05-23 11:26:56+00:00,2009-06-07 21:24:18+00:00,// TODO: Check Serializable implementation,,,
112,src/java/org/apache/commons/math/optimization/direct/MultiDirectional.java,src/java/org/apache/commons/math/optimization/direct/MultiDirectional.java,37,37,b41ff57526cadeb5ab8407dd962d61a615181b42,4cf9d992088aa03a8a8d54c319d2238c9f61eaf1,2009-05-23 11:26:56+00:00,2009-07-20 19:57:08+00:00,// TODO: Add Serializable documentation,,,
113,src/java/org/apache/commons/math/optimization/direct/MultiDirectional.java,src/java/org/apache/commons/math/optimization/direct/MultiDirectional.java,38,38,b41ff57526cadeb5ab8407dd962d61a615181b42,4cf9d992088aa03a8a8d54c319d2238c9f61eaf1,2009-05-23 11:26:56+00:00,2009-07-20 19:57:08+00:00,// TODO: Check Serializable implementation,,,
114,src/java/org/apache/commons/math/optimization/direct/NelderMead.java,src/java/org/apache/commons/math/optimization/direct/NelderMead.java,37,37,b41ff57526cadeb5ab8407dd962d61a615181b42,4cf9d992088aa03a8a8d54c319d2238c9f61eaf1,2009-05-23 11:26:56+00:00,2009-07-20 19:57:08+00:00,// TODO: Add Serializable documentation,,,
115,src/java/org/apache/commons/math/optimization/direct/NelderMead.java,src/java/org/apache/commons/math/optimization/direct/NelderMead.java,38,38,b41ff57526cadeb5ab8407dd962d61a615181b42,4cf9d992088aa03a8a8d54c319d2238c9f61eaf1,2009-05-23 11:26:56+00:00,2009-07-20 19:57:08+00:00,// TODO: Check Serializable implementation,,,
116,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,91,91,403e4e49562bcce4b8efd95278696f40eb3a429a,63bf6795403ae172c49e81fb9d58b063e77d5eaa,2004-05-24 05:29:05+00:00,2004-06-01 00:44:24+00:00,// TODO Auto-generated method stub,,,
117,src/test/java/org/apache/commons/math/RetryTestCase.java,src/test/java/org/apache/commons/math/RetryTestCase.java,27,27,96c2ce398318fdc1c4ebb865ef06061e72c6e5fd,3c4a3dbd7c34ee09b414400fb57477563359962a,2011-03-20 17:24:14+00:00,2011-03-27 15:02:47+00:00,// TODO implement retry policy using Junit 4  API,,,
118,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,798,798,9161afbbbc887b89b9fb76dce028c96ed2248e23,760078b411fa3c0a2914574756ef458c3fc68d00,2011-08-24 12:15:51+00:00,2011-08-28 12:58:57+00:00,// TODO It is not specified in the javadoc that getData should,,,
119,src/test/org/apache/commons/math/stat/UnivariateImplTest.java,src/test/org/apache/commons/math/stat/UnivariateImplTest.java,235,229,a286c243eb965fc260289509264e1b9cc1524b89,e389289e779612c5930d7c292bbbc94027695ae5,2003-05-29 20:35:46+00:00,2003-11-01 16:09:22+00:00,//FiXME: test all other NaN contract specs,,,
120,src/test/org/apache/commons/math/stat/UnivariateImplTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsImplTest.java,229,143,b3a6a6b3b5b269cf6ccab91588c320d925dac9ae,dc2a102e3c9126f5d4f616a41572e2c62281bf24,2003-11-14 22:25:28+00:00,2008-01-04 13:49:14+00:00,//FiXME: test all other NaN contract specs,,,
121,src/main/java/org/apache/commons/math/ode/ExpandableFirstOrderDifferentialEquations.java,src/main/java/org/apache/commons/math/ode/ExpandableFirstOrderDifferentialEquations.java,89,89,b7c5cd5ff7b02a22fbac06aef14260e0096ce2c0,b5724e1cc0110ff35b4e75b4784117f4daffcb93,2011-09-25 15:04:39+00:00,2011-09-28 05:56:42+00:00,"// TODO we should not catch Exception, and we should identify the offending additional equation",,,
122,src/main/java/org/apache/commons/math/ode/ExpandableFirstOrderDifferentialEquations.java,src/main/java/org/apache/commons/math/ode/ExpandableFirstOrderDifferentialEquations.java,121,121,b7c5cd5ff7b02a22fbac06aef14260e0096ce2c0,b5724e1cc0110ff35b4e75b4784117f4daffcb93,2011-09-25 15:04:39+00:00,2011-09-28 05:56:42+00:00,"// TODO we should not catch Exception, and we should identify the offending additional equation",,,
123,src/main/java/org/apache/commons/math/ode/ExpandableFirstOrderDifferentialEquations.java,src/main/java/org/apache/commons/math/ode/ExpandableFirstOrderDifferentialEquations.java,220,220,b7c5cd5ff7b02a22fbac06aef14260e0096ce2c0,b5724e1cc0110ff35b4e75b4784117f4daffcb93,2011-09-25 15:04:39+00:00,2011-09-28 05:56:42+00:00,"// TODO we should not catch Exception, and we should identify the offending additional equation",,,
124,src/main/java/org/apache/commons/math/ode/ExpandableFirstOrderDifferentialEquations.java,src/main/java/org/apache/commons/math/ode/ExpandableFirstOrderDifferentialEquations.java,251,251,b7c5cd5ff7b02a22fbac06aef14260e0096ce2c0,b5724e1cc0110ff35b4e75b4784117f4daffcb93,2011-09-25 15:04:39+00:00,2011-09-28 05:56:42+00:00,"// TODO we should not catch Exception, and we should identify the offending additional equation",,,
125,src/main/java/org/apache/commons/math/ode/ExpandableFirstOrderDifferentialEquations.java,src/main/java/org/apache/commons/math/ode/ExpandableFirstOrderDifferentialEquations.java,268,268,b7c5cd5ff7b02a22fbac06aef14260e0096ce2c0,b5724e1cc0110ff35b4e75b4784117f4daffcb93,2011-09-25 15:04:39+00:00,2011-09-28 05:56:42+00:00,"// TODO we should not catch Exception, and we should identify the offending additional equation",,,
126,src/main/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizer.java,76,78,63030b2b0ad2735a45522b73adc414746eb3dd38,7460c082a39251193108da52ce05e63f3e3796d1,2013-08-09 23:21:14+00:00,2014-02-18 14:31:34+00:00,model = other.model; // XXX Not thread-safe,,,
127,src/main/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizer.java,77,79,63030b2b0ad2735a45522b73adc414746eb3dd38,7460c082a39251193108da52ce05e63f3e3796d1,2013-08-09 23:21:14+00:00,2014-02-18 14:31:34+00:00,jacobian = other.jacobian; // XXX Not thread-safe,,,
128,src/main/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizer.java,88,90,63030b2b0ad2735a45522b73adc414746eb3dd38,7460c082a39251193108da52ce05e63f3e3796d1,2013-08-09 23:21:14+00:00,2014-02-18 14:31:34+00:00,"this.weight = weight; // XXX Not thread-safe
this.weight = newWeight; // XXX Not thread-safe",[90],[90],['cf4805081b84624a904af4c510b8467d3beddae9']
129,src/main/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizer.java,96,98,63030b2b0ad2735a45522b73adc414746eb3dd38,7460c082a39251193108da52ce05e63f3e3796d1,2013-08-09 23:21:14+00:00,2014-02-18 14:31:34+00:00,"this.model = model; // XXX Not thread-safe
this.model = newModel; // XXX Not thread-safe",[98],[98],['cf4805081b84624a904af4c510b8467d3beddae9']
130,src/main/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizer.java,97,99,63030b2b0ad2735a45522b73adc414746eb3dd38,7460c082a39251193108da52ce05e63f3e3796d1,2013-08-09 23:21:14+00:00,2014-02-18 14:31:34+00:00,"this.jacobian = jacobian; // XXX Not thread-safe
this.jacobian = newJacobian; // XXX Not thread-safe",[99],[99],['cf4805081b84624a904af4c510b8467d3beddae9']
131,src/main/java/org/apache/commons/math3/optim/AbstractOptimizer.java,src/main/java/org/apache/commons/math3/optim/AbstractOptimizer.java,64,64,63030b2b0ad2735a45522b73adc414746eb3dd38,7460c082a39251193108da52ce05e63f3e3796d1,2013-08-09 23:21:14+00:00,2014-02-18 14:31:34+00:00,checker = other.checker; // XXX Not thread-safe.,,,
132,src/main/java/org/apache/commons/math3/geometry/spherical/oned/SubChord.java,src/main/java/org/apache/commons/math3/geometry/spherical/oned/SubChord.java,70,70,13188390f33649b1881dbd4d9f2440894a36463a,a3e4cbe0bb26acab07f53a7d4ced1f24045e08e0,2014-01-01 17:24:37+00:00,2014-01-01 17:26:54+00:00,// TODO Auto-generated method stub,,,
133,src/main/java/org/apache/commons/math3/geometry/spherical/oned/SubChord.java,src/main/java/org/apache/commons/math3/geometry/spherical/oned/SubChord.java,76,76,13188390f33649b1881dbd4d9f2440894a36463a,a3e4cbe0bb26acab07f53a7d4ced1f24045e08e0,2014-01-01 17:24:37+00:00,2014-01-01 17:26:54+00:00,// TODO Auto-generated method stub,,,
134,src/main/java/org/apache/commons/math3/geometry/spherical/oned/SubChord.java,src/main/java/org/apache/commons/math3/geometry/spherical/oned/SubChord.java,104,104,13188390f33649b1881dbd4d9f2440894a36463a,a3e4cbe0bb26acab07f53a7d4ced1f24045e08e0,2014-01-01 17:24:37+00:00,2014-01-01 17:26:54+00:00,// TODO: implement merging loop,,,
135,src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresProblemImpl.java,src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresProblemImpl.java,128,75,7460c082a39251193108da52ce05e63f3e3796d1,fc9cb0ce163e54e4bba232d2bbf2f79dc495585d,2014-02-18 14:31:34+00:00,2014-02-18 14:32:06+00:00,//TODO evaluate value and jacobian in one function call,,,
136,src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresProblemImpl.java,src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresProblemImpl.java,233,233,7460c082a39251193108da52ce05e63f3e3796d1,06d490a4bd763fb634596f2755b436f7f8fbbad8,2014-02-18 14:31:34+00:00,2014-02-18 14:31:53+00:00,//TODO copy?,,,
137,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math4/analysis/interpolation/TricubicSplineInterpolator.java,160,161,dafd0976adba45e9dde48dab40be08e7d52dfb72,0a5cd11327d50e5906fb4dc08bce5baea6b2d247,2010-04-22 22:09:21+00:00,2015-02-25 22:02:30+00:00,// XXX Not sure about this formula,,,
138,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,47,47,2180b0b9fa03b65f8d9edce2beb2de8ffa2f4d2e,b09a8717be4e90aaea52a3e2f70ee7b8305b9916,2009-05-22 13:55:22+00:00,2009-06-19 03:26:28+00:00,// TODO: Add Serializable documentation,,,
139,src/java/org/apache/commons/math/complex/Complex.java,src/java/org/apache/commons/math/complex/Complex.java,48,48,2180b0b9fa03b65f8d9edce2beb2de8ffa2f4d2e,b09a8717be4e90aaea52a3e2f70ee7b8305b9916,2009-05-22 13:55:22+00:00,2009-06-19 03:26:28+00:00,// TODO: Check Serializable implementation,,,
140,src/java/org/apache/commons/math/complex/ComplexField.java,src/java/org/apache/commons/math/complex/ComplexField.java,34,34,210f2d5661b98a6f5666a9e7a471aa18888eed63,04749a6a8140f1acee2f6c8ddc662655764d7750,2009-05-22 13:48:21+00:00,2009-07-20 16:48:30+00:00,// TODO: Add Serializable documentation,,,
141,src/java/org/apache/commons/math/complex/ComplexField.java,src/java/org/apache/commons/math/complex/ComplexField.java,35,35,210f2d5661b98a6f5666a9e7a471aa18888eed63,04749a6a8140f1acee2f6c8ddc662655764d7750,2009-05-22 13:48:21+00:00,2009-07-20 16:48:30+00:00,// TODO: Check Serializable implementation,,,
142,src/main/java/org/apache/commons/math/distribution/ExponentialDistribution.java,src/main/java/org/apache/commons/math/distribution/ExponentialDistribution.java,172,180,32354a1039ceccd4a6a71baea3329b27dff7a124,f880c83e06411b15eb3577a145f035e11b6ca408,2011-11-26 06:17:49+00:00,2011-12-03 18:23:02+00:00,// TODO: try to improve on this estimate,,,
143,src/main/java/org/apache/commons/math/distribution/ExponentialDistribution.java,src/main/java/org/apache/commons/math/distribution/ExponentialDistribution.java,173,181,32354a1039ceccd4a6a71baea3329b27dff7a124,f880c83e06411b15eb3577a145f035e11b6ca408,2011-11-26 06:17:49+00:00,2011-12-03 18:23:02+00:00,// TODO: what should really happen here is not derive from,,,
144,src/main/java/org/apache/commons/math/distribution/ExponentialDistribution.java,src/main/java/org/apache/commons/math/distribution/ExponentialDistribution.java,175,183,32354a1039ceccd4a6a71baea3329b27dff7a124,f880c83e06411b15eb3577a145f035e11b6ca408,2011-11-26 06:17:49+00:00,2011-12-03 18:23:02+00:00,// TODO: because the inverse cumulative distribution is simple.,,,
145,src/main/java/org/apache/commons/math/distribution/GammaDistribution.java,src/main/java/org/apache/commons/math/distribution/GammaDistribution.java,159,167,32354a1039ceccd4a6a71baea3329b27dff7a124,f880c83e06411b15eb3577a145f035e11b6ca408,2011-11-26 06:17:49+00:00,2011-12-03 18:23:02+00:00,// TODO: try to improve on this estimate,,,
146,src/main/java/org/apache/commons/math/distribution/GammaDistribution.java,src/main/java/org/apache/commons/math/distribution/GammaDistribution.java,166,174,32354a1039ceccd4a6a71baea3329b27dff7a124,f880c83e06411b15eb3577a145f035e11b6ca408,2011-11-26 06:17:49+00:00,2011-12-03 18:23:02+00:00,// TODO: try to improve on this estimate,,,
147,src/main/java/org/apache/commons/math/distribution/GammaDistribution.java,src/main/java/org/apache/commons/math/distribution/GammaDistribution.java,186,194,32354a1039ceccd4a6a71baea3329b27dff7a124,f880c83e06411b15eb3577a145f035e11b6ca408,2011-11-26 06:17:49+00:00,2011-12-03 18:23:02+00:00,// TODO: try to improve on this estimate,,,
148,src/main/java/org/apache/commons/math3/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math4/fitting/GaussianFitter.java,240,243,7ee7843ffe817f79a54f77feebd51506f36c7ef8,0a5cd11327d50e5906fb4dc08bce5baea6b2d247,2012-12-12 14:10:38+00:00,2015-02-25 22:02:30+00:00,// TODO: Exceptions should not be used for flow control.,,,
149,src/main/java/org/apache/commons/math3/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math4/fitting/GaussianFitter.java,339,342,7ee7843ffe817f79a54f77feebd51506f36c7ef8,0a5cd11327d50e5906fb4dc08bce5baea6b2d247,2012-12-12 14:10:38+00:00,2015-02-25 22:02:30+00:00,// TODO: Exceptions should not be used for flow control.,,,
150,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,35,35,2180b0b9fa03b65f8d9edce2beb2de8ffa2f4d2e,d1d32776dfee8251178eae95b0759bec58cf3dc2,2009-05-22 13:55:22+00:00,2009-07-20 16:27:45+00:00,// TODO: Add Serializable documentation,,,
151,src/java/org/apache/commons/math/fraction/BigFraction.java,src/java/org/apache/commons/math/fraction/BigFraction.java,36,36,2180b0b9fa03b65f8d9edce2beb2de8ffa2f4d2e,d1d32776dfee8251178eae95b0759bec58cf3dc2,2009-05-22 13:55:22+00:00,2009-07-20 16:27:45+00:00,// TODO: Check Serializable implementation,,,
152,src/java/org/apache/commons/math/fraction/BigFractionField.java,src/java/org/apache/commons/math/fraction/BigFractionField.java,34,34,210f2d5661b98a6f5666a9e7a471aa18888eed63,fbd46106cb7ec393b58e318efd255f9a2b89b621,2009-05-22 13:48:21+00:00,2009-07-20 16:42:55+00:00,// TODO: Add Serializable documentation,,,
153,src/java/org/apache/commons/math/fraction/BigFractionField.java,src/java/org/apache/commons/math/fraction/BigFractionField.java,35,35,210f2d5661b98a6f5666a9e7a471aa18888eed63,fbd46106cb7ec393b58e318efd255f9a2b89b621,2009-05-22 13:48:21+00:00,2009-07-20 16:42:55+00:00,// TODO: Check Serializable implementation,,,
154,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,35,35,2180b0b9fa03b65f8d9edce2beb2de8ffa2f4d2e,3c186cacbb3bf66be03208355390e441d149869c,2009-05-22 13:55:22+00:00,2009-07-20 16:29:46+00:00,// TODO: Add Serializable documentation,,,
155,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,36,36,2180b0b9fa03b65f8d9edce2beb2de8ffa2f4d2e,3c186cacbb3bf66be03208355390e441d149869c,2009-05-22 13:55:22+00:00,2009-07-20 16:29:46+00:00,// TODO: Check Serializable implementation,,,
156,src/java/org/apache/commons/math/fraction/FractionField.java,src/java/org/apache/commons/math/fraction/FractionField.java,34,34,210f2d5661b98a6f5666a9e7a471aa18888eed63,417766430eabfd2754a5f25115f481a3ecd71f04,2009-05-22 13:48:21+00:00,2009-07-20 16:45:08+00:00,// TODO: Add Serializable documentation,,,
157,src/java/org/apache/commons/math/fraction/FractionField.java,src/java/org/apache/commons/math/fraction/FractionField.java,35,35,210f2d5661b98a6f5666a9e7a471aa18888eed63,417766430eabfd2754a5f25115f481a3ecd71f04,2009-05-22 13:48:21+00:00,2009-07-20 16:45:08+00:00,// TODO: Check Serializable implementation,,,
158,src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java,src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java,108,103,2a3b56daa03253a8abccf5d895a310831ef0275a,19c1c3bb9bc175f9c19b026e7cda1d0fe47ade90,2014-01-29 20:19:20+00:00,2014-02-02 20:52:49+00:00,"// TODO: fix this, it should never happen but it does!",,,
159,src/main/java/org/apache/commons/math3/geometry/spherical/twod/SphericalPolygonsSet.java,src/main/java/org/apache/commons/math3/geometry/spherical/twod/SphericalPolygonsSet.java,490,490,739708f1af316d9b31a83b9e5d0cc7303155853d,e5002ce3f6a625bfd52f63fa38279c09178e8354,2014-02-05 20:42:58+00:00,2014-02-05 20:46:43+00:00,// TODO: compute enclosing small circle,,,
160,src/main/java/org/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer.java,src/main/java/org/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer.java,178,178,250cf6e3669ee3c0cfda5d20761fb1324f594df0,ed39d2dbe2522a7842d8f173af46b483d983cb0a,2012-12-28 20:16:38+00:00,2012-12-29 12:10:52+00:00,"// TODO: remove this for 4.0, when the Weight class will be removed",,,
161,src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java,84,84,250cf6e3669ee3c0cfda5d20761fb1324f594df0,ed39d2dbe2522a7842d8f173af46b483d983cb0a,2012-12-28 20:16:38+00:00,2012-12-29 12:10:52+00:00,"// TODO: remove for 4.0, when the {@link Weight} class will be removed",,,
162,src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java,281,281,250cf6e3669ee3c0cfda5d20761fb1324f594df0,ed39d2dbe2522a7842d8f173af46b483d983cb0a,2012-12-28 20:16:38+00:00,2012-12-29 12:10:52+00:00,"// TODO: remove for 4.0, when the {@link Weight} class will be removed",,,
163,src/java/org/apache/commons/math/optimization/LeastSquaresConverter.java,src/java/org/apache/commons/math/optimization/LeastSquaresConverter.java,60,60,5220875108dea18233023bf518c8fd1011c5c1e2,419531014acc9c937b3579e213d2a57a8f608e7a,2009-05-23 11:44:01+00:00,2009-06-01 13:23:17+00:00,// TODO: Add Serializable documentation,,,
164,src/java/org/apache/commons/math/optimization/LeastSquaresConverter.java,src/java/org/apache/commons/math/optimization/LeastSquaresConverter.java,61,61,5220875108dea18233023bf518c8fd1011c5c1e2,419531014acc9c937b3579e213d2a57a8f608e7a,2009-05-23 11:44:01+00:00,2009-06-01 13:23:17+00:00,// TODO: Check Serializable implementation,,,
165,src/java/org/apache/commons/math/optimization/MultiStartMultivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartMultivariateRealOptimizer.java,42,42,b41ff57526cadeb5ab8407dd962d61a615181b42,5fc860d2c151e7d39b49961fe8514563f890e9ce,2009-05-23 11:26:56+00:00,2009-06-20 18:17:32+00:00,// TODO: Add Serializable documentation,,,
166,src/java/org/apache/commons/math/optimization/MultiStartMultivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartMultivariateRealOptimizer.java,43,43,b41ff57526cadeb5ab8407dd962d61a615181b42,5fc860d2c151e7d39b49961fe8514563f890e9ce,2009-05-23 11:26:56+00:00,2009-06-20 18:17:32+00:00,// TODO: Check Serializable implementation,,,
167,src/java/org/apache/commons/math/optimization/SimpleRealPointChecker.java,src/java/org/apache/commons/math/optimization/SimpleRealPointChecker.java,37,37,b41ff57526cadeb5ab8407dd962d61a615181b42,6135415f3184a4983f80141ccbb0907e0224bbb6,2009-05-23 11:26:56+00:00,2009-07-20 19:34:06+00:00,// TODO: Add Serializable documentation,,,
168,src/java/org/apache/commons/math/optimization/SimpleRealPointChecker.java,src/java/org/apache/commons/math/optimization/SimpleRealPointChecker.java,38,38,b41ff57526cadeb5ab8407dd962d61a615181b42,6135415f3184a4983f80141ccbb0907e0224bbb6,2009-05-23 11:26:56+00:00,2009-07-20 19:34:06+00:00,// TODO: Check Serializable implementation,,,
169,src/java/org/apache/commons/math/optimization/SimpleScalarValueChecker.java,src/java/org/apache/commons/math/optimization/SimpleScalarValueChecker.java,37,37,b41ff57526cadeb5ab8407dd962d61a615181b42,6135415f3184a4983f80141ccbb0907e0224bbb6,2009-05-23 11:26:56+00:00,2009-07-20 19:34:06+00:00,// TODO: Add Serializable documentation,,,
170,src/java/org/apache/commons/math/optimization/SimpleScalarValueChecker.java,src/java/org/apache/commons/math/optimization/SimpleScalarValueChecker.java,38,38,b41ff57526cadeb5ab8407dd962d61a615181b42,6135415f3184a4983f80141ccbb0907e0224bbb6,2009-05-23 11:26:56+00:00,2009-07-20 19:34:06+00:00,// TODO: Check Serializable implementation,,,
171,src/java/org/apache/commons/math/optimization/SimpleVectorialValueChecker.java,src/java/org/apache/commons/math/optimization/SimpleVectorialValueChecker.java,37,37,b41ff57526cadeb5ab8407dd962d61a615181b42,6135415f3184a4983f80141ccbb0907e0224bbb6,2009-05-23 11:26:56+00:00,2009-07-20 19:34:06+00:00,// TODO: Add Serializable documentation,,,
172,src/java/org/apache/commons/math/optimization/SimpleVectorialValueChecker.java,src/java/org/apache/commons/math/optimization/SimpleVectorialValueChecker.java,38,38,b41ff57526cadeb5ab8407dd962d61a615181b42,6135415f3184a4983f80141ccbb0907e0224bbb6,2009-05-23 11:26:56+00:00,2009-07-20 19:34:06+00:00,// TODO: Check Serializable implementation,,,
173,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,216,289,d451a1fb921f7dec1bde47a05a37fbed4df5a1ba,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2011-08-06 17:06:38+00:00,2015-02-25 21:34:53+00:00,"// System.out.println(""bobyqa""); // XXX
printMethod(); // XXX",[215],[275],['9ca170c67f068fd2bc568126c90bc8c0a9f6855b']
174,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,372,378,d451a1fb921f7dec1bde47a05a37fbed4df5a1ba,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2011-08-06 17:06:38+00:00,2015-02-25 21:34:53+00:00,"// System.out.println(""bobyqb""); // XXX
printMethod(); // XXX",[371],[361],['9ca170c67f068fd2bc568126c90bc8c0a9f6855b']
175,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,779,779,d451a1fb921f7dec1bde47a05a37fbed4df5a1ba,4b1377907d9aff7682fc42fad9c6907e8ae9513c,2011-08-06 17:06:38+00:00,2011-08-16 21:15:56+00:00,d__1 = vlag.getEntry(knew); // XXX Same statement as a few lines below?,,,
176,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,786,754,d451a1fb921f7dec1bde47a05a37fbed4df5a1ba,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2011-08-06 17:06:38+00:00,2015-02-25 21:34:53+00:00,cauchy = ZERO; // XXX Useful statement?,,,
177,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,790,790,d451a1fb921f7dec1bde47a05a37fbed4df5a1ba,4b1377907d9aff7682fc42fad9c6907e8ae9513c,2011-08-06 17:06:38+00:00,2011-08-16 21:15:56+00:00,d__1 = vlag.getEntry(knew); // XXX Same statement as a few lines above?,,,
178,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,1338,1262,d451a1fb921f7dec1bde47a05a37fbed4df5a1ba,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2011-08-06 17:06:38+00:00,2015-02-25 21:34:53+00:00,"// System.out.println(""altmov""); // XXX
printMethod(); // XXX",[1268],[1245],['9ca170c67f068fd2bc568126c90bc8c0a9f6855b']
179,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,1721,1584,d451a1fb921f7dec1bde47a05a37fbed4df5a1ba,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2011-08-06 17:06:38+00:00,2015-02-25 21:34:53+00:00,"// System.out.println(""prelim""); // XXX
printMethod(); // XXX",[1613],[1567],['9ca170c67f068fd2bc568126c90bc8c0a9f6855b']
180,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,1965,1966,d451a1fb921f7dec1bde47a05a37fbed4df5a1ba,4b1377907d9aff7682fc42fad9c6907e8ae9513c,2011-08-06 17:06:38+00:00,2011-08-16 21:15:56+00:00,"// System.out.println(""rescue""); // XXX",,,
181,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,2508,1810,d451a1fb921f7dec1bde47a05a37fbed4df5a1ba,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2011-08-06 17:06:38+00:00,2015-02-25 21:34:53+00:00,"// System.out.println(""trsbox""); // XXX
printMethod(); // XXX",[1857],[1793],['9ca170c67f068fd2bc568126c90bc8c0a9f6855b']
182,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,2996,2297,d451a1fb921f7dec1bde47a05a37fbed4df5a1ba,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2011-08-06 17:06:38+00:00,2015-02-25 21:34:53+00:00,"// System.out.println(""update""); // XXX
printMethod(); // XXX",[2343],[2281],['9ca170c67f068fd2bc568126c90bc8c0a9f6855b']
183,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,3002,2303,d451a1fb921f7dec1bde47a05a37fbed4df5a1ba,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2011-08-06 17:06:38+00:00,2015-02-25 21:34:53+00:00,// XXX Should probably be split into two arrays.,,,
184,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,3089,2381,d451a1fb921f7dec1bde47a05a37fbed4df5a1ba,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2011-08-06 17:06:38+00:00,2015-02-25 21:34:53+00:00,"// System.out.println(""setup""); // XXX
printMethod(); // XXX",[2424],[2362],['9ca170c67f068fd2bc568126c90bc8c0a9f6855b']
185,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,58,58,7c6dd40b330d85ae718e867c4d5cee0b1c4f317b,3872917effefb08c997431a8bdf3aaabbc159fac,2011-08-13 09:08:39+00:00,2011-08-15 21:16:57+00:00,"private static final int INDEX_OFFSET = 1; // XXX to become ""0"" when all loops are 0-based.",,,
186,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,1999,1923,9c4571dd506954f0893b85ec4b82e5bc69fe2c16,9ca170c67f068fd2bc568126c90bc8c0a9f6855b,2011-08-16 21:55:49+00:00,2011-10-24 21:09:32+00:00,"// System.out.println(""loop in trsbox: state="" + state); // XXX",,,
187,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,479,470,591e3d166e0e3202c5a4a577077a5a43c101f65e,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2011-08-18 22:53:48+00:00,2015-02-25 21:34:53+00:00,"throw new PathIsExploredException(); // XXX
// throw new PathIsExploredException(); // XXX",[469],[469],['88b7d7f6fc23b89ba0fd6fc32ddbaf87cb805496']
188,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,576,569,1f0c4c94514e40479aedf6ed41b2c88a44dfbe33,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2011-08-19 21:35:19+00:00,2015-02-25 21:34:53+00:00,"// sum = sumVector.getEntry(k); // XXX ""testAckley"" and ""testDiffPow"" fail.",,,
189,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,1699,1636,1f0c4c94514e40479aedf6ed41b2c88a44dfbe33,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2011-08-19 21:35:19+00:00,2015-02-25 21:34:53+00:00,"throw new PathIsExploredException(); // XXX
// throw new PathIsExploredException(); // XXX",[1637],[1637],['88b7d7f6fc23b89ba0fd6fc32ddbaf87cb805496']
190,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,1707,1644,1f0c4c94514e40479aedf6ed41b2c88a44dfbe33,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2011-08-19 21:35:19+00:00,2015-02-25 21:34:53+00:00,"throw new PathIsExploredException(); // XXX
// throw new PathIsExploredException(); // XXX",[1645],[1645],['88b7d7f6fc23b89ba0fd6fc32ddbaf87cb805496']
191,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,1711,1648,1f0c4c94514e40479aedf6ed41b2c88a44dfbe33,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2011-08-19 21:35:19+00:00,2015-02-25 21:34:53+00:00,"throw new PathIsExploredException(); // XXX
// throw new PathIsExploredException(); // XXX",[1649],[1649],['88b7d7f6fc23b89ba0fd6fc32ddbaf87cb805496']
192,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,1723,1660,1f0c4c94514e40479aedf6ed41b2c88a44dfbe33,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2011-08-19 21:35:19+00:00,2015-02-25 21:34:53+00:00,"throw new PathIsExploredException(); // XXX
//                     throw new PathIsExploredException(); // XXX",[1660],[1660],['0093f7b0a2a9e06ec5b5e1e551676269171c3e3d']
193,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,1771,1710,1f0c4c94514e40479aedf6ed41b2c88a44dfbe33,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2011-08-19 21:35:19+00:00,2015-02-25 21:34:53+00:00,"throw new PathIsExploredException(); // XXX
// throw new PathIsExploredException(); // XXX",[1711],[1711],['88b7d7f6fc23b89ba0fd6fc32ddbaf87cb805496']
194,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,1796,1733,1f0c4c94514e40479aedf6ed41b2c88a44dfbe33,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2011-08-19 21:35:19+00:00,2015-02-25 21:34:53+00:00,"// zmat.setEntry(nfm, nfxm, Math.sqrt(HALF) * recip); // XXX ""testAckley"" and ""testDiffPow"" fail.
// zMatrix.setEntry(nfm, nfxm, Math.sqrt(HALF) * recip); // XXX ""testAckley"" and ""testDiffPow"" fail.
// zMatrix.setEntry(nfm, nfxm, FastMath.sqrt(HALF) * recip); // XXX ""testAckley"" and ""testDiffPow"" fail.","[1762, 1733]","[1716, 1734]","['9ca170c67f068fd2bc568126c90bc8c0a9f6855b', 'e4c6bb0b27ee625380416a503c7fa73610db649c']"
195,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,1813,1750,1f0c4c94514e40479aedf6ed41b2c88a44dfbe33,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2011-08-19 21:35:19+00:00,2015-02-25 21:34:53+00:00,"throw new PathIsExploredException(); // XXX
//                 throw new PathIsExploredException(); // XXX",[1750],[1752],['0093f7b0a2a9e06ec5b5e1e551676269171c3e3d']
196,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,551,542,67480f06e848657b66c20743afecb3d0af3e34bb,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2011-09-06 13:05:55+00:00,2015-02-25 21:34:53+00:00,"throw new PathIsExploredException(); // XXX
// throw new PathIsExploredException(); // XXX",[541],[541],['88b7d7f6fc23b89ba0fd6fc32ddbaf87cb805496']
197,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,728,735,e0f684748b88a85917f2345a3e9b9189c7c72997,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2011-10-18 23:12:14+00:00,2015-02-25 21:34:53+00:00,"// beta += dx * dx + dsq * (xoptsq + dx + dx + HALF * dsq) - bsum; // XXX ""testAckley"" and ""testDiffPow"" fail.",,,
198,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,729,736,e0f684748b88a85917f2345a3e9b9189c7c72997,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2011-10-18 23:12:14+00:00,2015-02-25 21:34:53+00:00,"// beta = dx * dx + dsq * (xoptsq + 2 * dx + HALF * dsq) + beta - bsum; // XXX ""testDiffPow"" fails.",,,
199,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,430,447,9ca170c67f068fd2bc568126c90bc8c0a9f6855b,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2011-10-24 21:09:32+00:00,2015-02-25 21:34:53+00:00,printState(20); // XXX,,,
200,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,466,483,9ca170c67f068fd2bc568126c90bc8c0a9f6855b,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2011-10-24 21:09:32+00:00,2015-02-25 21:34:53+00:00,printState(60); // XXX,,,
201,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,540,557,9ca170c67f068fd2bc568126c90bc8c0a9f6855b,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2011-10-24 21:09:32+00:00,2015-02-25 21:34:53+00:00,printState(90); // XXX,,,
202,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,645,662,9ca170c67f068fd2bc568126c90bc8c0a9f6855b,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2011-10-24 21:09:32+00:00,2015-02-25 21:34:53+00:00,printState(210); // XXX,,,
203,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,671,688,9ca170c67f068fd2bc568126c90bc8c0a9f6855b,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2011-10-24 21:09:32+00:00,2015-02-25 21:34:53+00:00,printState(230); // XXX,,,
204,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,794,811,9ca170c67f068fd2bc568126c90bc8c0a9f6855b,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2011-10-24 21:09:32+00:00,2015-02-25 21:34:53+00:00,printState(360); // XXX,,,
205,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,1103,1120,9ca170c67f068fd2bc568126c90bc8c0a9f6855b,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2011-10-24 21:09:32+00:00,2015-02-25 21:34:53+00:00,printState(650); // XXX,,,
206,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,1155,1172,9ca170c67f068fd2bc568126c90bc8c0a9f6855b,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2011-10-24 21:09:32+00:00,2015-02-25 21:34:53+00:00,printState(680); // XXX,,,
207,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,1180,1197,9ca170c67f068fd2bc568126c90bc8c0a9f6855b,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2011-10-24 21:09:32+00:00,2015-02-25 21:34:53+00:00,printState(720); // XXX,,,
208,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,1861,1877,9ca170c67f068fd2bc568126c90bc8c0a9f6855b,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2011-10-24 21:09:32+00:00,2015-02-25 21:34:53+00:00,printState(20); // XXX,,,
209,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,1865,1881,9ca170c67f068fd2bc568126c90bc8c0a9f6855b,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2011-10-24 21:09:32+00:00,2015-02-25 21:34:53+00:00,printState(30); // XXX,,,
210,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,1898,1914,9ca170c67f068fd2bc568126c90bc8c0a9f6855b,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2011-10-24 21:09:32+00:00,2015-02-25 21:34:53+00:00,printState(50); // XXX,,,
211,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,2006,2022,9ca170c67f068fd2bc568126c90bc8c0a9f6855b,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2011-10-24 21:09:32+00:00,2015-02-25 21:34:53+00:00,printState(90); // XXX,,,
212,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,2015,2031,9ca170c67f068fd2bc568126c90bc8c0a9f6855b,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2011-10-24 21:09:32+00:00,2015-02-25 21:34:53+00:00,printState(100); // XXX,,,
213,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,2042,2058,9ca170c67f068fd2bc568126c90bc8c0a9f6855b,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2011-10-24 21:09:32+00:00,2015-02-25 21:34:53+00:00,printState(120); // XXX,,,
214,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,2113,2129,9ca170c67f068fd2bc568126c90bc8c0a9f6855b,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2011-10-24 21:09:32+00:00,2015-02-25 21:34:53+00:00,printState(150); // XXX,,,
215,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,2198,2214,9ca170c67f068fd2bc568126c90bc8c0a9f6855b,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2011-10-24 21:09:32+00:00,2015-02-25 21:34:53+00:00,printState(190); // XXX,,,
216,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,2224,2240,9ca170c67f068fd2bc568126c90bc8c0a9f6855b,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2011-10-24 21:09:32+00:00,2015-02-25 21:34:53+00:00,printState(210); // XXX,,,
217,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,2452,2434,9ca170c67f068fd2bc568126c90bc8c0a9f6855b,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2011-10-24 21:09:32+00:00,2015-02-25 21:34:53+00:00,// XXX utility for figuring out call sequence.,,,
218,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,2459,2441,9ca170c67f068fd2bc568126c90bc8c0a9f6855b,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2011-10-24 21:09:32+00:00,2015-02-25 21:34:53+00:00,// XXX utility for figuring out call sequence.,,,
219,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,2463,2445,9ca170c67f068fd2bc568126c90bc8c0a9f6855b,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2011-10-24 21:09:32+00:00,2015-02-25 21:34:53+00:00,// XXX utility for figuring out call sequence.,,,
220,src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateVectorOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BaseAbstractMultivariateVectorOptimizer.java,349,320,d0d4760c97ac6e725a37758743199d3c35c85559,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-10-26 18:19:40+00:00,2015-02-25 21:34:53+00:00,// XXX Temporary code until the new internal data is used everywhere.,,,
221,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/CMAESOptimizer.java,679,680,0912bac5201d98af64a832766146797a9d75bb6f,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-10-19 14:20:16+00:00,2015-02-25 21:34:53+00:00,"// XXX Remove this block in 4.0 (check performed in ""Sigma"" class).",,,
222,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/CMAESOptimizer.java,696,697,0912bac5201d98af64a832766146797a9d75bb6f,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-10-19 14:20:16+00:00,2015-02-25 21:34:53+00:00,// XXX Line below to replace the current one in 4.0 (MATH-879).,,,
223,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/CMAESOptimizer.java,703,704,0912bac5201d98af64a832766146797a9d75bb6f,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-10-19 14:20:16+00:00,2015-02-25 21:34:53+00:00,// XXX Line below to replace the current one in 4.0 (MATH-868).,,,
224,src/main/java/org/apache/commons/math3/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/PowellOptimizer.java,96,96,c7c27f910a99aca49a91d725a2410dae3bb2709c,48d4f49acb2625a0147a116e6a23b20dfbe73398,2012-04-26 10:02:48+00:00,2012-04-28 23:05:47+00:00,// required for the optimizer itself. XXX Is it still true with the new checker?,,,
225,src/main/java/org/apache/commons/math3/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math4/optimization/fitting/GaussianFitter.java,244,243,8abe21fe47c128c797bf122b30c8fca9f75652d0,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-08-18 01:09:25+00:00,2015-02-25 21:34:53+00:00,// TODO: Exceptions should not be used for flow control.,,,
226,src/main/java/org/apache/commons/math3/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math4/optimization/fitting/GaussianFitter.java,343,342,8abe21fe47c128c797bf122b30c8fca9f75652d0,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-08-18 01:09:25+00:00,2015-02-25 21:34:53+00:00,// TODO: Exceptions should not be used for flow control.,,,
227,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math4/optimization/general/AbstractLeastSquaresOptimizer.java,395,497,d0d4760c97ac6e725a37758743199d3c35c85559,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-10-26 18:19:40+00:00,2015-02-25 21:34:53+00:00,// XXX Conversion will be removed when the generic argument of the,,,
228,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math4/optimization/general/AbstractLeastSquaresOptimizer.java,409,514,d0d4760c97ac6e725a37758743199d3c35c85559,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-10-26 18:19:40+00:00,2015-02-25 21:34:53+00:00,// XXX The conversion won't be necessary when the generic argument of,,,
229,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math4/optimization/general/AbstractLeastSquaresOptimizer.java,411,516,d0d4760c97ac6e725a37758743199d3c35c85559,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-10-26 18:19:40+00:00,2015-02-25 21:34:53+00:00,"// XXX ""jF"" is not strictly necessary anymore but is currently more",,,
230,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,186,186,54cfc6ce0a5d405008ae0cdcbab793cec680d1bc,6080bc88a8e9d8c2f9e5e76dd79cc6f2e143927b,2012-11-08 10:50:34+00:00,2012-11-12 11:36:40+00:00,// XXX What is the purpose of the multiplication by -1?,,,
231,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,190,190,54cfc6ce0a5d405008ae0cdcbab793cec680d1bc,6080bc88a8e9d8c2f9e5e76dd79cc6f2e143927b,2012-11-08 10:50:34+00:00,2012-11-12 11:36:40+00:00,"// XXX For backwards-compatibility (field ""weightedResidualJacobian""",,,
232,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,215,215,54cfc6ce0a5d405008ae0cdcbab793cec680d1bc,6080bc88a8e9d8c2f9e5e76dd79cc6f2e143927b,2012-11-08 10:50:34+00:00,2012-11-12 11:36:40+00:00,"// Compute weighted residuals. XXX To be moved to ""LevenbergMarquardtOptimizer"".",,,
233,src/main/java/org/apache/commons/math3/optimization/general/GaussNewtonOptimizer.java,src/main/java/org/apache/commons/math3/optimization/general/GaussNewtonOptimizer.java,145,146,2ce650bf54758aee82508eb7f06b46fbacb2c597,6080bc88a8e9d8c2f9e5e76dd79cc6f2e143927b,2012-11-08 12:48:54+00:00,2012-11-12 11:36:40+00:00,"// XXX Minus sign could be left out if ""weightedJacobian""",,,
234,src/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,src/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,267,267,5220875108dea18233023bf518c8fd1011c5c1e2,15c9f02e5cec03298c28f20190c73398694188fa,2009-05-23 11:44:01+00:00,2009-06-20 23:37:47+00:00,// TODO: Add Serializable documentation,,,
235,src/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,src/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,268,268,5220875108dea18233023bf518c8fd1011c5c1e2,15c9f02e5cec03298c28f20190c73398694188fa,2009-05-23 11:44:01+00:00,2009-06-20 23:37:47+00:00,// TODO: Check Serializable implementation,,,
236,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,170,169,a21faeae6ed850c618b4fb739a422e3b144db135,b9559bfce972a8b079ebc5ac8b6326a524ce29f8,2010-08-30 13:06:22+00:00,2010-11-25 16:22:00+00:00,throw new ConvergenceException(); // XXX ugly workaround.,,,
237,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math4/optimization/general/NonLinearConjugateGradientOptimizer.java,162,187,b9559bfce972a8b079ebc5ac8b6326a524ce29f8,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2010-11-25 16:22:00+00:00,2015-02-25 21:34:53+00:00,"// XXX Last parameters is set to a value clode to zero in order to
// XXX Last parameters is set to a value close to zero in order to",[160],[155],['611ddc1966bfc820a7f89164fd49c0bcaa6b7b55']
238,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,185,185,a21faeae6ed850c618b4fb739a422e3b144db135,51aa6e6ca29a8265784c037bc3a42455329ee4ab,2010-08-30 13:06:22+00:00,2010-09-23 12:11:56+00:00,"// XXX Main code should be here, using ""startValue"" for the first start.",,,
239,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,186,186,a21faeae6ed850c618b4fb739a422e3b144db135,51aa6e6ca29a8265784c037bc3a42455329ee4ab,2010-08-30 13:06:22+00:00,2010-09-23 12:11:56+00:00,"// XXX This method should set ""startValue"" to min + 0.5 * (max - min)",,,
240,src/java/org/apache/commons/math/RandomDataImpl.java,src/java/org/apache/commons/math/random/RandomDataImpl.java,202,227,60f4205f1ff413a8075705787199c719ad943e40,e389289e779612c5930d7c292bbbc94027695ae5,2003-05-18 00:58:52+00:00,2003-11-01 16:09:22+00:00,"return null; // gulp FIXME? -- this *should* never fail. OK to swallow????
return null; // gulp FIXME? -- this *should* never fail.",[203],[210],['ba74c2510f0d1812b7a5eeef55a1f29ea0e06e09']
241,src/java/org/apache/commons/math/random/RandomDataImpl.java,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,227,244,b3a6a6b3b5b269cf6ccab91588c320d925dac9ae,de33e91191b8ebd3cae27619a89a00de0d130b58,2003-11-14 22:25:28+00:00,2009-09-01 20:05:22+00:00,"return null; // gulp FIXME? -- this *should* never fail.
return null; // gulp FIXME? -- this *should* never fail.
return null; // gulp FIXME? -- this *should* never fail.","[221, 240]","[240, 240]","['24f51faee2e231cb65feef7b11749fd62ec4b1a2', '169271dd31cc1156da367f5ceae7d5b88ec1f88b']"
242,src/java/org/apache/commons/math/special/Gamma.java,src/java/org/apache/commons/math/special/Gamma.java,66,66,2dec2474f9f5b39e6e0ffca795f52b9b1b88fdf3,b58585fb8def076b355699c8ee496b889534d744,2003-06-05 14:03:53+00:00,2003-06-11 01:19:19+00:00,// TODO: try to reduce this.  regularizedGammaP doesn't converge very,,,
243,src/main/java/org/apache/commons/math3/special/Gamma.java,src/main/java/org/apache/commons/math3/special/Gamma.java,642,709,cf1f553dc66931091beb6994ac95083c761f4302,fec77409580f1f1608b881a5add07ca16d081de0,2012-08-31 02:48:29+00:00,2012-11-26 19:45:52+00:00,// TODO Check whether x is a negative integer,,,
244,src/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java,src/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java,31,31,b41ff57526cadeb5ab8407dd962d61a615181b42,bf740630ae735351a73ff5fe62a93ef5c29c2a74,2009-05-23 11:26:56+00:00,2009-07-20 20:13:24+00:00,// TODO: Add Serializable documentation,,,
245,src/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java,src/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java,32,32,b41ff57526cadeb5ab8407dd962d61a615181b42,bf740630ae735351a73ff5fe62a93ef5c29c2a74,2009-05-23 11:26:56+00:00,2009-07-20 20:13:24+00:00,// TODO: Check Serializable implementation,,,
246,src/main/java/org/apache/commons/math3/util/Combinations.java,src/main/java/org/apache/commons/math3/util/Combinations.java,106,138,77ba0961e519b851f6fe329a3c4cfd0b180a760a,034ed33e47a8487fbd3fda7eb555b053d6d0545d,2013-09-04 07:28:48+00:00,2013-09-06 16:15:34+00:00,"// TODO: once getNatural is extracted from RandomDataGenerator, use it",,,
247,src/test/org/apache/commons/math/analysis/NewtonSolverTest.java,src/test/org/apache/commons/math/analysis/solvers/NewtonSolverTest.java,42,44,eb6fb6cda45d8bf83aa8347eccd36d2ef68b0694,9c7a059486dceb61ecd9a16d33a1a3ffba4e94fd,2004-07-17 21:19:39+00:00,2009-07-20 16:32:34+00:00,"//TODO:  create abstract solver test class, move these there",,,
248,src/test/org/apache/commons/math/analysis/NewtonSolverTest.java,src/test/org/apache/commons/math/analysis/solvers/NewtonSolverTest.java,61,63,71a29150bb9794bdcece023f961831d904055719,9c7a059486dceb61ecd9a16d33a1a3ffba4e94fd,2008-12-07 20:24:10+00:00,2009-07-20 16:32:34+00:00,"//TODO:  create abstract solver test class, move these there",,,
249,src/test/java/org/apache/commons/math3/complex/ComplexTest.java,src/test/java/org/apache/commons/math4/complex/ComplexTest.java,800,835,bae46709ecb13f80aaad0d279b3618ab83d09275,e4e1ac23c734f65686be4bc0e503f82f941afd4d,2015-01-12 20:08:44+00:00,2015-02-16 22:37:23+00:00,"System.out.println(""expReal=""+FastMath.exp(negInfOne.getReal())); // TODO temp debug",,,
250,src/test/java/org/apache/commons/math3/complex/ComplexTest.java,src/test/java/org/apache/commons/math4/complex/ComplexTest.java,801,836,bae46709ecb13f80aaad0d279b3618ab83d09275,e4e1ac23c734f65686be4bc0e503f82f941afd4d,2015-01-12 20:08:44+00:00,2015-02-16 22:37:23+00:00,"System.out.println(""cosImag=""+FastMath.cos(negInfOne.getImaginary())); // TODO temp debug",,,
251,src/test/java/org/apache/commons/math3/complex/ComplexTest.java,src/test/java/org/apache/commons/math4/complex/ComplexTest.java,802,837,bae46709ecb13f80aaad0d279b3618ab83d09275,e4e1ac23c734f65686be4bc0e503f82f941afd4d,2015-01-12 20:08:44+00:00,2015-02-16 22:37:23+00:00,"System.out.println(""sinImag=""+FastMath.sin(negInfOne.getImaginary())); // TODO temp debug",,,
252,src/test/java/org/apache/commons/math3/complex/ComplexTest.java,src/test/java/org/apache/commons/math4/complex/ComplexTest.java,804,839,bae46709ecb13f80aaad0d279b3618ab83d09275,e4e1ac23c734f65686be4bc0e503f82f941afd4d,2015-01-12 20:08:44+00:00,2015-02-16 22:37:23+00:00,"System.out.println(""result=""+exp); // TODO temp debug",,,
253,src/test/java/org/apache/commons/math3/complex/ComplexTest.java,src/test/java/org/apache/commons/math4/complex/ComplexTest.java,800,827,dc5f850d1d9b0b952b7f0dabd6778cf0f7675cba,e4e1ac23c734f65686be4bc0e503f82f941afd4d,2015-01-12 21:07:54+00:00,2015-02-16 22:37:23+00:00,// TODO: temp debug start,,,
254,src/test/java/org/apache/commons/math3/complex/ComplexTest.java,src/test/java/org/apache/commons/math4/complex/ComplexTest.java,805,834,dc5f850d1d9b0b952b7f0dabd6778cf0f7675cba,e4e1ac23c734f65686be4bc0e503f82f941afd4d,2015-01-12 21:07:54+00:00,2015-02-16 22:37:23+00:00,// TODO: temp debug end,,,
255,src/test/java/org/apache/commons/math3/complex/ComplexTest.java,src/test/java/org/apache/commons/math4/complex/ComplexTest.java,799,821,b4abfb93676fb0abbab1d9bac40ba2714a3872f5,35378d9c4a3a656b881e77fb405fabd22f7803eb,2015-01-13 01:23:51+00:00,2018-02-28 02:32:19+00:00,public void testJava() {// TODO more debug,,,
256,src/test/java/org/apache/commons/math3/complex/ComplexTest.java,src/test/java/org/apache/commons/math4/complex/ComplexTest.java,840,841,9a9e7268162f9fed146c74a8acbd234d9bc2ed84,e4e1ac23c734f65686be4bc0e503f82f941afd4d,2015-01-13 02:00:47+00:00,2015-02-16 22:37:23+00:00,"System.out.println(""<<testExpInf4()""); // TODO debug",,,
257,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,162,124,0718895962e9d43858cbbe49cd592b5e2d0920c9,73812e41db0aa040b53c6ff3f35804c037aa2a9b,2003-11-19 03:22:54+00:00,2004-05-11 02:12:11+00:00,// TODO Auto-generated catch block,,,
258,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,175,137,0718895962e9d43858cbbe49cd592b5e2d0920c9,73812e41db0aa040b53c6ff3f35804c037aa2a9b,2003-11-19 03:22:54+00:00,2004-05-11 02:12:11+00:00,// TODO Auto-generated catch block,,,
259,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,202,164,0718895962e9d43858cbbe49cd592b5e2d0920c9,56d545478a8899fd940e428adf3f827f6f1b347d,2003-11-19 03:22:54+00:00,2004-05-23 00:33:41+00:00,// TODO Auto-generated catch block,,,
260,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,213,175,0718895962e9d43858cbbe49cd592b5e2d0920c9,56d545478a8899fd940e428adf3f827f6f1b347d,2003-11-19 03:22:54+00:00,2004-05-23 00:33:41+00:00,// TODO Auto-generated catch block,,,
261,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,223,185,0718895962e9d43858cbbe49cd592b5e2d0920c9,56d545478a8899fd940e428adf3f827f6f1b347d,2003-11-19 03:22:54+00:00,2004-05-23 00:33:41+00:00,// TODO Auto-generated catch block,,,
262,src/test/org/apache/commons/math/distribution/FDistributionTest.java,src/test/org/apache/commons/math/distribution/FDistributionTest.java,123,85,0718895962e9d43858cbbe49cd592b5e2d0920c9,56d545478a8899fd940e428adf3f827f6f1b347d,2003-11-19 03:22:54+00:00,2004-05-23 00:33:41+00:00,// TODO Auto-generated catch block,,,
263,src/test/org/apache/commons/math/distribution/FDistributionTest.java,src/test/org/apache/commons/math/distribution/FDistributionTest.java,133,95,0718895962e9d43858cbbe49cd592b5e2d0920c9,56d545478a8899fd940e428adf3f827f6f1b347d,2003-11-19 03:22:54+00:00,2004-05-23 00:33:41+00:00,// TODO Auto-generated catch block,,,
264,src/test/org/apache/commons/math/distribution/FDistributionTest.java,src/test/org/apache/commons/math/distribution/FDistributionTest.java,72,72,1d5a4e2d3d0fbd894b4e344a3d6ea601c14ab80e,f0789658718849f51184888e6580ad286d239a0c,2004-05-30 01:39:33+00:00,2004-07-24 21:41:37+00:00,//TODO: decide what to do about p = 1.  This currently blows up the solver.,,,
265,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,93,55,0718895962e9d43858cbbe49cd592b5e2d0920c9,56d545478a8899fd940e428adf3f827f6f1b347d,2003-11-19 03:22:54+00:00,2004-05-23 00:33:41+00:00,// TODO Auto-generated catch block,,,
266,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,107,69,0718895962e9d43858cbbe49cd592b5e2d0920c9,56d545478a8899fd940e428adf3f827f6f1b347d,2003-11-19 03:22:54+00:00,2004-05-23 00:33:41+00:00,// TODO Auto-generated catch block,,,
267,src/test/org/apache/commons/math/distribution/HypergeometricDistributionTest.java,src/test/org/apache/commons/math/distribution/HypergeometricDistributionTest.java,164,126,0718895962e9d43858cbbe49cd592b5e2d0920c9,73812e41db0aa040b53c6ff3f35804c037aa2a9b,2003-11-19 03:22:54+00:00,2004-05-11 02:12:11+00:00,// TODO Auto-generated catch block,,,
268,src/test/org/apache/commons/math/distribution/HypergeometricDistributionTest.java,src/test/org/apache/commons/math/distribution/HypergeometricDistributionTest.java,176,138,0718895962e9d43858cbbe49cd592b5e2d0920c9,73812e41db0aa040b53c6ff3f35804c037aa2a9b,2003-11-19 03:22:54+00:00,2004-05-11 02:12:11+00:00,// TODO Auto-generated catch block,,,
269,src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java,src/test/java/org/apache/commons/math4/distribution/NormalDistributionTest.java,164,170,5fe9b36c454f8a38416a96455da6ffeadbbe8a37,ef84681392520396745def163b692a002b269be7,2010-11-30 11:55:22+00:00,2018-01-25 17:36:19+00:00,"// TODO: once MATH-364 is resolved, replace 9 with 30",,,
270,src/test/org/apache/commons/math/distribution/TDistributionTest.java,src/test/org/apache/commons/math/distribution/TDistributionTest.java,175,137,0718895962e9d43858cbbe49cd592b5e2d0920c9,d948617ae5a351c22ba170e4bb5a1358e89fb6bd,2003-11-19 03:22:54+00:00,2004-02-28 21:58:33+00:00,// TODO Auto-generated catch block,,,
271,src/test/org/apache/commons/math/distribution/TDistributionTest.java,src/test/org/apache/commons/math/distribution/TDistributionTest.java,185,147,0718895962e9d43858cbbe49cd592b5e2d0920c9,d948617ae5a351c22ba170e4bb5a1358e89fb6bd,2003-11-19 03:22:54+00:00,2004-02-28 21:58:33+00:00,// TODO Auto-generated catch block,,,
272,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,900,900,b25f448d2f934c08fc4de4ed11b654c87b218bab,2a9cbbab467052a523d3d59e3d66cf1ef527fb68,2012-10-21 20:08:32+00:00,2012-10-22 19:21:36+00:00,// TODO: the following assertion fails and should not,,,
273,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,975,975,b25f448d2f934c08fc4de4ed11b654c87b218bab,2a9cbbab467052a523d3d59e3d66cf1ef527fb68,2012-10-21 20:08:32+00:00,2012-10-22 19:21:36+00:00,// TODO: the resulting polygon has two boundaries but should have only one,,,
274,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerTestValidation.java,src/test/java/org/apache/commons/math4/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerTestValidation.java,84,87,7ee7843ffe817f79a54f77feebd51506f36c7ef8,e31fde875c6075ae3da9572c6f910cc29ceaf6c3,2012-12-12 14:10:38+00:00,2015-04-11 14:05:10+00:00,final int numObs = 100; // XXX Should be a command-line option.,,,
275,src/test/java/org/apache/commons/math3/optimization/MultivariateDifferentiableMultiStartOptimizerTest.java,src/test/java/org/apache/commons/math4/optimization/MultivariateDifferentiableMultiStartOptimizerTest.java,43,50,c8b8e612430cdc2f54d0bbb3f25f1c956963d99b,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-09-14 20:17:00+00:00,2015-02-25 21:34:53+00:00,// TODO: the wrapper around NonLinearConjugateGradientOptimizer is a temporary hack for,,,
276,src/test/java/org/apache/commons/math3/optimization/MultivariateDifferentiableVectorMultiStartOptimizerTest.java,src/test/java/org/apache/commons/math4/optimization/MultivariateDifferentiableVectorMultiStartOptimizerTest.java,102,108,c8b8e612430cdc2f54d0bbb3f25f1c956963d99b,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-09-14 20:17:00+00:00,2015-02-25 21:34:53+00:00,// TODO: the wrapper around GaussNewtonOptimizer is a temporary hack for,,,
277,src/test/java/org/apache/commons/math3/optimization/MultivariateDifferentiableVectorMultiStartOptimizerTest.java,src/test/java/org/apache/commons/math4/optimization/MultivariateDifferentiableVectorMultiStartOptimizerTest.java,164,170,c8b8e612430cdc2f54d0bbb3f25f1c956963d99b,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-09-14 20:17:00+00:00,2015-02-25 21:34:53+00:00,// TODO: the wrapper around GaussNewtonOptimizer is a temporary hack for,,,
278,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizerTest.java,277,319,d451a1fb921f7dec1bde47a05a37fbed4df5a1ba,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2011-08-06 17:06:38+00:00,2015-02-25 21:34:53+00:00,"System.out.println(func.getClass().getName() + "" BEGIN""); // XXX
//         System.out.println(func.getClass().getName() + "" BEGIN""); // XXX",[311],[311],['88b7d7f6fc23b89ba0fd6fc32ddbaf87cb805496']
279,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizerTest.java,299,345,d451a1fb921f7dec1bde47a05a37fbed4df5a1ba,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2011-08-06 17:06:38+00:00,2015-02-25 21:34:53+00:00,"System.out.println(func.getClass().getName() + "" END""); // XXX
//         System.out.println(func.getClass().getName() + "" END""); // XXX",[332],[332],['88b7d7f6fc23b89ba0fd6fc32ddbaf87cb805496']
280,src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizerTest.java,238,241,8a25d709f50ce97d50c653dbb5897c01e6b5d9cb,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2013-03-29 15:48:27+00:00,2015-02-25 21:34:53+00:00,// TODO: this test is temporarily disabled for 3.2 release as a bug in Cobertura,,,
281,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerTestValidation.java,src/test/java/org/apache/commons/math4/optimization/general/AbstractLeastSquaresOptimizerTestValidation.java,82,83,94e0cbdcde5cdd29aad59915ac6eb5e6c04491b6,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-05-14 10:50:51+00:00,2015-02-25 21:34:53+00:00,final int numObs = 100; // XXX Should be a command-line option.,,,
282,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,98,98,58f407fc8a3329bd2d38451ad4c992dc71441097,962315ba9322bb96d5b1941c4272501cc7cc050e,2010-07-26 12:17:45+00:00,2010-07-28 12:03:41+00:00,// XXX Python: -0.27195612805911351 (instead of -0.2719561279558559).,,,
283,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,100,100,58f407fc8a3329bd2d38451ad4c992dc71441097,962315ba9322bb96d5b1941c4272501cc7cc050e,2010-07-26 12:17:45+00:00,2010-07-28 12:03:41+00:00,// XXX Python: 15 (instead of 18).,,,
284,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,102,102,58f407fc8a3329bd2d38451ad4c992dc71441097,962315ba9322bb96d5b1941c4272501cc7cc050e,2010-07-26 12:17:45+00:00,2010-07-28 12:03:41+00:00,// XXX Python: 11 (instead of 17).,,,
285,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,108,108,58f407fc8a3329bd2d38451ad4c992dc71441097,962315ba9322bb96d5b1941c4272501cc7cc050e,2010-07-26 12:17:45+00:00,2010-07-28 12:03:41+00:00,// XXX Python: 0.82221643488363705 (instead of 0.8222164326561908).,,,
286,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,110,110,58f407fc8a3329bd2d38451ad4c992dc71441097,962315ba9322bb96d5b1941c4272501cc7cc050e,2010-07-26 12:17:45+00:00,2010-07-28 12:03:41+00:00,// XXX Python: 25 (instead of 43).,,,
287,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,112,112,58f407fc8a3329bd2d38451ad4c992dc71441097,962315ba9322bb96d5b1941c4272501cc7cc050e,2010-07-26 12:17:45+00:00,2010-07-28 12:03:41+00:00,// XXX Python: 21 (instead of 24).,,,
288,src/test/java/org/apache/commons/math/random/MersenneTwisterTest.java,src/test/java/org/apache/commons/math4/random/MersenneTwisterTest.java,29,31,b468defc676cddd3af2953f5e033f449d9cc661d,595f3fb79a885f8620f77ebcccf8da65b5024b4e,2011-08-02 19:48:18+00:00,2016-05-29 20:19:13+00:00,// TODO: Some of the tests moved up to RandomGeneratorAbstractTest tested alternative seeding / constructors,,,
289,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math3/random/RandomDataGeneratorTest.java,230,424,a72bbf44cf9fcbf2d5015e7ccf0e29d67403a696,232b96ceb131ff8cb58fbbdd021c22f7e5160239,2009-09-28 10:36:46+00:00,2013-07-02 20:00:47+00:00,"// TODO: increase upper bound to 40 when MATH-294 is resolved
// TODO: once MATH-294 is resolved, increase upper bounds on test means
// TODO: When MATH-282 is resolved, s/3000/10000 below
// TODO: When MATH-282 is resolved, s/3000/10000 below","[230, 231, 241]","[231, 241, 241]","['340943f1f5a189e49caad23ce2500e5bc9a25332', '2c8a114f766d05929e908fd79c5e4baf5a3841ae', '0f98e5c13db5d3c9144111319f9b144cd590b974']"
290,src/test/java/org/apache/commons/math3/random/RandomGeneratorAbstractTest.java,src/test/java/org/apache/commons/math3/random/RandomGeneratorAbstractTest.java,164,164,83dfa0a5c07b100a1ba2f73a30413483ae2a8f5b,26f3166f1156ecede6e046ce2d74ac5bc3bf64fb,2012-04-26 01:29:46+00:00,2013-03-10 13:02:04+00:00,@Override // TODO is this supposed to be an override?,,,
291,src/userguide/java/org/apache/commons/math3/userguide/genetics/ImageEvolutionExample.java,src/userguide/java/org/apache/commons/math3/userguide/genetics/ImageEvolutionExample.java,72,72,1cdc902f3d7cf877b4db7a31f19eb1dfd2fade3e,e9ea52189a92f7e2ab051e4d75c4e0c872034b18,2013-12-09 22:34:28+00:00,2013-12-10 21:40:32+00:00,// TODO: improve this,,,
292,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,1102,1102,87b597c622e5e83beb5e45cdc4bd06266a3f9020,d05fac054e8e4f3b03794540a759ad02f340be0e,2012-08-08 20:33:43+00:00,2012-08-10 18:33:06+00:00,// TODO compute higher order derivatives,,,
293,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,1130,1130,87b597c622e5e83beb5e45cdc4bd06266a3f9020,d05fac054e8e4f3b03794540a759ad02f340be0e,2012-08-08 20:33:43+00:00,2012-08-10 18:33:06+00:00,// TODO compute higher order derivatives,,,
294,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,1158,1158,87b597c622e5e83beb5e45cdc4bd06266a3f9020,d05fac054e8e4f3b03794540a759ad02f340be0e,2012-08-08 20:33:43+00:00,2012-08-10 18:33:06+00:00,// TODO compute higher order derivatives,,,
295,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,1187,1294,87b597c622e5e83beb5e45cdc4bd06266a3f9020,07aa93aae7bf33ac5d3044366f2dc2e1117785dd,2012-08-08 20:33:43+00:00,2012-08-13 13:06:26+00:00,// TODO compute higher order derivatives,,,
296,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,1228,1357,87b597c622e5e83beb5e45cdc4bd06266a3f9020,b6d40681620660194efb4d05b6384c41f3ba8208,2012-08-08 20:33:43+00:00,2012-08-13 14:14:17+00:00,// TODO,,,
297,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,103,103,a235488095cc73e661c1bc817d54f8b7aa12ef39,e389289e779612c5930d7c292bbbc94027695ae5,2003-06-25 01:29:18+00:00,2003-11-01 16:09:22+00:00,// TODO avoid recomputing the term,,,
298,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,120,124,a235488095cc73e661c1bc817d54f8b7aa12ef39,609917a77cd495b8955122c9bbf2b5858168579f,2003-06-25 01:29:18+00:00,2003-09-26 19:30:33+00:00,// TODO: This relies on compiler for CSE of delta/d[i]. Is this a reasonable assumption?,,,
299,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,139,142,a235488095cc73e661c1bc817d54f8b7aa12ef39,609917a77cd495b8955122c9bbf2b5858168579f,2003-06-25 01:29:18+00:00,2003-09-26 19:30:33+00:00,// TODO: This relies on compiler for CSE of xval[i + 1] - xval[i]. Is this a reasonable assumption?,,,
300,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,148,149,a235488095cc73e661c1bc817d54f8b7aa12ef39,609917a77cd495b8955122c9bbf2b5858168579f,2003-06-25 01:29:18+00:00,2003-09-26 19:30:33+00:00,"// TODO: again, CSE aspects.",,,
301,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,160,160,a235488095cc73e661c1bc817d54f8b7aa12ef39,e389289e779612c5930d7c292bbbc94027695ae5,2003-06-25 01:29:18+00:00,2003-11-01 16:09:22+00:00,"// TODO: copy xval, unless copied in CubicSplineFunction constructor",,,
302,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,103,105,b3a6a6b3b5b269cf6ccab91588c320d925dac9ae,54309a11ca93adf855703a7949415bc1ab906396,2003-11-14 22:25:28+00:00,2003-12-27 15:22:34+00:00,// TODO avoid recomputing the term,,,
303,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,160,124,b3a6a6b3b5b269cf6ccab91588c320d925dac9ae,36fcb5c54de400e93e244338156ae5f8f065a6ca,2003-11-14 22:25:28+00:00,2004-04-02 21:16:21+00:00,"// TODO: copy xval, unless copied in CubicSplineFunction constructor",,,
304,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,79,43,54309a11ca93adf855703a7949415bc1ab906396,36fcb5c54de400e93e244338156ae5f8f065a6ca,2003-12-27 15:22:34+00:00,2004-04-02 21:16:21+00:00,// TODO: What's this good for? Did I really write this???,,,
305,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,84,48,54309a11ca93adf855703a7949415bc1ab906396,36fcb5c54de400e93e244338156ae5f8f065a6ca,2003-12-27 15:22:34+00:00,2004-04-02 21:16:21+00:00,// TODO: Separation should be checked too (not implemented: which criteria?).,,,
306,src/java/org/apache/commons/math/analysis/PolynomialFunction.java,src/java/org/apache/commons/math/analysis/PolynomialFunction.java,86,52,c9a095511525083ce5124ab7b94af52f419057f4,f41527455cc9220383e7eb8eeca0caa369e1f104,2003-11-15 18:44:52+00:00,2004-02-20 06:17:54+00:00,"// TODO: should copy the arguments here, for safety. This could be a major overhead.",,,
307,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,284,284,4117b2a53aa93f26d66b5bd8594b211ff61bd343,55a1b8090af334ab4c6db9809ff762c181366481,2011-02-27 12:58:10+00:00,2011-02-27 13:31:47+00:00,//         s.append(Double.toString(coefficients[0])); XXX,,,
308,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,304,304,4117b2a53aa93f26d66b5bd8594b211ff61bd343,55a1b8090af334ab4c6db9809ff762c181366481,2011-02-27 12:58:10+00:00,2011-02-27 13:31:47+00:00,//             s.append(Double.toString(absAi)); XXX,,,
309,src/java/org/apache/commons/math/analysis/PolynomialSplineFunction.java,src/java/org/apache/commons/math/analysis/PolynomialSplineFunction.java,91,90,2203f7578375c8f4c49c1bc74375fef0ecdcdac8,c82f497b9abd8ca3b94b1679ae571fe949686bcd,2004-04-02 20:58:11+00:00,2004-04-23 18:16:06+00:00,// TODO: check that knots is increasing,,,
310,src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java,src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java,205,205,29a297de44d2f4dcc3d7e2c22c313f51414dab8a,2f332839813214a5ca7d9a606bd9d87fd699ae9c,2012-12-14 14:57:56+00:00,2012-12-14 16:28:23+00:00,useRandomDataImpl = false; // XXX Remove in 4.0,,,
311,src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java,src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java,501,501,29a297de44d2f4dcc3d7e2c22c313f51414dab8a,2f332839813214a5ca7d9a606bd9d87fd699ae9c,2012-12-14 14:57:56+00:00,2012-12-14 16:28:23+00:00,// XXX backward compatibility.,,,
312,src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java,src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java,628,628,29a297de44d2f4dcc3d7e2c22c313f51414dab8a,2f332839813214a5ca7d9a606bd9d87fd699ae9c,2012-12-14 14:57:56+00:00,2012-12-14 16:28:23+00:00,// XXX backward compatibility.,,,
313,src/main/java/org/apache/commons/math3/distribution/MixtureMultivariateRealDistribution.java,src/main/java/org/apache/commons/math3/distribution/MixtureMultivariateRealDistribution.java,143,143,ea138c2da2c7dfd4b7e947fbad8c10d1fda745c2,e0426dfbfb494dac67cc2d40b8d4fd5adeea69c8,2012-10-19 11:00:53+00:00,2012-10-24 21:27:44+00:00,// using the same sequence of random numbers. XXX,,,
314,src/main/java/org/apache/commons/math3/distribution/MixtureMultivariateRealDistribution.java,src/main/java/org/apache/commons/math3/distribution/MixtureMultivariateRealDistribution.java,145,145,ea138c2da2c7dfd4b7e947fbad8c10d1fda745c2,e0426dfbfb494dac67cc2d40b8d4fd5adeea69c8,2012-10-19 11:00:53+00:00,2012-10-24 21:27:44+00:00,distribution.get(i).reseedRandomGenerator(seed); // XXX original code.,,,
315,src/main/java/org/apache/commons/math3/fitting/GaussianCurveFitter.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/fitting/GaussianCurveFitter.java,302,173,eb1a3f00a265fb23e839e2b99096f12833105424,,2013-08-23 15:39:55+00:00,,// TODO: Exceptions should not be used for flow control.,,,
316,src/main/java/org/apache/commons/math3/fitting/GaussianCurveFitter.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/fitting/GaussianCurveFitter.java,401,404,eb1a3f00a265fb23e839e2b99096f12833105424,1d9670cb12613a2d8c27ad318237e000668f8836,2013-08-23 15:39:55+00:00,2021-05-28 22:34:28+00:00,// TODO: Exceptions should not be used for flow control.,,,
317,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/fitting/SimpleCurveFitter.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/fitting/SimpleCurveFitter.java,305,302,1d9670cb12613a2d8c27ad318237e000668f8836,,2021-05-28 22:34:28+00:00,,// TODO: Exceptions should not be used for flow control.,,,
318,src/main/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/fitting/leastsquares/GaussNewtonOptimizer.java,47,52,3e18e999c7a0648cc9eee72202e07669df3c4ffb,,2014-02-18 14:32:36+00:00,,//TODO move to linear package and expand options?,,,
319,src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.java,src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.java,58,58,7460c082a39251193108da52ce05e63f3e3796d1,06d490a4bd763fb634596f2755b436f7f8fbbad8,2014-02-18 14:31:34+00:00,2014-02-18 14:31:53+00:00,//TODO adapter?,,,
320,src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/fitting/leastsquares/LeastSquaresFactory.java,120,213,06d490a4bd763fb634596f2755b436f7f8fbbad8,,2014-02-18 14:31:53+00:00,,"//TODO more efficient implementation
// TODO more efficient implementation",[174],[197],['0714c7cbe61a8db315e2aac578614f5a706f8014']
321,src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/fitting/leastsquares/LeastSquaresFactory.java,269,327,0079828734d62dbc2b44ccf4f21e3dc1daa7b90b,,2014-02-18 14:32:54+00:00,,"//TODO get array from RealVector without copying?
//TODO get array from RealVector without copying?",[264],[311],['0714c7cbe61a8db315e2aac578614f5a706f8014']
322,src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/fitting/leastsquares/LeastSquaresOptimizer.java,26,40,7460c082a39251193108da52ce05e63f3e3796d1,,2014-02-18 14:31:34+00:00,,//TODO Solution?,,,
323,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,721,745,afce27e29d42c5caa46a2c7496fedac647405ae9,1213c8a2dd83c3cb6931334626955ae853924e25,2012-05-06 19:40:57+00:00,2012-07-18 20:49:43+00:00,"// TODO: we can not handle a zero matrix, what exception to throw?",,,
324,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,1324,1366,760078b411fa3c0a2914574756ef458c3fc68d00,fd9fed269487504137885d3b0722a04e7c39339a,2011-08-28 12:58:57+00:00,2011-08-29 01:44:24+00:00,// TODO It is not specified in the javadoc that getData should,,,
325,src/main/java/org/apache/commons/math3/linear/RealVector.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/linear/RealVector.java,217,217,6b5659033e48e96c7d7bddab9a715132b6661e19,,2012-05-28 08:31:13+00:00,,// TODO Use more specific error message,,,
326,src/main/java/org/apache/commons/math3/linear/RealVectorPreservingVisitor.java,src/main/java/org/apache/commons/math3/linear/RealVectorPreservingVisitor.java,52,52,97a5210fd70a226f2d18b27d6beb74ebba70966b,6b5659033e48e96c7d7bddab9a715132b6661e19,2012-05-28 07:54:16+00:00,2012-05-28 08:31:13+00:00,// TODO Check above javadoc comment (add proper link to methods in,,,
327,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,181,173,7ee7843ffe817f79a54f77feebd51506f36c7ef8,f00bd95151792341002bf4e987f403f0124bb323,2012-12-12 14:10:38+00:00,2013-03-09 17:37:30+00:00,generator.nextVector(); // XXX This does not enforce bounds!,,,
328,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,167,160,77910da210dd4349c83d3455968ce14a2635845d,f00bd95151792341002bf4e987f403f0124bb323,2012-12-13 13:29:56+00:00,2013-03-09 17:37:30+00:00,final double[] min = getLowerBound(); // XXX Should be used to enforce bounds (see below).,,,
329,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,168,161,77910da210dd4349c83d3455968ce14a2635845d,f00bd95151792341002bf4e987f403f0124bb323,2012-12-13 13:29:56+00:00,2013-03-09 17:37:30+00:00,final double[] max = getUpperBound(); // XXX Should be used to enforce bounds (see below).,,,
330,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java,235,229,7ee7843ffe817f79a54f77feebd51506f36c7ef8,f0ae42aa934c10686c613277bd7a0837f6a1602d,2012-12-12 14:10:38+00:00,2014-02-28 16:23:26+00:00,// XXX Last parameters is set to a value close to zero in order to,,,
331,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,286,296,7ee7843ffe817f79a54f77feebd51506f36c7ef8,,2012-12-12 14:10:38+00:00,,printMethod(); // XXX,,,
332,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,375,385,7ee7843ffe817f79a54f77feebd51506f36c7ef8,,2012-12-12 14:10:38+00:00,,printMethod(); // XXX,,,
333,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,444,455,7ee7843ffe817f79a54f77feebd51506f36c7ef8,,2012-12-12 14:10:38+00:00,,printState(20); // XXX,,,
334,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,467,478,7ee7843ffe817f79a54f77feebd51506f36c7ef8,,2012-12-12 14:10:38+00:00,,// throw new PathIsExploredException(); // XXX,,,
335,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,480,490,7ee7843ffe817f79a54f77feebd51506f36c7ef8,,2012-12-12 14:10:38+00:00,,printState(60); // XXX,,,
336,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,539,549,7ee7843ffe817f79a54f77feebd51506f36c7ef8,,2012-12-12 14:10:38+00:00,,// throw new PathIsExploredException(); // XXX,,,
337,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,554,563,7ee7843ffe817f79a54f77feebd51506f36c7ef8,,2012-12-12 14:10:38+00:00,,printState(90); // XXX,,,
338,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,566,575,7ee7843ffe817f79a54f77feebd51506f36c7ef8,,2012-12-12 14:10:38+00:00,,"// sum = sumVector.getEntry(k); // XXX ""testAckley"" and ""testDiffPow"" fail.",,,
339,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,659,667,7ee7843ffe817f79a54f77feebd51506f36c7ef8,,2012-12-12 14:10:38+00:00,,printState(210); // XXX,,,
340,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,685,692,7ee7843ffe817f79a54f77feebd51506f36c7ef8,,2012-12-12 14:10:38+00:00,,printState(230); // XXX,,,
341,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,732,739,7ee7843ffe817f79a54f77feebd51506f36c7ef8,,2012-12-12 14:10:38+00:00,,"// beta += dx * dx + dsq * (xoptsq + dx + dx + HALF * dsq) - bsum; // XXX ""testAckley"" and ""testDiffPow"" fail.",,,
342,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,733,740,7ee7843ffe817f79a54f77feebd51506f36c7ef8,,2012-12-12 14:10:38+00:00,,"// beta = dx * dx + dsq * (xoptsq + 2 * dx + HALF * dsq) + beta - bsum; // XXX ""testDiffPow"" fails.",,,
343,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,751,758,7ee7843ffe817f79a54f77feebd51506f36c7ef8,,2012-12-12 14:10:38+00:00,,cauchy = ZERO; // XXX Useful statement?,,,
344,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,808,813,7ee7843ffe817f79a54f77feebd51506f36c7ef8,,2012-12-12 14:10:38+00:00,,printState(360); // XXX,,,
345,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,1117,1123,7ee7843ffe817f79a54f77feebd51506f36c7ef8,,2012-12-12 14:10:38+00:00,,printState(650); // XXX,,,
346,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,1169,1175,7ee7843ffe817f79a54f77feebd51506f36c7ef8,,2012-12-12 14:10:38+00:00,,printState(680); // XXX,,,
347,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,1194,1200,7ee7843ffe817f79a54f77feebd51506f36c7ef8,,2012-12-12 14:10:38+00:00,,printState(720); // XXX,,,
348,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,1259,1266,7ee7843ffe817f79a54f77feebd51506f36c7ef8,,2012-12-12 14:10:38+00:00,,printMethod(); // XXX,,,
349,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,1583,1587,7ee7843ffe817f79a54f77feebd51506f36c7ef8,,2012-12-12 14:10:38+00:00,,printMethod(); // XXX,,,
350,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,1635,1639,7ee7843ffe817f79a54f77feebd51506f36c7ef8,,2012-12-12 14:10:38+00:00,,// throw new PathIsExploredException(); // XXX,,,
351,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,1643,1647,7ee7843ffe817f79a54f77feebd51506f36c7ef8,,2012-12-12 14:10:38+00:00,,// throw new PathIsExploredException(); // XXX,,,
352,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,1647,1651,7ee7843ffe817f79a54f77feebd51506f36c7ef8,,2012-12-12 14:10:38+00:00,,// throw new PathIsExploredException(); // XXX,,,
353,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,1659,1663,7ee7843ffe817f79a54f77feebd51506f36c7ef8,,2012-12-12 14:10:38+00:00,,//                     throw new PathIsExploredException(); // XXX,,,
354,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,1709,1713,7ee7843ffe817f79a54f77feebd51506f36c7ef8,,2012-12-12 14:10:38+00:00,,// throw new PathIsExploredException(); // XXX,,,
355,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,1734,1736,7ee7843ffe817f79a54f77feebd51506f36c7ef8,,2012-12-12 14:10:38+00:00,,"// zMatrix.setEntry(nfm, nfxm, Math.sqrt(HALF) * recip); // XXX ""testAckley"" and ""testDiffPow"" fail.
// zMatrix.setEntry(nfm, nfxm, FastMath.sqrt(HALF) * recip); // XXX ""testAckley"" and ""testDiffPow"" fail.
// zMatrix.setEntry(nfm, nfxm, AccurateMath.sqrt(HALF) * recip); // XXX ""testAckley"" and ""testDiffPow"" fail.
// zMatrix.setEntry(nfm, nfxm, JdkMath.sqrt(HALF) * recip); // XXX ""testAckley"" and ""testDiffPow"" fail.","[1728, 1741, 1742]","[1729, 1741, 1742]","['e4c6bb0b27ee625380416a503c7fa73610db649c', 'e85e8b53f22d6b470492862a67f39068117bd175', '21e230ae83f57f8823f1ce4d1a2155a515ad107f']"
356,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,1751,1752,7ee7843ffe817f79a54f77feebd51506f36c7ef8,,2012-12-12 14:10:38+00:00,,//                 throw new PathIsExploredException(); // XXX,,,
357,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,1811,1813,7ee7843ffe817f79a54f77feebd51506f36c7ef8,,2012-12-12 14:10:38+00:00,,printMethod(); // XXX,,,
358,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,1879,1880,7ee7843ffe817f79a54f77feebd51506f36c7ef8,,2012-12-12 14:10:38+00:00,,printState(20); // XXX,,,
359,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,1883,1884,7ee7843ffe817f79a54f77feebd51506f36c7ef8,,2012-12-12 14:10:38+00:00,,printState(30); // XXX,,,
360,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,1916,1917,7ee7843ffe817f79a54f77feebd51506f36c7ef8,,2012-12-12 14:10:38+00:00,,printState(50); // XXX,,,
361,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,2024,2025,7ee7843ffe817f79a54f77feebd51506f36c7ef8,,2012-12-12 14:10:38+00:00,,printState(90); // XXX,,,
362,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,2033,2033,7ee7843ffe817f79a54f77feebd51506f36c7ef8,,2012-12-12 14:10:38+00:00,,printState(100); // XXX,,,
363,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,2060,2060,7ee7843ffe817f79a54f77feebd51506f36c7ef8,,2012-12-12 14:10:38+00:00,,printState(120); // XXX,,,
364,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,2131,2131,7ee7843ffe817f79a54f77feebd51506f36c7ef8,,2012-12-12 14:10:38+00:00,,printState(150); // XXX,,,
365,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,2216,2216,7ee7843ffe817f79a54f77feebd51506f36c7ef8,,2012-12-12 14:10:38+00:00,,printState(190); // XXX,,,
366,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,2242,2242,7ee7843ffe817f79a54f77feebd51506f36c7ef8,,2012-12-12 14:10:38+00:00,,printState(210); // XXX,,,
367,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,2299,2299,7ee7843ffe817f79a54f77feebd51506f36c7ef8,,2012-12-12 14:10:38+00:00,,printMethod(); // XXX,,,
368,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,2305,2305,7ee7843ffe817f79a54f77feebd51506f36c7ef8,,2012-12-12 14:10:38+00:00,,// XXX Should probably be split into two arrays.,,,
369,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,2383,2383,7ee7843ffe817f79a54f77feebd51506f36c7ef8,,2012-12-12 14:10:38+00:00,,printMethod(); // XXX,,,
370,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,2451,2436,7ee7843ffe817f79a54f77feebd51506f36c7ef8,,2012-12-12 14:10:38+00:00,,// XXX utility for figuring out call sequence.,,,
371,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,2458,2443,7ee7843ffe817f79a54f77feebd51506f36c7ef8,,2012-12-12 14:10:38+00:00,,// XXX utility for figuring out call sequence.,,,
372,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,2462,2447,7ee7843ffe817f79a54f77feebd51506f36c7ef8,,2012-12-12 14:10:38+00:00,,// XXX utility for figuring out call sequence.,,,
373,src/main/java/org/apache/commons/math/stat/Frequency.java,src/main/java/org/apache/commons/math4/stat/Frequency.java,68,85,058ff00332fdb3b1e3db82db10ff8e5864ca4f02,843fbfbc3428819dc0763fa470a8af64c0e74775,2010-03-14 02:15:01+00:00,2017-05-10 07:56:52+00:00,"@SuppressWarnings(""unchecked"") // TODO is the cast OK?",,,
374,src/main/java/org/apache/commons/math3/stat/inference/KolmogorovSmirnovTest.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/stat/inference/KolmogorovSmirnovTest.java,618,881,99189ff527554aa345f63fc038fc8eacf28cbb39,,2014-02-26 23:14:08+00:00,,"// TODO: for small t (say less than 1), the alternative expansion in part 3 of [1]",,,
375,src/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,146,146,e7911e6efae8d19cb378a594929445f1bff547c1,e7ffb6ebc9973c6262e2e17cf650ddbb2488c2b5,2009-01-04 20:39:45+00:00,2009-01-05 01:01:16+00:00,//TODO:  find a way to use QR decomp to avoid inverting XX' here,,,
376,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,201,192,37d642ec3056d6add8a535e9ef8d47992e3c0ae7,c643b22bfc91f7b01a0b0e20f59c6dc825b02eab,2011-12-31 09:38:11+00:00,2012-01-31 07:02:58+00:00,// TODO Is this necessary?,,,
377,src/main/java/org/apache/commons/math3/util/CombinatoricsUtils.java,src/main/java/org/apache/commons/math3/util/CombinatoricsUtils.java,448,448,ad35857d0fab949b00dafc22b20b8e93bcb603d2,77ba0961e519b851f6fe329a3c4cfd0b180a760a,2013-08-24 21:55:35+00:00,2013-09-04 07:28:48+00:00,"// TODO: once getNatural is extracted from RandomDataGenerator, use it",,,
378,src/java/org/apache/commons/math/util/DefaultTransformer.java,src/java/org/apache/commons/math/util/DefaultTransformer.java,33,33,982deb25d520441750a0e1169c68d8c54260d8b2,77b5519151d3212065db80f7c082dcc50ad8857b,2009-05-22 14:04:56+00:00,2009-07-20 19:50:12+00:00,// TODO: Add Serializable documentation,,,
379,src/java/org/apache/commons/math/util/DefaultTransformer.java,src/java/org/apache/commons/math/util/DefaultTransformer.java,34,34,982deb25d520441750a0e1169c68d8c54260d8b2,77b5519151d3212065db80f7c082dcc50ad8857b,2009-05-22 14:04:56+00:00,2009-07-20 19:50:12+00:00,// TODO: Check Serializable implementation,,,
380,src/test/java/org/apache/commons/math4/PerfTestUtils.java,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/PerfTestUtils.java,200,203,e0b2c86c8754312d1e89307fbf84e6efbfa9fe0b,,2016-02-03 23:25:56+00:00,,// TODO: user-defined parameter?,,,
381,src/test/java/org/apache/commons/math3/analysis/interpolation/TricubicInterpolatorTest.java,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/analysis/interpolation/TricubicInterpolatorTest.java,223,231,753f278d10fc0c92e912965379401ac182644101,,2014-12-14 17:25:08+00:00,,"expected, result, 1e-1); // XXX Too high tolerance!",,,
382,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/analysis/solvers/UnivariateSolverUtilsTest.java,55,51,daa37ac393c6201ceea11c732da5d5b31dfcee2b,,2010-10-01 16:56:22+00:00,,"//             fail(""Expecting IllegalArgumentException""); // TODO needs rework since convergence behaviour was changed
//             Assert.fail(""Expecting IllegalArgumentException""); // TODO needs rework since convergence behaviour was changed
//             Assert.fail(""Expecting MathIllegalArgumentException""); // TODO needs rework since convergence behaviour was changed","[55, 59]","[60, 60]","['b9559bfce972a8b079ebc5ac8b6326a524ce29f8', 'b6f92546451fecbd207b2d67e0854fe1e8ce27e0']"
383,src/test/org/apache/commons/math/EmpiricalDistributionTest.java,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,101,102,5de3587b86ffc735020c3b06e60c993cfc4e53ab,e389289e779612c5930d7c292bbbc94027695ae5,2003-05-21 14:21:15+00:00,2003-11-01 16:09:22+00:00,//TODO: replace with statistical tests,,,
384,src/test/org/apache/commons/math/EmpiricalDistributionTest.java,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,153,154,5de3587b86ffc735020c3b06e60c993cfc4e53ab,e389289e779612c5930d7c292bbbc94027695ae5,2003-05-21 14:21:15+00:00,2003-11-01 16:09:22+00:00,//TODO: replace these with statistical tests -- refactor as necessary,,,
385,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/distribution/EmpiricalDistributionTest.java,102,98,b3a6a6b3b5b269cf6ccab91588c320d925dac9ae,,2003-11-14 22:25:28+00:00,,//TODO: replace with statistical tests,,,
386,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,154,156,b3a6a6b3b5b269cf6ccab91588c320d925dac9ae,90be3c8e9d20b8537d9b0b5057daa37289cc1e9a,2003-11-14 22:25:28+00:00,2004-01-29 05:27:54+00:00,//TODO: replace these with statistical tests -- refactor as necessary,,,
387,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/distribution/EmpiricalDistributionTest.java,148,135,0edbfb6b8900124432c4d1ef8d74f90c015643ac,9dbceb0ed1d58c6ccb4d841a2384fe8f6d98149c,2004-02-12 04:35:09+00:00,2021-07-20 16:07:12+00:00,//TODO: replace with statistical tests,,,
388,src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java,src/test/java/org/apache/commons/math4/random/EmpiricalDistributionTest.java,58,62,29a297de44d2f4dcc3d7e2c22c313f51414dab8a,3fd9cf1753a24587ee9d64d2133784adaa099219,2012-12-14 14:57:56+00:00,2015-02-25 20:43:34+00:00,"//         empiricalDistribution = new EmpiricalDistribution(100, new RandomDataImpl()); // XXX Deprecated API",,,
389,src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java,src/test/java/org/apache/commons/math4/random/EmpiricalDistributionTest.java,63,67,29a297de44d2f4dcc3d7e2c22c313f51414dab8a,3fd9cf1753a24587ee9d64d2133784adaa099219,2012-12-14 14:57:56+00:00,2015-02-25 20:43:34+00:00,"//             empiricalDistribution2 = new EmpiricalDistribution(100, new RandomDataImpl()); // XXX Deprecated API",,,
390,src/test/java/org/apache/commons/math4/random/EmpiricalDistributionTest.java,src/test/java/org/apache/commons/math4/distribution/EmpiricalDistributionTest.java,260,260,78ebedb0f1c84787e622a92cc47c2d28a0e1e4e5,595f3fb79a885f8620f77ebcccf8da65b5024b4e,2016-04-21 22:03:03+00:00,2016-05-29 20:19:13+00:00,"// XXX REMOVE (test ""embedded RNG"" which is to be removed)",,,
391,src/test/java/org/apache/commons/math4/random/EmpiricalDistributionTest.java,src/test/java/org/apache/commons/math4/distribution/EmpiricalDistributionTest.java,278,278,78ebedb0f1c84787e622a92cc47c2d28a0e1e4e5,595f3fb79a885f8620f77ebcccf8da65b5024b4e,2016-04-21 22:03:03+00:00,2016-05-29 20:19:13+00:00,"// XXX REMOVE (test ""embedded RNG"" which is to be removed)",,,
392,src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java,src/test/java/org/apache/commons/math4/distribution/IntegerDistributionAbstractTest.java,170,172,422fc2a42662797aeb3a419b84a66e12debd4556,bf5d19e08bfc74c56bc3d3828e5c3d93abbdff8b,2013-10-20 20:42:41+00:00,2019-12-17 02:14:12+00:00,"// FIXME: when logProbability methods are added to IntegerDistribution in 4.0, remove cast below",,,
393,src/test/java/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/java/org/apache/commons/math/distribution/RealDistributionAbstractTest.java,182,194,439cb994d17bf227e47db9ae076c0f3ea9f3d61c,02d7cea111cfe0bebba42d1c030dadd1b82036db,2010-03-17 16:45:31+00:00,2011-12-03 06:17:19+00:00,//TODO: remove cast when density(double) is added to ContinuousDistribution,,,
394,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math4/distribution/RealDistributionAbstractTest.java,156,185,bfdf1c44af26540c3749806e300ed0ff580efcda,3fd9cf1753a24587ee9d64d2133784adaa099219,2012-08-04 19:40:03+00:00,2015-02-25 20:43:34+00:00,"// XXX In 4.0, ""cumulativeProbability(double,double)"" must be replaced with ""probability"" (MATH-839).",,,
395,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math4/distribution/RealDistributionAbstractTest.java,237,288,bfdf1c44af26540c3749806e300ed0ff580efcda,3fd9cf1753a24587ee9d64d2133784adaa099219,2012-08-04 19:40:03+00:00,2015-02-25 20:43:34+00:00,"// XXX In 4.0, ""cumulativeProbability(double,double)"" must be replaced with ""probability"" (MATH-839).",,,
396,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math4/distribution/RealDistributionAbstractTest.java,247,298,bfdf1c44af26540c3749806e300ed0ff580efcda,3fd9cf1753a24587ee9d64d2133784adaa099219,2012-08-04 19:40:03+00:00,2015-02-25 20:43:34+00:00,"// XXX In 4.0, ""cumulativeProbability(double,double)"" must be replaced with ""probability"" (MATH-839).",,,
397,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math4/distribution/RealDistributionAbstractTest.java,260,311,bfdf1c44af26540c3749806e300ed0ff580efcda,3fd9cf1753a24587ee9d64d2133784adaa099219,2012-08-04 19:40:03+00:00,2015-02-25 20:43:34+00:00,"// XXX In 4.0, ""cumulativeProbability(double,double)"" must be replaced with ""probability"" (MATH-839).",,,
398,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math4/distribution/RealDistributionAbstractTest.java,333,378,04b34cc1a560fd334c5602c62fc6efdcb8f90581,3fd9cf1753a24587ee9d64d2133784adaa099219,2012-09-05 06:53:45+00:00,2015-02-25 20:43:34+00:00,distribution.cumulativeProbability(  // FIXME @4.0 when rename happens,,,
399,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math4/distribution/RealDistributionAbstractTest.java,232,233,422fc2a42662797aeb3a419b84a66e12debd4556,3fd9cf1753a24587ee9d64d2133784adaa099219,2013-10-20 20:42:41+00:00,2015-02-25 20:43:34+00:00,"// FIXME: when logProbability methods are added to RealDistribution in 4.0, remove cast below",,,
400,src/test/java/org/apache/commons/math3/distribution/fitting/MultivariateNormalMixtureExpectationMaximizationTest.java,src/test/java/org/apache/commons/math3/distribution/fitting/MultivariateNormalMixtureExpectationMaximizationTest.java,39,39,9c90639c10fea427d701632ed780e26ab539efef,16e0a6d47b6498555b9691a190960bd72ea32e56,2013-03-21 16:22:02+00:00,2013-03-25 15:47:31+00:00,// TODO reject initial mixes where means/covMats not computable with data,,,
401,src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java,141,146,7460c082a39251193108da52ce05e63f3e3796d1,,2014-02-18 14:31:34+00:00,,//TODO more specific test? could pass with 'return 1;',,,
402,src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java,335,336,7460c082a39251193108da52ce05e63f3e3796d1,,2014-02-18 14:31:34+00:00,,//TODO what is this actually testing?,,,
403,src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java,346,348,7460c082a39251193108da52ce05e63f3e3796d1,,2014-02-18 14:31:34+00:00,,//TODO why is this part here? hasn't it been tested already?,,,
404,src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java,353,354,7460c082a39251193108da52ce05e63f3e3796d1,,2014-02-18 14:31:34+00:00,,//TODO move to builder test,,,
405,src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java,375,376,7460c082a39251193108da52ce05e63f3e3796d1,,2014-02-18 14:31:34+00:00,,//TODO move to builder test,,,
406,src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java,src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java,305,306,0079828734d62dbc2b44ccf4f21e3dc1daa7b90b,007a701755f318562b0cbf2005d84299733d9b45,2014-02-18 14:32:54+00:00,2014-03-02 19:54:43+00:00,//TODO the first two elements of point were not previously checked,,,
407,src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerTestValidation.java,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/fitting/leastsquares/EvaluationTestValidation.java,82,86,acd569595ee919d1afed3884cf7584cc609ad9ef,,2013-07-30 15:04:22+00:00,,final int numObs = 100; // XXX Should be a command-line option.,,,
408,src/test/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java,96,84,7460c082a39251193108da52ce05e63f3e3796d1,,2014-02-18 14:31:34+00:00,,//TODO check that it is a bad fit? Why the extra conditions?,,,
409,src/test/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java,123,111,7460c082a39251193108da52ce05e63f3e3796d1,,2014-02-18 14:31:34+00:00,,//TODO why should this fail? It uses 15 evaluations.,,,
410,src/test/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java,149,137,7460c082a39251193108da52ce05e63f3e3796d1,,2014-02-18 14:31:34+00:00,,//TODO check it got the right answer,,,
411,src/test/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java,src/test/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java,272,291,7460c082a39251193108da52ce05e63f3e3796d1,e875e6d59875be86fb8de8df7642c370b652eb76,2014-02-18 14:31:34+00:00,2014-09-22 16:07:54+00:00,//TODO delete or use,,,
412,src/test/java/org/apache/commons/math4/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java,243,229,0a499402d707bc8cf775d7f9b3840780a7401f7d,,2015-04-09 12:37:42+00:00,,// XXX Values computed by the CM code: It would be better to compare,,,
413,src/test/org/apache/commons/math/genetics/GeneticAlgorithmTestPermutations.java,src/test/org/apache/commons/math/genetics/GeneticAlgorithmTestPermutations.java,109,109,e082a039f895458c231226e66f39e39cbf3b5ef2,d7f7b629b8b5cd860d5f94c5695adb926d2d9b68,2009-06-14 19:04:32+00:00,2009-07-20 19:35:35+00:00,// TODO Auto-generated constructor stub,,,
414,src/test/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/org/apache/commons/math/linear/SparseRealVectorTest.java,649,628,a3b466009fa00e8c23532e5a28faec8117a1d75a,ced5fe0a220f5715a1657a78459ce318d8cc5a80,2009-01-31 04:51:17+00:00,2009-04-17 20:31:52+00:00,"// TODO: backing store doesn't implement equals
// TODO: backing store doesn't implement equals",[649],[649],['e7a7d913847bc2bcc808944b236da80026d25e3a']
415,src/test/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/org/apache/commons/math/linear/SparseRealVectorTest.java,1162,1162,a3b466009fa00e8c23532e5a28faec8117a1d75a,7d4f6893f9ead9afec25395405775f460316f2d5,2009-01-31 04:51:17+00:00,2009-02-09 04:50:27+00:00,"// TODO: fixme
// TODO: fixme",[1162],[1162],['e7a7d913847bc2bcc808944b236da80026d25e3a']
416,src/test/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/org/apache/commons/math/linear/SparseRealVectorTest.java,1168,1168,a3b466009fa00e8c23532e5a28faec8117a1d75a,7d4f6893f9ead9afec25395405775f460316f2d5,2009-01-31 04:51:17+00:00,2009-02-09 04:50:27+00:00,"// TODO: backing store doesn't yet implement equals
// TODO: backing store doesn't yet implement equals",[1168],[1168],['e7a7d913847bc2bcc808944b236da80026d25e3a']
417,src/test/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/org/apache/commons/math/linear/SparseRealVectorTest.java,1122,1122,7d4f6893f9ead9afec25395405775f460316f2d5,ced5fe0a220f5715a1657a78459ce318d8cc5a80,2009-02-09 04:50:27+00:00,2009-04-17 20:31:52+00:00,// TODO: why is this test here,,,
418,src/test/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/org/apache/commons/math/linear/SparseRealVectorTest.java,1127,1127,7d4f6893f9ead9afec25395405775f460316f2d5,ced5fe0a220f5715a1657a78459ce318d8cc5a80,2009-02-09 04:50:27+00:00,2009-04-17 20:31:52+00:00,//TODO: differeciate from resetting to zero,,,
419,src/test/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/org/apache/commons/math/linear/SparseRealVectorTest.java,1127,1127,01f82aed424f2cd0c8dc2e0706dd2d810fc25de6,63e1a2c76c3eb0492ed20fb0a5864dfe0e1d711c,2009-02-10 03:02:38+00:00,2009-02-15 06:46:15+00:00,//TODO: backing store doesn't implement equals,,,
420,src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,126,126,da462abca016b80ce42e4cb3523e3eb3522a559f,faed36db104582a4ed1635a3e73c263e005bd70a,2011-03-07 10:37:52+00:00,2011-03-08 21:09:48+00:00,// XXX Why was the message supposed to be empty?,,,
421,src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/MultiStartMultivariateOptimizerTest.java,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/MultiStartMultivariateOptimizerTest.java,47,47,7ee7843ffe817f79a54f77feebd51506f36c7ef8,aaa39b8fd5a2b1dbe4e883e027e932aa8703e55d,2012-12-12 14:10:38+00:00,2023-11-22 01:25:27+00:00,// TODO: the wrapper around NonLinearConjugateGradientOptimizer is a temporary hack for,,,
422,src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java,314,312,7ee7843ffe817f79a54f77feebd51506f36c7ef8,,2012-12-12 14:10:38+00:00,,"//         System.out.println(func.getClass().getName() + "" BEGIN""); // XXX",,,
423,src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java,341,339,7ee7843ffe817f79a54f77feebd51506f36c7ef8,,2012-12-12 14:10:38+00:00,,"//         System.out.println(func.getClass().getName() + "" END""); // XXX",,,
424,src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java,239,233,8a25d709f50ce97d50c653dbb5897c01e6b5d9cb,,2013-03-29 15:48:27+00:00,,// TODO: this test is temporarily disabled for 3.2 release as a bug in Cobertura,,,
425,src/test/org/apache/commons/math/stat/CertifiedDataTest.java,src/test/org/apache/commons/math/stat/CertifiedDataTest.java,110,72,e5833affa168b6e168d31bd24a2acbdf75f2d7ce,f7057c3ffa15e1c35376386d81277a6ed77ef90d,2003-11-15 16:01:42+00:00,2004-04-12 02:27:50+00:00,// TODO Auto-generated catch block,,,
426,src/test/org/apache/commons/math/stat/CertifiedDataTest.java,src/test/org/apache/commons/math/stat/CertifiedDataTest.java,113,75,e5833affa168b6e168d31bd24a2acbdf75f2d7ce,f7057c3ffa15e1c35376386d81277a6ed77ef90d,2003-11-15 16:01:42+00:00,2004-04-12 02:27:50+00:00,// TODO Auto-generated catch block,,,
427,src/test/org/apache/commons/math/stat/ListUnivariateImpl.java,src/test/org/apache/commons/math/stat/univariate/ListUnivariateImpl.java,142,108,e5833affa168b6e168d31bd24a2acbdf75f2d7ce,56d545478a8899fd940e428adf3f827f6f1b347d,2003-11-15 16:01:42+00:00,2004-05-23 00:33:41+00:00,// TODO Auto-generated catch block,,,
428,src/test/org/apache/commons/math/stat/univariate/StorelessUnivariateStatisticAbstractTest.java,src/test/org/apache/commons/math/stat/univariate/StorelessUnivariateStatisticAbstractTest.java,50,51,f80d05b493ddb55ffa05dc8990409d0e738ed7d8,2f88509be411451c29b901af9f5c1bd353aa26a5,2004-06-17 22:33:23+00:00,2004-07-10 17:14:15+00:00,//TODO:  add test for getN() once type is fixed,,,
429,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/stat/descriptive/SummaryStatisticsTest.java,148,138,d9df34360f3e95f1b5bdda9095888dab7f45d982,,2008-12-02 02:21:22+00:00,,//FiXME: test all other NaN contract specs,,,
430,src/test/org/apache/commons/math/stat/univariate/rank/PercentileTest.java,src/test/org/apache/commons/math/stat/univariate/rank/PercentileTest.java,99,98,88d69528063ab065906c590b714948d5bcef7a2c,e389289e779612c5930d7c292bbbc94027695ae5,2003-07-05 18:24:50+00:00,2003-11-01 16:09:22+00:00,// TODO: fix this bad calculation in Percentile,,,
431,src/test/org/apache/commons/math/stat/univariate/rank/PercentileTest.java,src/test/org/apache/commons/math/stat/univariate/rank/PercentileTest.java,98,60,b3a6a6b3b5b269cf6ccab91588c320d925dac9ae,2adb974fd0825011da4623ccde2da4660eb01526,2003-11-14 22:25:28+00:00,2004-03-21 04:26:54+00:00,// TODO: fix this bad calculation in Percentile,,,
432,src/test/java/org/apache/commons/math3/stat/inference/KolmogorovSmirnovTestTest.java,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/stat/inference/KolmogorovSmirnovTestTest.java,288,250,99189ff527554aa345f63fc038fc8eacf28cbb39,,2014-02-26 23:14:08+00:00,,// From Wikipedia KS article - TODO: get (and test) more precise values,,,
433,src/test/java/org/apache/commons/math4/stat/inference/KolmogorovSmirnovTestTest.java,src/test/java/org/apache/commons/math4/stat/inference/KolmogorovSmirnovTestTest.java,796,796,8ba4b12f40d40a9d705cca8d0b24fc1718bd3c5f,9f778c41356d9a30258cf62165c9aab1197d5f04,2019-04-05 13:17:36+00:00,2020-05-29 08:22:36+00:00,"System.out.println(""p="" + p); // XXX",,,
434,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/stat/regression/GLSMultipleLinearRegressionTest.java,200,211,7584e481bffc5a5ffb8673b0cb869b56c73d3b87,,2010-09-08 01:24:51+00:00,,"// TODO:  Should have assertRelativelyEquals(double[], double[], eps) in TestUtils",,,
435,src/test/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,83,91,d9df34360f3e95f1b5bdda9095888dab7f45d982,6a24e9d8a5e9a524fb02390b934f82aac4eff205,2008-12-02 02:21:22+00:00,2009-05-09 15:05:42+00:00,// TODO: translate this into standard error vector and check,,,
436,src/test/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,149,153,d9df34360f3e95f1b5bdda9095888dab7f45d982,e7911e6efae8d19cb378a594929445f1bff547c1,2008-12-02 02:21:22+00:00,2009-01-04 20:39:45+00:00,//TODO:  translate this into std error vector and check,,,
437,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,250,249,431f30388985869e8a41c2b8c0d44ec822671316,e389289e779612c5930d7c292bbbc94027695ae5,2003-06-11 03:33:05+00:00,2003-11-01 16:09:22+00:00,//FIXME: get a real example to test against with alpha = .01,,,
438,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/stat/regression/SimpleRegressionTest.java,249,525,b3a6a6b3b5b269cf6ccab91588c320d925dac9ae,,2003-11-14 22:25:28+00:00,,"//FIXME: get a real example to test against with alpha = .01
//FIXME: get a real example to test against with alpha = .01
//FIXME: get a real example to test against with alpha = .01","[251, 334]","[372, 202]","['0718895962e9d43858cbbe49cd592b5e2d0920c9', '7c918e3c65901e63bfa9a3c1a42cb42c34797ba9']"
439,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,src/test/org/apache/commons/math/stat/multivariate/BivariateRegressionTest.java,379,341,0718895962e9d43858cbbe49cd592b5e2d0920c9,7c918e3c65901e63bfa9a3c1a42cb42c34797ba9,2003-11-19 03:22:54+00:00,2004-04-25 19:38:17+00:00,// TODO Auto-generated catch block,,,
440,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,src/test/org/apache/commons/math/stat/multivariate/BivariateRegressionTest.java,389,351,0718895962e9d43858cbbe49cd592b5e2d0920c9,7c918e3c65901e63bfa9a3c1a42cb42c34797ba9,2003-11-19 03:22:54+00:00,2004-04-25 19:38:17+00:00,// TODO Auto-generated catch block,,,
441,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,src/test/org/apache/commons/math/stat/multivariate/BivariateRegressionTest.java,406,368,0718895962e9d43858cbbe49cd592b5e2d0920c9,7c918e3c65901e63bfa9a3c1a42cb42c34797ba9,2003-11-19 03:22:54+00:00,2004-04-25 19:38:17+00:00,// TODO Auto-generated catch block,,,
442,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,src/test/org/apache/commons/math/stat/multivariate/BivariateRegressionTest.java,421,383,0718895962e9d43858cbbe49cd592b5e2d0920c9,7c918e3c65901e63bfa9a3c1a42cb42c34797ba9,2003-11-19 03:22:54+00:00,2004-04-25 19:38:17+00:00,// TODO Auto-generated catch block,,,
443,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,src/test/org/apache/commons/math/stat/multivariate/BivariateRegressionTest.java,439,401,0718895962e9d43858cbbe49cd592b5e2d0920c9,7c918e3c65901e63bfa9a3c1a42cb42c34797ba9,2003-11-19 03:22:54+00:00,2004-04-25 19:38:17+00:00,// TODO Auto-generated catch block,,,
444,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math4/stat/regression/SimpleRegressionTest.java,554,558,b8e9475505fee98aae2819c03a33c7aa3db843d3,c22e7fb6f9b5df6f5c3ea9d595214d63bc803a6c,2015-01-12 18:20:01+00:00,2015-02-25 21:20:33+00:00,"System.out.println(""getXSumSquares()="" + regression.getXSumSquares()); // TODO temp check to see why Jenkins H10 is failing",,,
445,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math4/stat/regression/SimpleRegressionTest.java,556,560,b8e9475505fee98aae2819c03a33c7aa3db843d3,c22e7fb6f9b5df6f5c3ea9d595214d63bc803a6c,2015-01-12 18:20:01+00:00,2015-02-25 21:20:33+00:00,"System.out.println(""getXSumSquares()="" + regression.getXSumSquares()); // TODO temp check to see why Jenkins H10 is failing",,,
446,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math4/stat/regression/SimpleRegressionTest.java,558,562,b8e9475505fee98aae2819c03a33c7aa3db843d3,c22e7fb6f9b5df6f5c3ea9d595214d63bc803a6c,2015-01-12 18:20:01+00:00,2015-02-25 21:20:33+00:00,"System.out.println(""getXSumSquares()="" + regression.getXSumSquares()); // TODO temp check to see why Jenkins H10 is failing",,,
447,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math4/stat/regression/SimpleRegressionTest.java,560,564,b8e9475505fee98aae2819c03a33c7aa3db843d3,c22e7fb6f9b5df6f5c3ea9d595214d63bc803a6c,2015-01-12 18:20:01+00:00,2015-02-25 21:20:33+00:00,"System.out.println(""getXSumSquares()="" + regression.getXSumSquares()); // TODO temp check to see why Jenkins H10 is failing",,,
448,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math4/stat/regression/SimpleRegressionTest.java,561,565,a14acdf6395f588dda7597bb4c7810dacaa503d2,c22e7fb6f9b5df6f5c3ea9d595214d63bc803a6c,2015-01-12 18:36:54+00:00,2015-02-25 21:20:33+00:00,"System.out.println(""getMeanSquareError()="" + regression.getMeanSquareError()); // TODO temp check to see why Jenkins H10/H11 is failing",,,
449,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1139,1139,b6f92546451fecbd207b2d67e0854fe1e8ce27e0,328513f3adbcb683aebda8f1b38a0cb14d33de4e,2010-12-10 00:50:50+00:00,2011-04-04 04:51:37+00:00,} catch (MathRuntimeException ex) { // XXX Loosing semantics?,,,
450,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,1153,1153,b6f92546451fecbd207b2d67e0854fe1e8ce27e0,328513f3adbcb683aebda8f1b38a0cb14d33de4e,2010-12-10 00:50:50+00:00,2011-04-04 04:51:37+00:00,} catch (MathRuntimeException ex) { // XXX Loosing semantics?,,,
451,src/java/org/apache/commons/math/util/BigReal.java,src/java/org/apache/commons/math/util/BigReal.java,38,38,2180b0b9fa03b65f8d9edce2beb2de8ffa2f4d2e,cb545b5bc03c482f083ddfeb0d36bdf3387e8971,2009-05-22 13:55:22+00:00,2009-07-20 19:23:43+00:00,// TODO: Add Serializable documentation,,,
452,src/java/org/apache/commons/math/util/BigReal.java,src/java/org/apache/commons/math/util/BigReal.java,39,39,2180b0b9fa03b65f8d9edce2beb2de8ffa2f4d2e,cb545b5bc03c482f083ddfeb0d36bdf3387e8971,2009-05-22 13:55:22+00:00,2009-07-20 19:23:43+00:00,// TODO: Check Serializable implementation,,,
453,src/java/org/apache/commons/math/util/BigRealField.java,src/java/org/apache/commons/math/util/BigRealField.java,34,34,210f2d5661b98a6f5666a9e7a471aa18888eed63,ac01fdfb7a126d09ac87b6c7253913febcc1a734,2009-05-22 13:48:21+00:00,2009-07-20 16:51:09+00:00,// TODO: Add Serializable documentation,,,
454,src/java/org/apache/commons/math/util/BigRealField.java,src/java/org/apache/commons/math/util/BigRealField.java,35,35,210f2d5661b98a6f5666a9e7a471aa18888eed63,ac01fdfb7a126d09ac87b6c7253913febcc1a734,2009-05-22 13:48:21+00:00,2009-07-20 16:51:09+00:00,// TODO: Check Serializable implementation,,,
455,src/java/org/apache/commons/math/DoubleArray.java,src/java/org/apache/commons/math/DoubleArray.java,73,73,437e275a504d5d2de36365419e048ad9a05d83df,5d9efdbcd43d7f56c382694103d5ac70a266801f,2003-05-20 18:15:29+00:00,2003-05-21 05:48:25+00:00,//TODO: Throwing a NoSuchElementException might not be the right,,,
456,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math4/util/ResizableDoubleArray.java,296,371,4b60e4262d3c897455281fbe7747be5c46b0a130,76b7413d2b1eb2dc22f05de5b76f9519be5142e0,2012-11-13 15:50:24+00:00,2015-03-10 22:16:03+00:00,// XXX Just ot retain the expected failure in a unit test.,,,
457,src/java/org/apache/commons/math/util/TransformerMap.java,src/java/org/apache/commons/math/util/TransformerMap.java,35,35,982deb25d520441750a0e1169c68d8c54260d8b2,9d5d0da39b2fa317a88af0c1646a73018cd564a4,2009-05-22 14:04:56+00:00,2009-07-20 20:23:47+00:00,// TODO: Add Serializable documentation,,,
458,src/java/org/apache/commons/math/util/TransformerMap.java,src/java/org/apache/commons/math/util/TransformerMap.java,36,36,982deb25d520441750a0e1169c68d8c54260d8b2,9d5d0da39b2fa317a88af0c1646a73018cd564a4,2009-05-22 14:04:56+00:00,2009-07-20 20:23:47+00:00,// TODO: Check Serializable implementation,,,
459,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,78,38,b033502afa7db1135bde5a3fbc4701f3fe069fd3,56d545478a8899fd940e428adf3f827f6f1b347d,2003-11-15 19:02:45+00:00,2004-05-23 00:33:41+00:00,// TODO Auto-generated catch block,,,
460,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,92,92,b033502afa7db1135bde5a3fbc4701f3fe069fd3,9267ae3bb27364ebba95cc615c2bf0308e6cb32e,2003-11-15 19:02:45+00:00,2004-02-16 07:04:04+00:00,// TODO Auto-generated catch block,,,
461,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,107,66,b033502afa7db1135bde5a3fbc4701f3fe069fd3,56d545478a8899fd940e428adf3f827f6f1b347d,2003-11-15 19:02:45+00:00,2004-05-23 00:33:41+00:00,// TODO Auto-generated catch block,,,
462,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,122,81,b033502afa7db1135bde5a3fbc4701f3fe069fd3,56d545478a8899fd940e428adf3f827f6f1b347d,2003-11-15 19:02:45+00:00,2004-05-23 00:33:41+00:00,// TODO Auto-generated catch block,,,
463,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,137,96,b033502afa7db1135bde5a3fbc4701f3fe069fd3,56d545478a8899fd940e428adf3f827f6f1b347d,2003-11-15 19:02:45+00:00,2004-05-23 00:33:41+00:00,// TODO Auto-generated catch block,,,
464,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,152,152,b033502afa7db1135bde5a3fbc4701f3fe069fd3,9267ae3bb27364ebba95cc615c2bf0308e6cb32e,2003-11-15 19:02:45+00:00,2004-02-16 07:04:04+00:00,// TODO Auto-generated catch block,,,
465,src/main/java/org/apache/commons/math3/RealFieldElement.java,src/main/java/org/apache/commons/math4/RealFieldElement.java,208,207,3ad5595706a90adc920105b5c486e4fc0db6d497,45df5da2640f8f097915b8a2a0249ef0f6cf514e,2013-03-11 08:37:12+00:00,2015-03-10 21:38:48+00:00,"//    TODO: add this method in 4.0, as it is not possible to do it in 3.2",,,
466,src/main/java/org/apache/commons/math3/dfp/Dfp.java,src/main/java/org/apache/commons/math4/dfp/Dfp.java,2668,2674,3ad5595706a90adc920105b5c486e4fc0db6d497,45df5da2640f8f097915b8a2a0249ef0f6cf514e,2013-03-11 08:37:12+00:00,2015-03-10 21:38:48+00:00,//  TODO: deactivate this implementation (and return type) in 4.0,,,
467,src/main/java/org/apache/commons/math3/dfp/Dfp.java,src/main/java/org/apache/commons/math4/dfp/Dfp.java,2679,2685,3ad5595706a90adc920105b5c486e4fc0db6d497,45df5da2640f8f097915b8a2a0249ef0f6cf514e,2013-03-11 08:37:12+00:00,2015-03-10 21:38:48+00:00,//    TODO: activate this implementation (and return type) in 4.0,,,
468,src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java,commons-math-legacy-core/src/test/java/org/apache/commons/math4/legacy/core/ExtendedFieldElementAbstractTest.java,315,316,3ad5595706a90adc920105b5c486e4fc0db6d497,c3ec07380f82c868dd015cf83f3ee2575c6fcd51,2013-03-11 08:37:12+00:00,2021-05-31 23:25:15+00:00,"//  TODO: add this test in 4.0, as it is not possible to do it in 3.2",,,
469,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/field/ExtendedFieldElementAbstractTest.java,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/field/ExtendedFieldElementAbstractTest.java,318,318,e85e8b53f22d6b470492862a67f39068117bd175,c3ec07380f82c868dd015cf83f3ee2575c6fcd51,2021-05-31 22:26:35+00:00,2021-05-31 23:25:15+00:00,"//  TODO: add this test in 4.0, as it is not possible to do it in 3.2",,,
470,src/java/org/apache/commons/math/complex/ComplexFormat.java,src/java/org/apache/commons/math/complex/ComplexFormat.java,61,21,ec5fb0ca3db15f22e2fe8b9aba880c2ff313bfab,4ae88357f2d5a8b0db48546f2d18c9318d358eb6,2004-01-29 04:32:27+00:00,2004-02-29 19:40:39+00:00,"// @TODO Maybe, eventually at least, this should work with NumberFormat",,,
471,src/java/org/apache/commons/math/complex/ComplexFormat.java,src/java/org/apache/commons/math/complex/ComplexFormat.java,67,34,ec5fb0ca3db15f22e2fe8b9aba880c2ff313bfab,9459e748c874f7fd43c90ea6f90bce35d47ca778,2004-01-29 04:32:27+00:00,2004-05-23 00:52:32+00:00,"// @TODO This class only allows for max fraction digits, we might want to allow other parameters",,,
472,src/java/org/apache/commons/math/complex/ComplexFormat.java,src/java/org/apache/commons/math/complex/ComplexFormat.java,83,43,ec5fb0ca3db15f22e2fe8b9aba880c2ff313bfab,4ae88357f2d5a8b0db48546f2d18c9318d358eb6,2004-01-29 04:32:27+00:00,2004-02-29 19:40:39+00:00,// @TODO Javadoc for this format method,,,
473,src/java/org/apache/commons/math/complex/ComplexFormat.java,src/java/org/apache/commons/math/complex/ComplexFormat.java,86,77,ec5fb0ca3db15f22e2fe8b9aba880c2ff313bfab,9459e748c874f7fd43c90ea6f90bce35d47ca778,2004-01-29 04:32:27+00:00,2004-05-23 00:52:32+00:00,"// @TODO What happens when either a real or imaginary is NaN, INIFINITY, etc?",,,

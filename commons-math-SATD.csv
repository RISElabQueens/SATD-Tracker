,created_in_file,last_appeared_in_file,lastfile_deleted_in_commit,created_in_line,last_appeared_in_line,created_in_commit,deleted_in_commit,created_at_date,deleted_at_date,content,deleted_in_lines,created_in_lines,updated_in_commits
0,src/test/org/apache/commons/math/UnivariateImplTest.java,src/test/org/apache/commons/math/UnivariateImplTest.java,,200,235,b84e61ffcf873ef8d588ca3adce2bcd3c7406905,429a652114f94bf81e97a7737f1b3ea63fb3de91,2003-05-23 17:33:18+00:00,2003-05-29 23:25:12+00:00,//FiXME: test all other NaN contract specs,,,
1,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/stat/Univariate.java,,141,141,e4694325bc52209c0700294437d4e260991e9f82,97568dc06f50372c16e333e4c8367f845758470a,2003-05-12 19:04:38+00:00,2003-05-15 05:39:01+00:00,// FIXME: throw something meaningful if n = 0,,,
2,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/stat/Univariate.java,,151,151,e4694325bc52209c0700294437d4e260991e9f82,97568dc06f50372c16e333e4c8367f845758470a,2003-05-12 19:04:38+00:00,2003-05-15 05:39:01+00:00,// FIXME: throw something meaningful if n = 0,,,
3,src/java/org/apache/commons/math/Univariate.java,src/java/org/apache/commons/math/stat/Univariate.java,,160,160,e4694325bc52209c0700294437d4e260991e9f82,97568dc06f50372c16e333e4c8367f845758470a,2003-05-12 19:04:38+00:00,2003-05-15 05:39:01+00:00,// FIXME: throw something meaningful if n = 0,,,
4,src/java/org/apache/commons/math/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,,104,125,97568dc06f50372c16e333e4c8367f845758470a,b84e61ffcf873ef8d588ca3adce2bcd3c7406905,2003-05-15 05:39:01+00:00,2003-05-23 17:33:18+00:00,// FIXME: throw something meaningful if n = 0,,,
5,src/java/org/apache/commons/math/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,,162,201,71dfdabde1f5e9f0def1d2035822518b43e70587,b84e61ffcf873ef8d588ca3adce2bcd3c7406905,2003-05-16 05:23:29+00:00,2003-05-23 17:33:18+00:00,"// TODO: The next two lines seems rather expensive, but
// TODO: The next two lines seems rather expensive, but",[172],[173],['437e275a504d5d2de36365419e048ad9a05d83df']
6,src/java/org/apache/commons/math/UnivariateFunction.java,src/java/org/apache/commons/math/analysis/UnivariateFunction.java,,60,60,703fbafa34601e0689430d4d45ab53aac9eb73c7,2ab38de23239bacee1c924c325179968b5ac0f4a,2003-05-29 19:34:38+00:00,2003-07-11 15:59:14+00:00,// TODO: More documentation,,,
7,src/java/org/apache/commons/math/analysis/UnivariateFunction.java,src/java/org/apache/commons/math/analysis/UnivariateFunction.java,,60,60,b3a6a6b3b5b269cf6ccab91588c320d925dac9ae,14bbddbc4ccd05c028a07f2be0cf3cb4e967cc4c,2003-11-14 22:25:28+00:00,2003-11-15 18:56:16+00:00,// TODO: More documentation,,,
8,src/java/org/apache/commons/math/ExpandableDoubleArray.java,src/java/org/apache/commons/math/util/ExpandableDoubleArray.java,,96,95,246d50aa44f8679390023f4a5552de9836eb4f1d,e389289e779612c5930d7c292bbbc94027695ae5,2003-05-21 06:24:30+00:00,2003-11-01 16:09:22+00:00,"// TODO: expansionFactor is valuable, by if I only need storage",,,
9,src/java/org/apache/commons/math/util/ExpandableDoubleArray.java,src/java/org/apache/commons/math/util/ExpandableDoubleArray.java,,95,60,b3a6a6b3b5b269cf6ccab91588c320d925dac9ae,45224a8ead4295f0941720322a744b5f5318506a,2003-11-14 22:25:28+00:00,2004-06-14 21:41:33+00:00,"// TODO: expansionFactor is valuable, by if I only need storage",,,
10,src/java/org/apache/commons/math/FixedDoubleArray.java,src/java/org/apache/commons/math/util/FixedDoubleArray.java,,168,336,d6f7028269df96a72cccf7b72a41b89aaa820e9f,0fd2f5fd11cc138ab373a2bbd29a5c465f12e601,2003-05-17 23:24:21+00:00,2003-07-05 18:13:35+00:00,"// TODO: AH! implemented there is not concept of ""front""
// TODO: AH! implemented there is not concept of ""front""",[168],[172],['437e275a504d5d2de36365419e048ad9a05d83df']
11,src/java/org/apache/commons/math/analysis/CubicSplineFunction.java,src/java/org/apache/commons/math/analysis/CubicSplineFunction.java,,84,91,a235488095cc73e661c1bc817d54f8b7aa12ef39,e389289e779612c5930d7c292bbbc94027695ae5,2003-06-25 01:29:18+00:00,2003-11-01 16:09:22+00:00,"// TODO: should copy the arguments here, for safety. This could be a major overhead.",,,
12,src/java/org/apache/commons/math/analysis/CubicSplineFunction.java,src/java/org/apache/commons/math/analysis/CubicSplineFunction.java,,91,54,b3a6a6b3b5b269cf6ccab91588c320d925dac9ae,5f543b9e930b56844f5a5627f9ed24242509d154,2003-11-14 22:25:28+00:00,2004-04-02 21:39:21+00:00,"// TODO: should copy the arguments here, for safety. This could be a major overhead.",,,
13,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/test/org/apache/commons/math/stat/BeanListUnivariateImpl.java,,128,126,c9fc45757a05ff6816ce8e1baa46fe62d6a0f5ae,7c808d90714c6b80d902f7b50d2a1dafb65ddf11,2003-05-29 19:41:32+00:00,2003-07-09 21:46:33+00:00,// TODO: We could use a better strategy for error handling,,,
14,src/experimental/org/apache/commons/math/function/DefaultContext.java,src/experimental/org/apache/commons/math/function/DefaultContext.java,,69,32,4683ebbf939a0f49f919b2166be963c88f535bf9,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2003-11-20 04:22:17+00:00,2010-03-27 20:00:19+00:00,// TODO Auto-generated constructor stub,,,
15,src/experimental/org/apache/commons/math/function/DefaultContext.java,src/experimental/org/apache/commons/math/function/DefaultContext.java,,76,39,4683ebbf939a0f49f919b2166be963c88f535bf9,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2003-11-20 04:22:17+00:00,2010-03-27 20:00:19+00:00,// TODO Auto-generated method stub,,,
16,src/experimental/org/apache/commons/math/function/DefaultContext.java,src/experimental/org/apache/commons/math/function/DefaultContext.java,,84,47,4683ebbf939a0f49f919b2166be963c88f535bf9,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2003-11-20 04:22:17+00:00,2010-03-27 20:00:19+00:00,// TODO Auto-generated method stub,,,
17,src/experimental/org/apache/commons/math/function/DefaultContext.java,src/experimental/org/apache/commons/math/function/DefaultContext.java,,92,55,4683ebbf939a0f49f919b2166be963c88f535bf9,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2003-11-20 04:22:17+00:00,2010-03-27 20:00:19+00:00,// TODO Auto-generated method stub,,,
18,src/experimental/org/apache/commons/math/function/DefaultContext.java,src/experimental/org/apache/commons/math/function/DefaultContext.java,,100,63,4683ebbf939a0f49f919b2166be963c88f535bf9,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2003-11-20 04:22:17+00:00,2010-03-27 20:00:19+00:00,// TODO Auto-generated method stub,,,
19,src/experimental/org/apache/commons/math/function/DefaultContext.java,src/experimental/org/apache/commons/math/function/DefaultContext.java,,108,71,4683ebbf939a0f49f919b2166be963c88f535bf9,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2003-11-20 04:22:17+00:00,2010-03-27 20:00:19+00:00,// TODO Auto-generated method stub,,,
20,src/experimental/org/apache/commons/math/function/DefaultContext.java,src/experimental/org/apache/commons/math/function/DefaultContext.java,,116,79,4683ebbf939a0f49f919b2166be963c88f535bf9,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2003-11-20 04:22:17+00:00,2010-03-27 20:00:19+00:00,// TODO Auto-generated method stub,,,
21,src/experimental/org/apache/commons/math/function/DefaultContext.java,src/experimental/org/apache/commons/math/function/DefaultContext.java,,124,87,4683ebbf939a0f49f919b2166be963c88f535bf9,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2003-11-20 04:22:17+00:00,2010-03-27 20:00:19+00:00,// TODO Auto-generated method stub,,,
22,src/experimental/org/apache/commons/math/function/DefaultContext.java,src/experimental/org/apache/commons/math/function/DefaultContext.java,,132,95,4683ebbf939a0f49f919b2166be963c88f535bf9,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2003-11-20 04:22:17+00:00,2010-03-27 20:00:19+00:00,// TODO Auto-generated method stub,,,
23,src/experimental/org/apache/commons/math/function/DefaultContext.java,src/experimental/org/apache/commons/math/function/DefaultContext.java,,140,103,4683ebbf939a0f49f919b2166be963c88f535bf9,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2003-11-20 04:22:17+00:00,2010-03-27 20:00:19+00:00,// TODO Auto-generated method stub,,,
24,src/experimental/org/apache/commons/math/function/DefaultContext.java,src/experimental/org/apache/commons/math/function/DefaultContext.java,,148,111,4683ebbf939a0f49f919b2166be963c88f535bf9,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2003-11-20 04:22:17+00:00,2010-03-27 20:00:19+00:00,// TODO Auto-generated method stub,,,
25,src/experimental/org/apache/commons/math/function/DefaultContext.java,src/experimental/org/apache/commons/math/function/DefaultContext.java,,156,119,4683ebbf939a0f49f919b2166be963c88f535bf9,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2003-11-20 04:22:17+00:00,2010-03-27 20:00:19+00:00,// TODO Auto-generated method stub,,,
26,src/experimental/org/apache/commons/math/function/DefaultContext.java,src/experimental/org/apache/commons/math/function/DefaultContext.java,,164,127,4683ebbf939a0f49f919b2166be963c88f535bf9,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2003-11-20 04:22:17+00:00,2010-03-27 20:00:19+00:00,// TODO Auto-generated method stub,,,
27,src/experimental/org/apache/commons/math/function/DefaultContext.java,src/experimental/org/apache/commons/math/function/DefaultContext.java,,177,140,4683ebbf939a0f49f919b2166be963c88f535bf9,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2003-11-20 04:22:17+00:00,2010-03-27 20:00:19+00:00,// TODO Auto-generated constructor stub,,,
28,src/experimental/org/apache/commons/math/function/DefaultContext.java,src/experimental/org/apache/commons/math/function/DefaultContext.java,,212,175,4683ebbf939a0f49f919b2166be963c88f535bf9,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2003-11-20 04:22:17+00:00,2010-03-27 20:00:19+00:00,// TODO Auto-generated method stub,,,
29,src/experimental/org/apache/commons/math/function/DefaultContext.java,src/experimental/org/apache/commons/math/function/DefaultContext.java,,220,183,4683ebbf939a0f49f919b2166be963c88f535bf9,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2003-11-20 04:22:17+00:00,2010-03-27 20:00:19+00:00,// TODO Auto-generated method stub,,,
30,src/experimental/org/apache/commons/math/function/DefaultContext.java,src/experimental/org/apache/commons/math/function/DefaultContext.java,,228,191,4683ebbf939a0f49f919b2166be963c88f535bf9,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2003-11-20 04:22:17+00:00,2010-03-27 20:00:19+00:00,// TODO Auto-generated method stub,,,
31,src/experimental/org/apache/commons/math/function/DefaultContext.java,src/experimental/org/apache/commons/math/function/DefaultContext.java,,236,199,4683ebbf939a0f49f919b2166be963c88f535bf9,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2003-11-20 04:22:17+00:00,2010-03-27 20:00:19+00:00,// TODO Auto-generated method stub,,,
32,src/experimental/org/apache/commons/math/function/DefaultContext.java,src/experimental/org/apache/commons/math/function/DefaultContext.java,,244,207,4683ebbf939a0f49f919b2166be963c88f535bf9,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2003-11-20 04:22:17+00:00,2010-03-27 20:00:19+00:00,// TODO Auto-generated method stub,,,
33,src/experimental/org/apache/commons/math/function/DefaultContext.java,src/experimental/org/apache/commons/math/function/DefaultContext.java,,252,215,4683ebbf939a0f49f919b2166be963c88f535bf9,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2003-11-20 04:22:17+00:00,2010-03-27 20:00:19+00:00,// TODO Auto-generated method stub,,,
34,src/experimental/org/apache/commons/math/function/EvaluationException.java,src/experimental/org/apache/commons/math/function/EvaluationException.java,,69,34,4683ebbf939a0f49f919b2166be963c88f535bf9,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2003-11-20 04:22:17+00:00,2010-03-27 20:00:19+00:00,// TODO Auto-generated constructor stub,,,
35,src/experimental/org/apache/commons/math/function/EvaluationException.java,src/experimental/org/apache/commons/math/function/EvaluationException.java,,77,42,4683ebbf939a0f49f919b2166be963c88f535bf9,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2003-11-20 04:22:17+00:00,2010-03-27 20:00:19+00:00,// TODO Auto-generated constructor stub,,,
36,src/experimental/org/apache/commons/math/function/EvaluationException.java,src/experimental/org/apache/commons/math/function/EvaluationException.java,,86,51,4683ebbf939a0f49f919b2166be963c88f535bf9,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2003-11-20 04:22:17+00:00,2010-03-27 20:00:19+00:00,// TODO Auto-generated constructor stub,,,
37,src/experimental/org/apache/commons/math/function/EvaluationException.java,src/experimental/org/apache/commons/math/function/EvaluationException.java,,94,59,4683ebbf939a0f49f919b2166be963c88f535bf9,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2003-11-20 04:22:17+00:00,2010-03-27 20:00:19+00:00,// TODO Auto-generated constructor stub,,,
38,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/inference/TestStatisticTest.java,,264,263,a4c605d8a63ee8a6c0f71aefa435e10ec79b7f0e,e389289e779612c5930d7c292bbbc94027695ae5,2003-06-25 01:35:46+00:00,2003-11-01 16:09:22+00:00,//FIXME: textbook example reported t stat uses pooled variance,,,
39,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/inference/TestStatisticTest.java,,263,215,b3a6a6b3b5b269cf6ccab91588c320d925dac9ae,e9c7ed28a6d0039279573680f730fbeb8066d061,2003-11-14 22:25:28+00:00,2004-03-07 21:55:18+00:00,"//FIXME: textbook example reported t stat uses pooled variance
//FIXME: textbook example reported t stat uses pooled variance
//FIXME: textbook example reported t stat uses pooled variance","[331, 355]","[453, 215]","['0718895962e9d43858cbbe49cd592b5e2d0920c9', 'bd460b62fbb84d43cb0678751ec0e56bdee1d0de']"
40,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/inference/TestStatisticTest.java,,149,157,e5833affa168b6e168d31bd24a2acbdf75f2d7ce,bd460b62fbb84d43cb0678751ec0e56bdee1d0de,2003-11-15 16:01:42+00:00,2004-03-07 20:47:06+00:00,"// TODO Auto-generated catch block
// TODO Auto-generated catch block",[149],[195],['0718895962e9d43858cbbe49cd592b5e2d0920c9']
41,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/inference/TestStatisticTest.java,,152,160,e5833affa168b6e168d31bd24a2acbdf75f2d7ce,bd460b62fbb84d43cb0678751ec0e56bdee1d0de,2003-11-15 16:01:42+00:00,2004-03-07 20:47:06+00:00,"// TODO Auto-generated catch block
// TODO Auto-generated catch block",[152],[198],['0718895962e9d43858cbbe49cd592b5e2d0920c9']
42,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/inference/TestStatisticTest.java,,176,230,e5833affa168b6e168d31bd24a2acbdf75f2d7ce,1b96f28e41ecb466a42e5a86c6bcdd97c510e0bb,2003-11-15 16:01:42+00:00,2004-01-25 21:30:41+00:00,"// TODO Auto-generated catch block
// TODO Auto-generated catch block",[176],[230],['0718895962e9d43858cbbe49cd592b5e2d0920c9']
43,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/inference/TestStatisticTest.java,,179,233,e5833affa168b6e168d31bd24a2acbdf75f2d7ce,1b96f28e41ecb466a42e5a86c6bcdd97c510e0bb,2003-11-15 16:01:42+00:00,2004-01-25 21:30:41+00:00,"// TODO Auto-generated catch block
// TODO Auto-generated catch block",[179],[233],['0718895962e9d43858cbbe49cd592b5e2d0920c9']
44,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/inference/TestStatisticTest.java,,201,258,e5833affa168b6e168d31bd24a2acbdf75f2d7ce,1b96f28e41ecb466a42e5a86c6bcdd97c510e0bb,2003-11-15 16:01:42+00:00,2004-01-25 21:30:41+00:00,"// TODO Auto-generated catch block
// TODO Auto-generated catch block",[201],[258],['0718895962e9d43858cbbe49cd592b5e2d0920c9']
45,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/inference/TestStatisticTest.java,,204,261,e5833affa168b6e168d31bd24a2acbdf75f2d7ce,1b96f28e41ecb466a42e5a86c6bcdd97c510e0bb,2003-11-15 16:01:42+00:00,2004-01-25 21:30:41+00:00,"// TODO Auto-generated catch block
// TODO Auto-generated catch block",[204],[261],['0718895962e9d43858cbbe49cd592b5e2d0920c9']
46,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/inference/TestStatisticTest.java,,232,294,e5833affa168b6e168d31bd24a2acbdf75f2d7ce,1b96f28e41ecb466a42e5a86c6bcdd97c510e0bb,2003-11-15 16:01:42+00:00,2004-01-25 21:30:41+00:00,"// TODO Auto-generated catch block
// TODO Auto-generated catch block",[232],[294],['0718895962e9d43858cbbe49cd592b5e2d0920c9']
47,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/inference/TestStatisticTest.java,,235,297,e5833affa168b6e168d31bd24a2acbdf75f2d7ce,1b96f28e41ecb466a42e5a86c6bcdd97c510e0bb,2003-11-15 16:01:42+00:00,2004-01-25 21:30:41+00:00,"// TODO Auto-generated catch block
// TODO Auto-generated catch block",[235],[297],['0718895962e9d43858cbbe49cd592b5e2d0920c9']
48,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/inference/TestStatisticTest.java,,262,348,e5833affa168b6e168d31bd24a2acbdf75f2d7ce,1b96f28e41ecb466a42e5a86c6bcdd97c510e0bb,2003-11-15 16:01:42+00:00,2004-01-25 21:30:41+00:00,"// TODO Auto-generated catch block
// TODO Auto-generated catch block",[262],[348],['0718895962e9d43858cbbe49cd592b5e2d0920c9']
49,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/inference/TestStatisticTest.java,,265,351,e5833affa168b6e168d31bd24a2acbdf75f2d7ce,1b96f28e41ecb466a42e5a86c6bcdd97c510e0bb,2003-11-15 16:01:42+00:00,2004-01-25 21:30:41+00:00,"// TODO Auto-generated catch block
// TODO Auto-generated catch block",[265],[351],['0718895962e9d43858cbbe49cd592b5e2d0920c9']
50,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/inference/TestStatisticTest.java,,308,427,e5833affa168b6e168d31bd24a2acbdf75f2d7ce,1b96f28e41ecb466a42e5a86c6bcdd97c510e0bb,2003-11-15 16:01:42+00:00,2004-01-25 21:30:41+00:00,"// TODO Auto-generated catch block
// TODO Auto-generated catch block",[308],[427],['0718895962e9d43858cbbe49cd592b5e2d0920c9']
51,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/inference/TestStatisticTest.java,,311,430,e5833affa168b6e168d31bd24a2acbdf75f2d7ce,1b96f28e41ecb466a42e5a86c6bcdd97c510e0bb,2003-11-15 16:01:42+00:00,2004-01-25 21:30:41+00:00,"// TODO Auto-generated catch block
// TODO Auto-generated catch block",[311],[430],['0718895962e9d43858cbbe49cd592b5e2d0920c9']
52,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/inference/TestStatisticTest.java,,322,443,e5833affa168b6e168d31bd24a2acbdf75f2d7ce,1b96f28e41ecb466a42e5a86c6bcdd97c510e0bb,2003-11-15 16:01:42+00:00,2004-01-25 21:30:41+00:00,"// TODO Auto-generated catch block
// TODO Auto-generated catch block",[322],[443],['0718895962e9d43858cbbe49cd592b5e2d0920c9']
53,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/inference/TestStatisticTest.java,,325,446,e5833affa168b6e168d31bd24a2acbdf75f2d7ce,1b96f28e41ecb466a42e5a86c6bcdd97c510e0bb,2003-11-15 16:01:42+00:00,2004-01-25 21:30:41+00:00,"// TODO Auto-generated catch block
// TODO Auto-generated catch block",[325],[446],['0718895962e9d43858cbbe49cd592b5e2d0920c9']
54,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/inference/TestStatisticTest.java,,108,70,0718895962e9d43858cbbe49cd592b5e2d0920c9,bd460b62fbb84d43cb0678751ec0e56bdee1d0de,2003-11-19 03:22:54+00:00,2004-03-07 20:47:06+00:00,// TODO Auto-generated catch block,,,
55,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/inference/TestStatisticTest.java,,129,91,0718895962e9d43858cbbe49cd592b5e2d0920c9,bd460b62fbb84d43cb0678751ec0e56bdee1d0de,2003-11-19 03:22:54+00:00,2004-03-07 20:47:06+00:00,// TODO Auto-generated catch block,,,
56,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/inference/TestStatisticTest.java,,155,117,0718895962e9d43858cbbe49cd592b5e2d0920c9,bd460b62fbb84d43cb0678751ec0e56bdee1d0de,2003-11-19 03:22:54+00:00,2004-03-07 20:47:06+00:00,// TODO Auto-generated catch block,,,
57,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/inference/TestStatisticTest.java,,165,127,0718895962e9d43858cbbe49cd592b5e2d0920c9,bd460b62fbb84d43cb0678751ec0e56bdee1d0de,2003-11-19 03:22:54+00:00,2004-03-07 20:47:06+00:00,// TODO Auto-generated catch block,,,
58,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/inference/TestStatisticTest.java,,284,226,0718895962e9d43858cbbe49cd592b5e2d0920c9,bd460b62fbb84d43cb0678751ec0e56bdee1d0de,2003-11-19 03:22:54+00:00,2004-03-07 20:47:06+00:00,// TODO Auto-generated catch block,,,
59,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/inference/TestStatisticTest.java,,314,246,0718895962e9d43858cbbe49cd592b5e2d0920c9,bd460b62fbb84d43cb0678751ec0e56bdee1d0de,2003-11-19 03:22:54+00:00,2004-03-07 20:47:06+00:00,// TODO Auto-generated catch block,,,
60,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/inference/TestStatisticTest.java,,393,315,0718895962e9d43858cbbe49cd592b5e2d0920c9,bd460b62fbb84d43cb0678751ec0e56bdee1d0de,2003-11-19 03:22:54+00:00,2004-03-07 20:47:06+00:00,// TODO Auto-generated catch block,,,
61,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/inference/TestStatisticTest.java,,403,325,0718895962e9d43858cbbe49cd592b5e2d0920c9,bd460b62fbb84d43cb0678751ec0e56bdee1d0de,2003-11-19 03:22:54+00:00,2004-03-07 20:47:06+00:00,// TODO Auto-generated catch block,,,
62,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/inference/TestStatisticTest.java,,412,334,0718895962e9d43858cbbe49cd592b5e2d0920c9,bd460b62fbb84d43cb0678751ec0e56bdee1d0de,2003-11-19 03:22:54+00:00,2004-03-07 20:47:06+00:00,// TODO Auto-generated catch block,,,
63,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/inference/TestStatisticTest.java,,490,392,0718895962e9d43858cbbe49cd592b5e2d0920c9,bd460b62fbb84d43cb0678751ec0e56bdee1d0de,2003-11-19 03:22:54+00:00,2004-03-07 20:47:06+00:00,// TODO Auto-generated catch block,,,
64,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/inference/TestStatisticTest.java,,499,401,0718895962e9d43858cbbe49cd592b5e2d0920c9,bd460b62fbb84d43cb0678751ec0e56bdee1d0de,2003-11-19 03:22:54+00:00,2004-03-07 20:47:06+00:00,// TODO Auto-generated catch block,,,
65,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/inference/TestStatisticTest.java,,508,410,0718895962e9d43858cbbe49cd592b5e2d0920c9,bd460b62fbb84d43cb0678751ec0e56bdee1d0de,2003-11-19 03:22:54+00:00,2004-03-07 20:47:06+00:00,// TODO Auto-generated catch block,,,
66,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/inference/TestStatisticTest.java,,517,419,0718895962e9d43858cbbe49cd592b5e2d0920c9,bd460b62fbb84d43cb0678751ec0e56bdee1d0de,2003-11-19 03:22:54+00:00,2004-03-07 20:47:06+00:00,// TODO Auto-generated catch block,,,
67,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/inference/TestStatisticTest.java,,526,428,0718895962e9d43858cbbe49cd592b5e2d0920c9,bd460b62fbb84d43cb0678751ec0e56bdee1d0de,2003-11-19 03:22:54+00:00,2004-03-07 20:47:06+00:00,// TODO Auto-generated catch block,,,
68,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/inference/TestStatisticTest.java,,535,437,0718895962e9d43858cbbe49cd592b5e2d0920c9,bd460b62fbb84d43cb0678751ec0e56bdee1d0de,2003-11-19 03:22:54+00:00,2004-03-07 20:47:06+00:00,// TODO Auto-generated catch block,,,
69,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/inference/TestStatisticTest.java,,544,446,0718895962e9d43858cbbe49cd592b5e2d0920c9,bd460b62fbb84d43cb0678751ec0e56bdee1d0de,2003-11-19 03:22:54+00:00,2004-03-07 20:47:06+00:00,// TODO Auto-generated catch block,,,
70,src/test/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,,104,104,e5833affa168b6e168d31bd24a2acbdf75f2d7ce,9267ae3bb27364ebba95cc615c2bf0308e6cb32e,2003-11-15 16:01:42+00:00,2004-02-16 07:04:04+00:00,// TODO Auto-generated catch block,,,
71,src/test/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,,120,80,e5833affa168b6e168d31bd24a2acbdf75f2d7ce,56d545478a8899fd940e428adf3f827f6f1b347d,2003-11-15 16:01:42+00:00,2004-05-23 00:33:41+00:00,// TODO Auto-generated catch block,,,
72,src/test/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,,136,136,e5833affa168b6e168d31bd24a2acbdf75f2d7ce,9267ae3bb27364ebba95cc615c2bf0308e6cb32e,2003-11-15 16:01:42+00:00,2004-02-16 07:04:04+00:00,// TODO Auto-generated catch block,,,
73,src/test/org/apache/commons/math/util/BeanTransformerTest.java,src/experimental/org/apache/commons/math/util/BeanTransformerTest.java,,152,96,e5833affa168b6e168d31bd24a2acbdf75f2d7ce,56d545478a8899fd940e428adf3f827f6f1b347d,2003-11-15 16:01:42+00:00,2004-05-23 00:33:41+00:00,// TODO Auto-generated catch block,,,
74,src/mantissa/src/org/spaceroots/mantissa/fitting/F2FP2Iterator.java,src/mantissa/src/org/spaceroots/mantissa/fitting/F2FP2Iterator.java,,62,62,05195b77ca8d86fbb4fdd9216f436d8b7f3a57de,cc73bfb42fa86c01e37a1b7021b1ab41e0f0cb63,2006-11-19 21:36:15+00:00,2006-12-19 22:11:07+00:00,// hack the values (to avoid building a new object),,,
75,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsAbstractTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsAbstractTest.java,,139,137,dc2a102e3c9126f5d4f616a41572e2c62281bf24,d9df34360f3e95f1b5bdda9095888dab7f45d982,2008-01-04 13:49:14+00:00,2008-12-02 02:21:22+00:00,//FiXME: test all other NaN contract specs,,,
76,src/experimental/org/apache/commons/math/linear/RecursiveLayoutRealMatrix.java,src/experimental/org/apache/commons/math/linear/RecursiveLayoutRealMatrix.java,,499,497,e01294b1587ed698bea02e9e2b90cda36d0bf28b,b24f72809bfdc17ac7e9dd4114208f36b319ea80,2009-02-13 14:38:48+00:00,2010-03-27 20:00:19+00:00,// TODO get rid of this test,,,
77,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,,103,103,a235488095cc73e661c1bc817d54f8b7aa12ef39,e389289e779612c5930d7c292bbbc94027695ae5,2003-06-25 01:29:18+00:00,2003-11-01 16:09:22+00:00,// TODO avoid recomputing the term,,,
78,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,,120,124,a235488095cc73e661c1bc817d54f8b7aa12ef39,609917a77cd495b8955122c9bbf2b5858168579f,2003-06-25 01:29:18+00:00,2003-09-26 19:30:33+00:00,// TODO: This relies on compiler for CSE of delta/d[i]. Is this a reasonable assumption?,,,
79,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,,139,142,a235488095cc73e661c1bc817d54f8b7aa12ef39,609917a77cd495b8955122c9bbf2b5858168579f,2003-06-25 01:29:18+00:00,2003-09-26 19:30:33+00:00,// TODO: This relies on compiler for CSE of xval[i + 1] - xval[i]. Is this a reasonable assumption?,,,
80,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,,148,149,a235488095cc73e661c1bc817d54f8b7aa12ef39,609917a77cd495b8955122c9bbf2b5858168579f,2003-06-25 01:29:18+00:00,2003-09-26 19:30:33+00:00,"// TODO: again, CSE aspects.",,,
81,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,,160,160,a235488095cc73e661c1bc817d54f8b7aa12ef39,e389289e779612c5930d7c292bbbc94027695ae5,2003-06-25 01:29:18+00:00,2003-11-01 16:09:22+00:00,"// TODO: copy xval, unless copied in CubicSplineFunction constructor",,,
82,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,,103,105,b3a6a6b3b5b269cf6ccab91588c320d925dac9ae,54309a11ca93adf855703a7949415bc1ab906396,2003-11-14 22:25:28+00:00,2003-12-27 15:22:34+00:00,// TODO avoid recomputing the term,,,
83,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,,160,124,b3a6a6b3b5b269cf6ccab91588c320d925dac9ae,36fcb5c54de400e93e244338156ae5f8f065a6ca,2003-11-14 22:25:28+00:00,2004-04-02 21:16:21+00:00,"// TODO: copy xval, unless copied in CubicSplineFunction constructor",,,
84,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,,79,43,54309a11ca93adf855703a7949415bc1ab906396,36fcb5c54de400e93e244338156ae5f8f065a6ca,2003-12-27 15:22:34+00:00,2004-04-02 21:16:21+00:00,// TODO: What's this good for? Did I really write this???,,,
85,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java,,84,48,54309a11ca93adf855703a7949415bc1ab906396,36fcb5c54de400e93e244338156ae5f8f065a6ca,2003-12-27 15:22:34+00:00,2004-04-02 21:16:21+00:00,// TODO: Separation should be checked too (not implemented: which criteria?).,,,
86,src/java/org/apache/commons/math/analysis/PolynomialFunction.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,,86,52,c9a095511525083ce5124ab7b94af52f419057f4,f41527455cc9220383e7eb8eeca0caa369e1f104,2003-11-15 18:44:52+00:00,2004-02-20 06:17:54+00:00,"// TODO: should copy the arguments here, for safety. This could be a major overhead.",,,
87,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,,284,284,4117b2a53aa93f26d66b5bd8594b211ff61bd343,55a1b8090af334ab4c6db9809ff762c181366481,2011-02-27 12:58:10+00:00,2011-02-27 13:31:47+00:00,//         s.append(Double.toString(coefficients[0])); XXX,,,
88,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,,304,304,4117b2a53aa93f26d66b5bd8594b211ff61bd343,55a1b8090af334ab4c6db9809ff762c181366481,2011-02-27 12:58:10+00:00,2011-02-27 13:31:47+00:00,//             s.append(Double.toString(absAi)); XXX,,,
89,src/java/org/apache/commons/math/analysis/PolynomialSplineFunction.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java,,91,90,2203f7578375c8f4c49c1bc74375fef0ecdcdac8,c82f497b9abd8ca3b94b1679ae571fe949686bcd,2004-04-02 20:58:11+00:00,2004-04-23 18:16:06+00:00,// TODO: check that knots is increasing,,,
90,src/java/org/apache/commons/math/analysis/UnivariateRealSolverImpl.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java,,138,138,2b5b0e7a14f405f69378527bab5af9e8ddbdb111,e389289e779612c5930d7c292bbbc94027695ae5,2003-07-05 18:05:31+00:00,2003-11-01 16:09:22+00:00,// TODO: could this be an IllegalStateException instead?,,,
91,src/java/org/apache/commons/math/analysis/UnivariateRealSolverImpl.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java,,153,153,2b5b0e7a14f405f69378527bab5af9e8ddbdb111,e389289e779612c5930d7c292bbbc94027695ae5,2003-07-05 18:05:31+00:00,2003-11-01 16:09:22+00:00,// TODO: could this be an IllegalStateException instead?,,,
92,src/java/org/apache/commons/math/analysis/UnivariateRealSolverImpl.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java,,138,102,b3a6a6b3b5b269cf6ccab91588c320d925dac9ae,c952896cfab537f33102787e27acd878e9138f29,2003-11-14 22:25:28+00:00,2004-04-23 18:20:12+00:00,// TODO: could this be an IllegalStateException instead?,,,
93,src/java/org/apache/commons/math/analysis/UnivariateRealSolverImpl.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java,,153,117,b3a6a6b3b5b269cf6ccab91588c320d925dac9ae,c952896cfab537f33102787e27acd878e9138f29,2003-11-14 22:25:28+00:00,2004-04-23 18:20:12+00:00,// TODO: could this be an IllegalStateException instead?,,,
94,src/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,,47,47,2180b0b9fa03b65f8d9edce2beb2de8ffa2f4d2e,b09a8717be4e90aaea52a3e2f70ee7b8305b9916,2009-05-22 13:55:22+00:00,2009-06-19 03:26:28+00:00,// TODO: Add Serializable documentation,,,
95,src/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,,48,48,2180b0b9fa03b65f8d9edce2beb2de8ffa2f4d2e,b09a8717be4e90aaea52a3e2f70ee7b8305b9916,2009-05-22 13:55:22+00:00,2009-06-19 03:26:28+00:00,// TODO: Check Serializable implementation,,,
96,src/java/org/apache/commons/math/complex/ComplexField.java,src/main/java/org/apache/commons/math/complex/ComplexField.java,,34,34,210f2d5661b98a6f5666a9e7a471aa18888eed63,04749a6a8140f1acee2f6c8ddc662655764d7750,2009-05-22 13:48:21+00:00,2009-07-20 16:48:30+00:00,// TODO: Add Serializable documentation,,,
97,src/java/org/apache/commons/math/complex/ComplexField.java,src/main/java/org/apache/commons/math/complex/ComplexField.java,,35,35,210f2d5661b98a6f5666a9e7a471aa18888eed63,04749a6a8140f1acee2f6c8ddc662655764d7750,2009-05-22 13:48:21+00:00,2009-07-20 16:48:30+00:00,// TODO: Check Serializable implementation,,,
98,src/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,,61,21,ec5fb0ca3db15f22e2fe8b9aba880c2ff313bfab,4ae88357f2d5a8b0db48546f2d18c9318d358eb6,2004-01-29 04:32:27+00:00,2004-02-29 19:40:39+00:00,"// @TODO Maybe, eventually at least, this should work with NumberFormat",,,
99,src/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,,67,34,ec5fb0ca3db15f22e2fe8b9aba880c2ff313bfab,9459e748c874f7fd43c90ea6f90bce35d47ca778,2004-01-29 04:32:27+00:00,2004-05-23 00:52:32+00:00,"// @TODO This class only allows for max fraction digits, we might want to allow other parameters",,,
100,src/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,,83,43,ec5fb0ca3db15f22e2fe8b9aba880c2ff313bfab,4ae88357f2d5a8b0db48546f2d18c9318d358eb6,2004-01-29 04:32:27+00:00,2004-02-29 19:40:39+00:00,// @TODO Javadoc for this format method,,,
101,src/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,,86,77,ec5fb0ca3db15f22e2fe8b9aba880c2ff313bfab,9459e748c874f7fd43c90ea6f90bce35d47ca778,2004-01-29 04:32:27+00:00,2004-05-23 00:52:32+00:00,"// @TODO What happens when either a real or imaginary is NaN, INIFINITY, etc?",,,
102,src/main/java/org/apache/commons/math/distribution/ExponentialDistribution.java,src/main/java/org/apache/commons/math/distribution/ExponentialDistribution.java,,172,180,32354a1039ceccd4a6a71baea3329b27dff7a124,f880c83e06411b15eb3577a145f035e11b6ca408,2011-11-26 06:17:49+00:00,2011-12-03 18:23:02+00:00,// TODO: try to improve on this estimate,,,
103,src/main/java/org/apache/commons/math/distribution/ExponentialDistribution.java,src/main/java/org/apache/commons/math/distribution/ExponentialDistribution.java,,173,181,32354a1039ceccd4a6a71baea3329b27dff7a124,f880c83e06411b15eb3577a145f035e11b6ca408,2011-11-26 06:17:49+00:00,2011-12-03 18:23:02+00:00,// TODO: what should really happen here is not derive from,,,
104,src/main/java/org/apache/commons/math/distribution/ExponentialDistribution.java,src/main/java/org/apache/commons/math/distribution/ExponentialDistribution.java,,175,183,32354a1039ceccd4a6a71baea3329b27dff7a124,f880c83e06411b15eb3577a145f035e11b6ca408,2011-11-26 06:17:49+00:00,2011-12-03 18:23:02+00:00,// TODO: because the inverse cumulative distribution is simple.,,,
105,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,,156,187,c9f353cee21a636b8d32ab35319105b061cefcaf,32354a1039ceccd4a6a71baea3329b27dff7a124,2004-06-06 16:38:05+00:00,2011-11-26 06:17:49+00:00,// TODO: try to improve on this estimate,,,
106,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,,173,188,d9df34360f3e95f1b5bdda9095888dab7f45d982,32354a1039ceccd4a6a71baea3329b27dff7a124,2008-12-02 02:21:22+00:00,2011-11-26 06:17:49+00:00,// TODO: what should really happen here is not derive from AbstractContinuousDistribution,,,
107,src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,,174,189,d9df34360f3e95f1b5bdda9095888dab7f45d982,32354a1039ceccd4a6a71baea3329b27dff7a124,2008-12-02 02:21:22+00:00,2011-11-26 06:17:49+00:00,// TODO: because the inverse cumulative distribution is simple.,,,
108,src/main/java/org/apache/commons/math/distribution/GammaDistribution.java,src/main/java/org/apache/commons/math/distribution/GammaDistribution.java,,159,167,32354a1039ceccd4a6a71baea3329b27dff7a124,f880c83e06411b15eb3577a145f035e11b6ca408,2011-11-26 06:17:49+00:00,2011-12-03 18:23:02+00:00,// TODO: try to improve on this estimate,,,
109,src/main/java/org/apache/commons/math/distribution/GammaDistribution.java,src/main/java/org/apache/commons/math/distribution/GammaDistribution.java,,166,174,32354a1039ceccd4a6a71baea3329b27dff7a124,f880c83e06411b15eb3577a145f035e11b6ca408,2011-11-26 06:17:49+00:00,2011-12-03 18:23:02+00:00,// TODO: try to improve on this estimate,,,
110,src/main/java/org/apache/commons/math/distribution/GammaDistribution.java,src/main/java/org/apache/commons/math/distribution/GammaDistribution.java,,186,194,32354a1039ceccd4a6a71baea3329b27dff7a124,f880c83e06411b15eb3577a145f035e11b6ca408,2011-11-26 06:17:49+00:00,2011-12-03 18:23:02+00:00,// TODO: try to improve on this estimate,,,
111,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,,162,158,2dec2474f9f5b39e6e0ffca795f52b9b1b88fdf3,5971a93e3f86973f53e3e14c2d32eef4ba367e96,2003-06-05 14:03:53+00:00,2003-09-17 19:29:32+00:00,// TODO: try to improve on this estimate,,,
112,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,,178,174,2dec2474f9f5b39e6e0ffca795f52b9b1b88fdf3,5971a93e3f86973f53e3e14c2d32eef4ba367e96,2003-06-05 14:03:53+00:00,2003-09-17 19:29:32+00:00,// TODO: try to improve on this estimate,,,
113,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,,204,200,2dec2474f9f5b39e6e0ffca795f52b9b1b88fdf3,5971a93e3f86973f53e3e14c2d32eef4ba367e96,2003-06-05 14:03:53+00:00,2003-09-17 19:29:32+00:00,// TODO: try to improve on this estimate,,,
114,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,,127,159,f4e161390d29af66312d597dcc10dde5b6148542,32354a1039ceccd4a6a71baea3329b27dff7a124,2004-05-19 14:16:32+00:00,2011-11-26 06:17:49+00:00,// TODO: try to improve on this estimate,,,
115,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,,141,173,f4e161390d29af66312d597dcc10dde5b6148542,32354a1039ceccd4a6a71baea3329b27dff7a124,2004-05-19 14:16:32+00:00,2011-11-26 06:17:49+00:00,// TODO: try to improve on this estimate,,,
116,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,,167,200,f4e161390d29af66312d597dcc10dde5b6148542,32354a1039ceccd4a6a71baea3329b27dff7a124,2004-05-19 14:16:32+00:00,2011-11-26 06:17:49+00:00,// TODO: try to improve on this estimate,,,
117,src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java,,171,140,fcde02ecceda552dbcbac16571678f7106150b46,c415dd79aeccea246fe39881cda0b1404d5c33c0,2004-01-26 03:04:31+00:00,2004-04-27 16:42:34+00:00,"//TODO is this ok?
//TODO is this ok?",[171],[171],['70106770ea61a5fe845653a0b793f4934cc00144']
118,src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java,,111,111,19f633c6ae2b3cf342d37e1c95e975d0ad4c4cdd,2741a781e98a46217b800c4cd3e7abd64f04cec4,2009-10-28 19:59:21+00:00,2009-10-28 21:53:35+00:00,/ Math.sqrt(2.0 * Math.PI * x); // TODO make MathUtils.PI,,,
119,src/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,,35,35,2180b0b9fa03b65f8d9edce2beb2de8ffa2f4d2e,d1d32776dfee8251178eae95b0759bec58cf3dc2,2009-05-22 13:55:22+00:00,2009-07-20 16:27:45+00:00,// TODO: Add Serializable documentation,,,
120,src/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,,36,36,2180b0b9fa03b65f8d9edce2beb2de8ffa2f4d2e,d1d32776dfee8251178eae95b0759bec58cf3dc2,2009-05-22 13:55:22+00:00,2009-07-20 16:27:45+00:00,// TODO: Check Serializable implementation,,,
121,src/java/org/apache/commons/math/fraction/BigFractionField.java,src/main/java/org/apache/commons/math/fraction/BigFractionField.java,,34,34,210f2d5661b98a6f5666a9e7a471aa18888eed63,fbd46106cb7ec393b58e318efd255f9a2b89b621,2009-05-22 13:48:21+00:00,2009-07-20 16:42:55+00:00,// TODO: Add Serializable documentation,,,
122,src/java/org/apache/commons/math/fraction/BigFractionField.java,src/main/java/org/apache/commons/math/fraction/BigFractionField.java,,35,35,210f2d5661b98a6f5666a9e7a471aa18888eed63,fbd46106cb7ec393b58e318efd255f9a2b89b621,2009-05-22 13:48:21+00:00,2009-07-20 16:42:55+00:00,// TODO: Check Serializable implementation,,,
123,src/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,,35,35,2180b0b9fa03b65f8d9edce2beb2de8ffa2f4d2e,3c186cacbb3bf66be03208355390e441d149869c,2009-05-22 13:55:22+00:00,2009-07-20 16:29:46+00:00,// TODO: Add Serializable documentation,,,
124,src/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,,36,36,2180b0b9fa03b65f8d9edce2beb2de8ffa2f4d2e,3c186cacbb3bf66be03208355390e441d149869c,2009-05-22 13:55:22+00:00,2009-07-20 16:29:46+00:00,// TODO: Check Serializable implementation,,,
125,src/java/org/apache/commons/math/fraction/FractionField.java,src/main/java/org/apache/commons/math/fraction/FractionField.java,,34,34,210f2d5661b98a6f5666a9e7a471aa18888eed63,417766430eabfd2754a5f25115f481a3ecd71f04,2009-05-22 13:48:21+00:00,2009-07-20 16:45:08+00:00,// TODO: Add Serializable documentation,,,
126,src/java/org/apache/commons/math/fraction/FractionField.java,src/main/java/org/apache/commons/math/fraction/FractionField.java,,35,35,210f2d5661b98a6f5666a9e7a471aa18888eed63,417766430eabfd2754a5f25115f481a3ecd71f04,2009-05-22 13:48:21+00:00,2009-07-20 16:45:08+00:00,// TODO: Check Serializable implementation,,,
127,src/java/org/apache/commons/math/linear/decomposition/CholeskyDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java,,43,43,5d33262944512396c5316fe75703e2c10090cc5e,d51278d0fa0d22adb5540a912f85e2df9624eeea,2009-05-22 12:58:26+00:00,2009-05-25 21:46:38+00:00,// TODO: Add Serializable documentation,,,
128,src/java/org/apache/commons/math/linear/decomposition/CholeskyDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java,,44,44,5d33262944512396c5316fe75703e2c10090cc5e,d51278d0fa0d22adb5540a912f85e2df9624eeea,2009-05-22 12:58:26+00:00,2009-05-25 21:46:38+00:00,// TODO: Check Serializable implementation,,,
129,src/java/org/apache/commons/math/linear/decomposition/CholeskyDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java,,202,202,3fa90e0aa9513b73ae11cc1980bf0199131c59bc,d51278d0fa0d22adb5540a912f85e2df9624eeea,2009-05-23 11:48:41+00:00,2009-05-25 21:46:38+00:00,// TODO: Add Serializable documentation,,,
130,src/java/org/apache/commons/math/linear/decomposition/CholeskyDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java,,203,203,3fa90e0aa9513b73ae11cc1980bf0199131c59bc,d51278d0fa0d22adb5540a912f85e2df9624eeea,2009-05-23 11:48:41+00:00,2009-05-25 21:46:38+00:00,// TODO: Check Serializable implementation,,,
131,src/java/org/apache/commons/math/linear/decomposition/EigenDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,,370,370,3fa90e0aa9513b73ae11cc1980bf0199131c59bc,d51278d0fa0d22adb5540a912f85e2df9624eeea,2009-05-23 11:48:41+00:00,2009-05-25 21:46:38+00:00,// TODO: Add Serializable documentation,,,
132,src/java/org/apache/commons/math/linear/decomposition/EigenDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,,371,371,3fa90e0aa9513b73ae11cc1980bf0199131c59bc,d51278d0fa0d22adb5540a912f85e2df9624eeea,2009-05-23 11:48:41+00:00,2009-05-25 21:46:38+00:00,// TODO: Check Serializable implementation,,,
133,src/java/org/apache/commons/math/linear/decomposition/LUDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,,242,242,3fa90e0aa9513b73ae11cc1980bf0199131c59bc,d51278d0fa0d22adb5540a912f85e2df9624eeea,2009-05-23 11:48:41+00:00,2009-05-25 21:46:38+00:00,// TODO: Add Serializable documentation,,,
134,src/java/org/apache/commons/math/linear/decomposition/LUDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,,243,243,3fa90e0aa9513b73ae11cc1980bf0199131c59bc,d51278d0fa0d22adb5540a912f85e2df9624eeea,2009-05-23 11:48:41+00:00,2009-05-25 21:46:38+00:00,// TODO: Check Serializable implementation,,,
135,src/java/org/apache/commons/math/linear/decomposition/QRDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/QRDecompositionImpl.java,,261,261,3fa90e0aa9513b73ae11cc1980bf0199131c59bc,d51278d0fa0d22adb5540a912f85e2df9624eeea,2009-05-23 11:48:41+00:00,2009-05-25 21:46:38+00:00,// TODO: Add Serializable documentation,,,
136,src/java/org/apache/commons/math/linear/decomposition/QRDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/QRDecompositionImpl.java,,262,262,3fa90e0aa9513b73ae11cc1980bf0199131c59bc,d51278d0fa0d22adb5540a912f85e2df9624eeea,2009-05-23 11:48:41+00:00,2009-05-25 21:46:38+00:00,// TODO: Check Serializable implementation,,,
137,src/java/org/apache/commons/math/RealMatrixImpl.java,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,,214,213,765db662a581ffa5b5b093022bb69d2638d02aa3,e389289e779612c5930d7c292bbbc94027695ae5,2003-06-15 17:01:39+00:00,2003-11-01 16:09:22+00:00,// FIXME: need to add singular value decomposition or drop this,,,
138,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,,213,175,b3a6a6b3b5b269cf6ccab91588c320d925dac9ae,4aaa9403bd5056b68afdfdcd7120df102eab9c8a,2003-11-14 22:25:28+00:00,2004-06-05 22:28:10+00:00,"// FIXME: need to add singular value decomposition or drop this
// @TODO need to add singular value decomposition or drop this",[213],[212],['204063d31752fc234a0e58121b03743bff3c7543']
139,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,,470,434,204063d31752fc234a0e58121b03743bff3c7543,70b35ebdcc7f30d72e0ce38c31b6b58b96a9250f,2004-01-28 20:15:03+00:00,2004-04-03 22:18:04+00:00,"// @TODO A bad way to check for a singular matrix, is this the only way - kick off an LU decompose?",,,
140,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java,,656,622,204063d31752fc234a0e58121b03743bff3c7543,3a35f193cc24f8eac1c26016109a9542df822679,2004-01-28 20:15:03+00:00,2004-04-08 07:01:17+00:00,// @TODO Bad method name - get rid of leading capitals,,,
141,src/main/java/org/apache/commons/math/linear/RealVector.java,src/main/java/org/apache/commons/math/linear/RealVector.java,,1324,1366,760078b411fa3c0a2914574756ef458c3fc68d00,fd9fed269487504137885d3b0722a04e7c39339a,2011-08-28 12:58:57+00:00,2011-08-29 01:44:24+00:00,// TODO It is not specified in the javadoc that getData should,,,
142,src/java/org/apache/commons/math/linear/decomposition/SingularValueDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,,303,303,3fa90e0aa9513b73ae11cc1980bf0199131c59bc,d51278d0fa0d22adb5540a912f85e2df9624eeea,2009-05-23 11:48:41+00:00,2009-05-25 21:46:38+00:00,// TODO: Add Serializable documentation,,,
143,src/java/org/apache/commons/math/linear/decomposition/SingularValueDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,,304,304,3fa90e0aa9513b73ae11cc1980bf0199131c59bc,d51278d0fa0d22adb5540a912f85e2df9624eeea,2009-05-23 11:48:41+00:00,2009-05-25 21:46:38+00:00,// TODO: Check Serializable implementation,,,
144,src/java/org/apache/commons/math/optimization/LeastSquaresConverter.java,src/main/java/org/apache/commons/math/optimization/LeastSquaresConverter.java,,60,60,5220875108dea18233023bf518c8fd1011c5c1e2,419531014acc9c937b3579e213d2a57a8f608e7a,2009-05-23 11:44:01+00:00,2009-06-01 13:23:17+00:00,// TODO: Add Serializable documentation,,,
145,src/java/org/apache/commons/math/optimization/LeastSquaresConverter.java,src/main/java/org/apache/commons/math/optimization/LeastSquaresConverter.java,,61,61,5220875108dea18233023bf518c8fd1011c5c1e2,419531014acc9c937b3579e213d2a57a8f608e7a,2009-05-23 11:44:01+00:00,2009-06-01 13:23:17+00:00,// TODO: Check Serializable implementation,,,
146,src/java/org/apache/commons/math/optimization/SimpleVectorialPointChecker.java,src/main/java/org/apache/commons/math/optimization/SimpleVectorialPointChecker.java,,37,37,b41ff57526cadeb5ab8407dd962d61a615181b42,6135415f3184a4983f80141ccbb0907e0224bbb6,2009-05-23 11:26:56+00:00,2009-07-20 19:34:06+00:00,// TODO: Add Serializable documentation,,,
147,src/java/org/apache/commons/math/optimization/SimpleVectorialPointChecker.java,src/main/java/org/apache/commons/math/optimization/SimpleVectorialPointChecker.java,,38,38,b41ff57526cadeb5ab8407dd962d61a615181b42,6135415f3184a4983f80141ccbb0907e0224bbb6,2009-05-23 11:26:56+00:00,2009-07-20 19:34:06+00:00,// TODO: Check Serializable implementation,,,
148,src/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,,89,90,b41ff57526cadeb5ab8407dd962d61a615181b42,d088734d253b465a58fa3d2b0b5d639e92cfaa9c,2009-05-23 11:26:56+00:00,2009-06-07 21:24:18+00:00,// TODO: Add Serializable documentation,,,
149,src/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,,90,91,b41ff57526cadeb5ab8407dd962d61a615181b42,d088734d253b465a58fa3d2b0b5d639e92cfaa9c,2009-05-23 11:26:56+00:00,2009-06-07 21:24:18+00:00,// TODO: Check Serializable implementation,,,
150,src/java/org/apache/commons/math/optimization/direct/MultiDirectional.java,src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java,,37,37,b41ff57526cadeb5ab8407dd962d61a615181b42,4cf9d992088aa03a8a8d54c319d2238c9f61eaf1,2009-05-23 11:26:56+00:00,2009-07-20 19:57:08+00:00,// TODO: Add Serializable documentation,,,
151,src/java/org/apache/commons/math/optimization/direct/MultiDirectional.java,src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java,,38,38,b41ff57526cadeb5ab8407dd962d61a615181b42,4cf9d992088aa03a8a8d54c319d2238c9f61eaf1,2009-05-23 11:26:56+00:00,2009-07-20 19:57:08+00:00,// TODO: Check Serializable implementation,,,
152,src/java/org/apache/commons/math/optimization/direct/NelderMead.java,src/main/java/org/apache/commons/math/optimization/direct/NelderMead.java,,37,37,b41ff57526cadeb5ab8407dd962d61a615181b42,4cf9d992088aa03a8a8d54c319d2238c9f61eaf1,2009-05-23 11:26:56+00:00,2009-07-20 19:57:08+00:00,// TODO: Add Serializable documentation,,,
153,src/java/org/apache/commons/math/optimization/direct/NelderMead.java,src/main/java/org/apache/commons/math/optimization/direct/NelderMead.java,,38,38,b41ff57526cadeb5ab8407dd962d61a615181b42,4cf9d992088aa03a8a8d54c319d2238c9f61eaf1,2009-05-23 11:26:56+00:00,2009-07-20 19:57:08+00:00,// TODO: Check Serializable implementation,,,
154,src/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,,267,267,5220875108dea18233023bf518c8fd1011c5c1e2,15c9f02e5cec03298c28f20190c73398694188fa,2009-05-23 11:44:01+00:00,2009-06-20 23:37:47+00:00,// TODO: Add Serializable documentation,,,
155,src/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,,268,268,5220875108dea18233023bf518c8fd1011c5c1e2,15c9f02e5cec03298c28f20190c73398694188fa,2009-05-23 11:44:01+00:00,2009-06-20 23:37:47+00:00,// TODO: Check Serializable implementation,,,
156,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,,170,169,a21faeae6ed850c618b4fb739a422e3b144db135,b9559bfce972a8b079ebc5ac8b6326a524ce29f8,2010-08-30 13:06:22+00:00,2010-11-25 16:22:00+00:00,throw new ConvergenceException(); // XXX ugly workaround.,,,
157,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,,162,186,b9559bfce972a8b079ebc5ac8b6326a524ce29f8,696be68b5dc8872a818a24d8a377158314b54e31,2010-11-25 16:22:00+00:00,2012-02-14 16:17:55+00:00,"// XXX Last parameters is set to a value clode to zero in order to
// XXX Last parameters is set to a value close to zero in order to",[160],[155],['611ddc1966bfc820a7f89164fd49c0bcaa6b7b55']
158,src/java/org/apache/commons/math/RandomDataImpl.java,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,,202,227,60f4205f1ff413a8075705787199c719ad943e40,e389289e779612c5930d7c292bbbc94027695ae5,2003-05-18 00:58:52+00:00,2003-11-01 16:09:22+00:00,"return null; // gulp FIXME? -- this *should* never fail. OK to swallow????
return null; // gulp FIXME? -- this *should* never fail.",[203],[210],['ba74c2510f0d1812b7a5eeef55a1f29ea0e06e09']
159,src/java/org/apache/commons/math/random/RandomDataImpl.java,src/main/java/org/apache/commons/math/random/RandomDataImpl.java,,227,244,b3a6a6b3b5b269cf6ccab91588c320d925dac9ae,de33e91191b8ebd3cae27619a89a00de0d130b58,2003-11-14 22:25:28+00:00,2009-09-01 20:05:22+00:00,"return null; // gulp FIXME? -- this *should* never fail.
return null; // gulp FIXME? -- this *should* never fail.
return null; // gulp FIXME? -- this *should* never fail.","[221, 240]","[240, 240]","['24f51faee2e231cb65feef7b11749fd62ec4b1a2', '169271dd31cc1156da367f5ceae7d5b88ec1f88b']"
160,src/java/org/apache/commons/math/special/Gamma.java,src/main/java/org/apache/commons/math/special/Gamma.java,,66,66,2dec2474f9f5b39e6e0ffca795f52b9b1b88fdf3,b58585fb8def076b355699c8ee496b889534d744,2003-06-05 14:03:53+00:00,2003-06-11 01:19:19+00:00,// TODO: try to reduce this.  regularizedGammaP doesn't converge very,,,
161,src/main/java/org/apache/commons/math/stat/Frequency.java,src/main/java/org/apache/commons/math/stat/Frequency.java,,68,69,058ff00332fdb3b1e3db82db10ff8e5864ca4f02,696be68b5dc8872a818a24d8a377158314b54e31,2010-03-14 02:15:01+00:00,2012-02-14 16:17:55+00:00,"@SuppressWarnings(""unchecked"") // TODO is the cast OK?",,,
162,src/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java,src/main/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java,,31,31,b41ff57526cadeb5ab8407dd962d61a615181b42,bf740630ae735351a73ff5fe62a93ef5c29c2a74,2009-05-23 11:26:56+00:00,2009-07-20 20:13:24+00:00,// TODO: Add Serializable documentation,,,
163,src/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java,src/main/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java,,32,32,b41ff57526cadeb5ab8407dd962d61a615181b42,bf740630ae735351a73ff5fe62a93ef5c29c2a74,2009-05-23 11:26:56+00:00,2009-07-20 20:13:24+00:00,// TODO: Check Serializable implementation,,,
164,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/main/java/org/apache/commons/math/stat/inference/TTestImpl.java,,91,91,403e4e49562bcce4b8efd95278696f40eb3a429a,63bf6795403ae172c49e81fb9d58b063e77d5eaa,2004-05-24 05:29:05+00:00,2004-06-01 00:44:24+00:00,// TODO Auto-generated method stub,,,
165,src/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,,146,146,e7911e6efae8d19cb378a594929445f1bff547c1,e7ffb6ebc9973c6262e2e17cf650ddbb2488c2b5,2009-01-04 20:39:45+00:00,2009-01-05 01:01:16+00:00,//TODO:  find a way to use QR decomp to avoid inverting XX' here,,,
166,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,,201,192,37d642ec3056d6add8a535e9ef8d47992e3c0ae7,c643b22bfc91f7b01a0b0e20f59c6dc825b02eab,2011-12-31 09:38:11+00:00,2012-01-31 07:02:58+00:00,// TODO Is this necessary?,,,
167,src/java/org/apache/commons/math/util/BigReal.java,src/main/java/org/apache/commons/math/util/BigReal.java,,38,38,2180b0b9fa03b65f8d9edce2beb2de8ffa2f4d2e,cb545b5bc03c482f083ddfeb0d36bdf3387e8971,2009-05-22 13:55:22+00:00,2009-07-20 19:23:43+00:00,// TODO: Add Serializable documentation,,,
168,src/java/org/apache/commons/math/util/BigReal.java,src/main/java/org/apache/commons/math/util/BigReal.java,,39,39,2180b0b9fa03b65f8d9edce2beb2de8ffa2f4d2e,cb545b5bc03c482f083ddfeb0d36bdf3387e8971,2009-05-22 13:55:22+00:00,2009-07-20 19:23:43+00:00,// TODO: Check Serializable implementation,,,
169,src/java/org/apache/commons/math/util/BigRealField.java,src/main/java/org/apache/commons/math/util/BigRealField.java,,34,34,210f2d5661b98a6f5666a9e7a471aa18888eed63,ac01fdfb7a126d09ac87b6c7253913febcc1a734,2009-05-22 13:48:21+00:00,2009-07-20 16:51:09+00:00,// TODO: Add Serializable documentation,,,
170,src/java/org/apache/commons/math/util/BigRealField.java,src/main/java/org/apache/commons/math/util/BigRealField.java,,35,35,210f2d5661b98a6f5666a9e7a471aa18888eed63,ac01fdfb7a126d09ac87b6c7253913febcc1a734,2009-05-22 13:48:21+00:00,2009-07-20 16:51:09+00:00,// TODO: Check Serializable implementation,,,
171,src/java/org/apache/commons/math/util/DefaultTransformer.java,src/main/java/org/apache/commons/math/util/DefaultTransformer.java,,33,33,982deb25d520441750a0e1169c68d8c54260d8b2,77b5519151d3212065db80f7c082dcc50ad8857b,2009-05-22 14:04:56+00:00,2009-07-20 19:50:12+00:00,// TODO: Add Serializable documentation,,,
172,src/java/org/apache/commons/math/util/DefaultTransformer.java,src/main/java/org/apache/commons/math/util/DefaultTransformer.java,,34,34,982deb25d520441750a0e1169c68d8c54260d8b2,77b5519151d3212065db80f7c082dcc50ad8857b,2009-05-22 14:04:56+00:00,2009-07-20 19:50:12+00:00,// TODO: Check Serializable implementation,,,
173,src/java/org/apache/commons/math/DoubleArray.java,src/main/java/org/apache/commons/math/util/DoubleArray.java,,73,73,437e275a504d5d2de36365419e048ad9a05d83df,5d9efdbcd43d7f56c382694103d5ac70a266801f,2003-05-20 18:15:29+00:00,2003-05-21 05:48:25+00:00,//TODO: Throwing a NoSuchElementException might not be the right,,,
174,src/java/org/apache/commons/math/util/TransformerMap.java,src/main/java/org/apache/commons/math/util/TransformerMap.java,,35,35,982deb25d520441750a0e1169c68d8c54260d8b2,9d5d0da39b2fa317a88af0c1646a73018cd564a4,2009-05-22 14:04:56+00:00,2009-07-20 20:23:47+00:00,// TODO: Add Serializable documentation,,,
175,src/java/org/apache/commons/math/util/TransformerMap.java,src/main/java/org/apache/commons/math/util/TransformerMap.java,,36,36,982deb25d520441750a0e1169c68d8c54260d8b2,9d5d0da39b2fa317a88af0c1646a73018cd564a4,2009-05-22 14:04:56+00:00,2009-07-20 20:23:47+00:00,// TODO: Check Serializable implementation,,,
176,src/test/java/org/apache/commons/math/RetryTestCase.java,src/test/java/org/apache/commons/math/RetryTestCase.java,,27,27,96c2ce398318fdc1c4ebb865ef06061e72c6e5fd,3c4a3dbd7c34ee09b414400fb57477563359962a,2011-03-20 17:24:14+00:00,2011-03-27 15:02:47+00:00,// TODO implement retry policy using Junit 4  API,,,
177,src/test/org/apache/commons/math/analysis/NewtonSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/NewtonSolverTest.java,,42,44,eb6fb6cda45d8bf83aa8347eccd36d2ef68b0694,9c7a059486dceb61ecd9a16d33a1a3ffba4e94fd,2004-07-17 21:19:39+00:00,2009-07-20 16:32:34+00:00,"//TODO:  create abstract solver test class, move these there",,,
178,src/test/org/apache/commons/math/analysis/NewtonSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/NewtonSolverTest.java,,61,63,71a29150bb9794bdcece023f961831d904055719,9c7a059486dceb61ecd9a16d33a1a3ffba4e94fd,2008-12-07 20:24:10+00:00,2009-07-20 16:32:34+00:00,"//TODO:  create abstract solver test class, move these there",,,
179,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/java/org/apache/commons/math/distribution/BinomialDistributionTest.java,,162,124,0718895962e9d43858cbbe49cd592b5e2d0920c9,73812e41db0aa040b53c6ff3f35804c037aa2a9b,2003-11-19 03:22:54+00:00,2004-05-11 02:12:11+00:00,// TODO Auto-generated catch block,,,
180,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/java/org/apache/commons/math/distribution/BinomialDistributionTest.java,,175,137,0718895962e9d43858cbbe49cd592b5e2d0920c9,73812e41db0aa040b53c6ff3f35804c037aa2a9b,2003-11-19 03:22:54+00:00,2004-05-11 02:12:11+00:00,// TODO Auto-generated catch block,,,
181,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/java/org/apache/commons/math/distribution/ExponentialDistributionTest.java,,202,164,0718895962e9d43858cbbe49cd592b5e2d0920c9,56d545478a8899fd940e428adf3f827f6f1b347d,2003-11-19 03:22:54+00:00,2004-05-23 00:33:41+00:00,// TODO Auto-generated catch block,,,
182,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/java/org/apache/commons/math/distribution/ExponentialDistributionTest.java,,213,175,0718895962e9d43858cbbe49cd592b5e2d0920c9,56d545478a8899fd940e428adf3f827f6f1b347d,2003-11-19 03:22:54+00:00,2004-05-23 00:33:41+00:00,// TODO Auto-generated catch block,,,
183,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/java/org/apache/commons/math/distribution/ExponentialDistributionTest.java,,223,185,0718895962e9d43858cbbe49cd592b5e2d0920c9,56d545478a8899fd940e428adf3f827f6f1b347d,2003-11-19 03:22:54+00:00,2004-05-23 00:33:41+00:00,// TODO Auto-generated catch block,,,
184,src/test/org/apache/commons/math/distribution/FDistributionTest.java,src/test/java/org/apache/commons/math/distribution/FDistributionTest.java,,123,85,0718895962e9d43858cbbe49cd592b5e2d0920c9,56d545478a8899fd940e428adf3f827f6f1b347d,2003-11-19 03:22:54+00:00,2004-05-23 00:33:41+00:00,// TODO Auto-generated catch block,,,
185,src/test/org/apache/commons/math/distribution/FDistributionTest.java,src/test/java/org/apache/commons/math/distribution/FDistributionTest.java,,133,95,0718895962e9d43858cbbe49cd592b5e2d0920c9,56d545478a8899fd940e428adf3f827f6f1b347d,2003-11-19 03:22:54+00:00,2004-05-23 00:33:41+00:00,// TODO Auto-generated catch block,,,
186,src/test/org/apache/commons/math/distribution/FDistributionTest.java,src/test/java/org/apache/commons/math/distribution/FDistributionTest.java,,72,72,1d5a4e2d3d0fbd894b4e344a3d6ea601c14ab80e,f0789658718849f51184888e6580ad286d239a0c,2004-05-30 01:39:33+00:00,2004-07-24 21:41:37+00:00,//TODO: decide what to do about p = 1.  This currently blows up the solver.,,,
187,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math/distribution/GammaDistributionTest.java,,93,55,0718895962e9d43858cbbe49cd592b5e2d0920c9,56d545478a8899fd940e428adf3f827f6f1b347d,2003-11-19 03:22:54+00:00,2004-05-23 00:33:41+00:00,// TODO Auto-generated catch block,,,
188,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math/distribution/GammaDistributionTest.java,,107,69,0718895962e9d43858cbbe49cd592b5e2d0920c9,56d545478a8899fd940e428adf3f827f6f1b347d,2003-11-19 03:22:54+00:00,2004-05-23 00:33:41+00:00,// TODO Auto-generated catch block,,,
189,src/test/org/apache/commons/math/distribution/HypergeometricDistributionTest.java,src/test/java/org/apache/commons/math/distribution/HypergeometricDistributionTest.java,,164,126,0718895962e9d43858cbbe49cd592b5e2d0920c9,73812e41db0aa040b53c6ff3f35804c037aa2a9b,2003-11-19 03:22:54+00:00,2004-05-11 02:12:11+00:00,// TODO Auto-generated catch block,,,
190,src/test/org/apache/commons/math/distribution/HypergeometricDistributionTest.java,src/test/java/org/apache/commons/math/distribution/HypergeometricDistributionTest.java,,176,138,0718895962e9d43858cbbe49cd592b5e2d0920c9,73812e41db0aa040b53c6ff3f35804c037aa2a9b,2003-11-19 03:22:54+00:00,2004-05-11 02:12:11+00:00,// TODO Auto-generated catch block,,,
191,src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java,src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java,,164,159,5fe9b36c454f8a38416a96455da6ffeadbbe8a37,696be68b5dc8872a818a24d8a377158314b54e31,2010-11-30 11:55:22+00:00,2012-02-14 16:17:55+00:00,"// TODO: once MATH-364 is resolved, replace 9 with 30",,,
192,src/test/org/apache/commons/math/distribution/TDistributionTest.java,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,,175,137,0718895962e9d43858cbbe49cd592b5e2d0920c9,d948617ae5a351c22ba170e4bb5a1358e89fb6bd,2003-11-19 03:22:54+00:00,2004-02-28 21:58:33+00:00,// TODO Auto-generated catch block,,,
193,src/test/org/apache/commons/math/distribution/TDistributionTest.java,src/test/java/org/apache/commons/math/distribution/TDistributionTest.java,,185,147,0718895962e9d43858cbbe49cd592b5e2d0920c9,d948617ae5a351c22ba170e4bb5a1358e89fb6bd,2003-11-19 03:22:54+00:00,2004-02-28 21:58:33+00:00,// TODO Auto-generated catch block,,,
194,src/test/org/apache/commons/math/genetics/GeneticAlgorithmTestPermutations.java,src/test/java/org/apache/commons/math/genetics/GeneticAlgorithmTestPermutations.java,,109,109,e082a039f895458c231226e66f39e39cbf3b5ef2,d7f7b629b8b5cd860d5f94c5695adb926d2d9b68,2009-06-14 19:04:32+00:00,2009-07-20 19:35:35+00:00,// TODO Auto-generated constructor stub,,,
195,src/test/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,,649,628,a3b466009fa00e8c23532e5a28faec8117a1d75a,ced5fe0a220f5715a1657a78459ce318d8cc5a80,2009-01-31 04:51:17+00:00,2009-04-17 20:31:52+00:00,"// TODO: backing store doesn't implement equals
// TODO: backing store doesn't implement equals",[649],[649],['e7a7d913847bc2bcc808944b236da80026d25e3a']
196,src/test/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,,1162,1162,a3b466009fa00e8c23532e5a28faec8117a1d75a,7d4f6893f9ead9afec25395405775f460316f2d5,2009-01-31 04:51:17+00:00,2009-02-09 04:50:27+00:00,"// TODO: fixme
// TODO: fixme",[1162],[1162],['e7a7d913847bc2bcc808944b236da80026d25e3a']
197,src/test/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,,1168,1168,a3b466009fa00e8c23532e5a28faec8117a1d75a,7d4f6893f9ead9afec25395405775f460316f2d5,2009-01-31 04:51:17+00:00,2009-02-09 04:50:27+00:00,"// TODO: backing store doesn't yet implement equals
// TODO: backing store doesn't yet implement equals",[1168],[1168],['e7a7d913847bc2bcc808944b236da80026d25e3a']
198,src/test/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,,1122,1122,7d4f6893f9ead9afec25395405775f460316f2d5,ced5fe0a220f5715a1657a78459ce318d8cc5a80,2009-02-09 04:50:27+00:00,2009-04-17 20:31:52+00:00,// TODO: why is this test here,,,
199,src/test/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,,1127,1127,7d4f6893f9ead9afec25395405775f460316f2d5,ced5fe0a220f5715a1657a78459ce318d8cc5a80,2009-02-09 04:50:27+00:00,2009-04-17 20:31:52+00:00,//TODO: differeciate from resetting to zero,,,
200,src/test/org/apache/commons/math/linear/SparseRealVectorTest.java,src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java,,1127,1127,01f82aed424f2cd0c8dc2e0706dd2d810fc25de6,63e1a2c76c3eb0492ed20fb0a5864dfe0e1d711c,2009-02-10 03:02:38+00:00,2009-02-15 06:46:15+00:00,//TODO: backing store doesn't implement equals,,,
201,src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,,126,126,da462abca016b80ce42e4cb3523e3eb3522a559f,faed36db104582a4ed1635a3e73c263e005bd70a,2011-03-07 10:37:52+00:00,2011-03-08 21:09:48+00:00,// XXX Why was the message supposed to be empty?,,,
202,src/test/org/apache/commons/math/EmpiricalDistributionTest.java,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,,101,102,5de3587b86ffc735020c3b06e60c993cfc4e53ab,e389289e779612c5930d7c292bbbc94027695ae5,2003-05-21 14:21:15+00:00,2003-11-01 16:09:22+00:00,//TODO: replace with statistical tests,,,
203,src/test/org/apache/commons/math/EmpiricalDistributionTest.java,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,,153,154,5de3587b86ffc735020c3b06e60c993cfc4e53ab,e389289e779612c5930d7c292bbbc94027695ae5,2003-05-21 14:21:15+00:00,2003-11-01 16:09:22+00:00,//TODO: replace these with statistical tests -- refactor as necessary,,,
204,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,,102,83,b3a6a6b3b5b269cf6ccab91588c320d925dac9ae,696be68b5dc8872a818a24d8a377158314b54e31,2003-11-14 22:25:28+00:00,2012-02-14 16:17:55+00:00,//TODO: replace with statistical tests,,,
205,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,,154,156,b3a6a6b3b5b269cf6ccab91588c320d925dac9ae,90be3c8e9d20b8537d9b0b5057daa37289cc1e9a,2003-11-14 22:25:28+00:00,2004-01-29 05:27:54+00:00,//TODO: replace these with statistical tests -- refactor as necessary,,,
206,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,,148,102,0edbfb6b8900124432c4d1ef8d74f90c015643ac,696be68b5dc8872a818a24d8a377158314b54e31,2004-02-12 04:35:09+00:00,2012-02-14 16:17:55+00:00,//TODO: replace with statistical tests,,,
207,src/test/java/org/apache/commons/math/random/MersenneTwisterTest.java,src/test/java/org/apache/commons/math/random/MersenneTwisterTest.java,,29,29,b468defc676cddd3af2953f5e033f449d9cc661d,696be68b5dc8872a818a24d8a377158314b54e31,2011-08-02 19:48:18+00:00,2012-02-14 16:17:55+00:00,// TODO: Some of the tests moved up to RandomGeneratorAbstractTest tested alternative seeding / constructors,,,
208,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,,230,372,a72bbf44cf9fcbf2d5015e7ccf0e29d67403a696,696be68b5dc8872a818a24d8a377158314b54e31,2009-09-28 10:36:46+00:00,2012-02-14 16:17:55+00:00,"// TODO: increase upper bound to 40 when MATH-294 is resolved
// TODO: once MATH-294 is resolved, increase upper bounds on test means
// TODO: When MATH-282 is resolved, s/3000/10000 below
// TODO: When MATH-282 is resolved, s/3000/10000 below","[230, 231, 241]","[231, 241, 241]","['340943f1f5a189e49caad23ce2500e5bc9a25332', '2c8a114f766d05929e908fd79c5e4baf5a3841ae', '0f98e5c13db5d3c9144111319f9b144cd590b974']"
209,src/test/org/apache/commons/math/stat/CertifiedDataTest.java,src/test/java/org/apache/commons/math/stat/CertifiedDataTest.java,,110,72,e5833affa168b6e168d31bd24a2acbdf75f2d7ce,f7057c3ffa15e1c35376386d81277a6ed77ef90d,2003-11-15 16:01:42+00:00,2004-04-12 02:27:50+00:00,// TODO Auto-generated catch block,,,
210,src/test/org/apache/commons/math/stat/CertifiedDataTest.java,src/test/java/org/apache/commons/math/stat/CertifiedDataTest.java,,113,75,e5833affa168b6e168d31bd24a2acbdf75f2d7ce,f7057c3ffa15e1c35376386d81277a6ed77ef90d,2003-11-15 16:01:42+00:00,2004-04-12 02:27:50+00:00,// TODO Auto-generated catch block,,,
211,src/test/org/apache/commons/math/stat/ListUnivariateImpl.java,src/test/java/org/apache/commons/math/stat/descriptive/ListUnivariateImpl.java,,142,108,e5833affa168b6e168d31bd24a2acbdf75f2d7ce,56d545478a8899fd940e428adf3f827f6f1b347d,2003-11-15 16:01:42+00:00,2004-05-23 00:33:41+00:00,// TODO Auto-generated catch block,,,
212,src/test/org/apache/commons/math/stat/univariate/StorelessUnivariateStatisticAbstractTest.java,src/test/java/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java,,50,51,f80d05b493ddb55ffa05dc8990409d0e738ed7d8,2f88509be411451c29b901af9f5c1bd353aa26a5,2004-06-17 22:33:23+00:00,2004-07-10 17:14:15+00:00,//TODO:  add test for getN() once type is fixed,,,
213,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/java/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,,148,146,d9df34360f3e95f1b5bdda9095888dab7f45d982,696be68b5dc8872a818a24d8a377158314b54e31,2008-12-02 02:21:22+00:00,2012-02-14 16:17:55+00:00,//FiXME: test all other NaN contract specs,,,
214,src/test/org/apache/commons/math/stat/univariate/rank/PercentileTest.java,src/test/java/org/apache/commons/math/stat/descriptive/rank/PercentileTest.java,,99,98,88d69528063ab065906c590b714948d5bcef7a2c,e389289e779612c5930d7c292bbbc94027695ae5,2003-07-05 18:24:50+00:00,2003-11-01 16:09:22+00:00,// TODO: fix this bad calculation in Percentile,,,
215,src/test/org/apache/commons/math/stat/univariate/rank/PercentileTest.java,src/test/java/org/apache/commons/math/stat/descriptive/rank/PercentileTest.java,,98,60,b3a6a6b3b5b269cf6ccab91588c320d925dac9ae,2adb974fd0825011da4623ccde2da4660eb01526,2003-11-14 22:25:28+00:00,2004-03-21 04:26:54+00:00,// TODO: fix this bad calculation in Percentile,,,
216,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,,200,205,7584e481bffc5a5ffb8673b0cb869b56c73d3b87,696be68b5dc8872a818a24d8a377158314b54e31,2010-09-08 01:24:51+00:00,2012-02-14 16:17:55+00:00,"// TODO:  Should have assertRelativelyEquals(double[], double[], eps) in TestUtils",,,
217,src/test/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,,83,91,d9df34360f3e95f1b5bdda9095888dab7f45d982,6a24e9d8a5e9a524fb02390b934f82aac4eff205,2008-12-02 02:21:22+00:00,2009-05-09 15:05:42+00:00,// TODO: translate this into standard error vector and check,,,
218,src/test/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,,149,153,d9df34360f3e95f1b5bdda9095888dab7f45d982,e7911e6efae8d19cb378a594929445f1bff547c1,2008-12-02 02:21:22+00:00,2009-01-04 20:39:45+00:00,//TODO:  translate this into std error vector and check,,,
219,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,,250,249,431f30388985869e8a41c2b8c0d44ec822671316,e389289e779612c5930d7c292bbbc94027695ae5,2003-06-11 03:33:05+00:00,2003-11-01 16:09:22+00:00,//FIXME: get a real example to test against with alpha = .01,,,
220,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,,249,343,b3a6a6b3b5b269cf6ccab91588c320d925dac9ae,696be68b5dc8872a818a24d8a377158314b54e31,2003-11-14 22:25:28+00:00,2012-02-14 16:17:55+00:00,"//FIXME: get a real example to test against with alpha = .01
//FIXME: get a real example to test against with alpha = .01
//FIXME: get a real example to test against with alpha = .01","[251, 334]","[372, 202]","['0718895962e9d43858cbbe49cd592b5e2d0920c9', '7c918e3c65901e63bfa9a3c1a42cb42c34797ba9']"
221,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,,379,341,0718895962e9d43858cbbe49cd592b5e2d0920c9,7c918e3c65901e63bfa9a3c1a42cb42c34797ba9,2003-11-19 03:22:54+00:00,2004-04-25 19:38:17+00:00,// TODO Auto-generated catch block,,,
222,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,,389,351,0718895962e9d43858cbbe49cd592b5e2d0920c9,7c918e3c65901e63bfa9a3c1a42cb42c34797ba9,2003-11-19 03:22:54+00:00,2004-04-25 19:38:17+00:00,// TODO Auto-generated catch block,,,
223,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,,406,368,0718895962e9d43858cbbe49cd592b5e2d0920c9,7c918e3c65901e63bfa9a3c1a42cb42c34797ba9,2003-11-19 03:22:54+00:00,2004-04-25 19:38:17+00:00,// TODO Auto-generated catch block,,,
224,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,,421,383,0718895962e9d43858cbbe49cd592b5e2d0920c9,7c918e3c65901e63bfa9a3c1a42cb42c34797ba9,2003-11-19 03:22:54+00:00,2004-04-25 19:38:17+00:00,// TODO Auto-generated catch block,,,
225,src/test/org/apache/commons/math/stat/BivariateRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,,439,401,0718895962e9d43858cbbe49cd592b5e2d0920c9,7c918e3c65901e63bfa9a3c1a42cb42c34797ba9,2003-11-19 03:22:54+00:00,2004-04-25 19:38:17+00:00,// TODO Auto-generated catch block,,,
226,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,src/test/java/org/apache/commons/math/util/DefaultTransformerTest.java,,78,38,b033502afa7db1135bde5a3fbc4701f3fe069fd3,56d545478a8899fd940e428adf3f827f6f1b347d,2003-11-15 19:02:45+00:00,2004-05-23 00:33:41+00:00,// TODO Auto-generated catch block,,,
227,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,src/test/java/org/apache/commons/math/util/DefaultTransformerTest.java,,92,92,b033502afa7db1135bde5a3fbc4701f3fe069fd3,9267ae3bb27364ebba95cc615c2bf0308e6cb32e,2003-11-15 19:02:45+00:00,2004-02-16 07:04:04+00:00,// TODO Auto-generated catch block,,,
228,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,src/test/java/org/apache/commons/math/util/DefaultTransformerTest.java,,107,66,b033502afa7db1135bde5a3fbc4701f3fe069fd3,56d545478a8899fd940e428adf3f827f6f1b347d,2003-11-15 19:02:45+00:00,2004-05-23 00:33:41+00:00,// TODO Auto-generated catch block,,,
229,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,src/test/java/org/apache/commons/math/util/DefaultTransformerTest.java,,122,81,b033502afa7db1135bde5a3fbc4701f3fe069fd3,56d545478a8899fd940e428adf3f827f6f1b347d,2003-11-15 19:02:45+00:00,2004-05-23 00:33:41+00:00,// TODO Auto-generated catch block,,,
230,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,src/test/java/org/apache/commons/math/util/DefaultTransformerTest.java,,137,96,b033502afa7db1135bde5a3fbc4701f3fe069fd3,56d545478a8899fd940e428adf3f827f6f1b347d,2003-11-15 19:02:45+00:00,2004-05-23 00:33:41+00:00,// TODO Auto-generated catch block,,,
231,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,src/test/java/org/apache/commons/math/util/DefaultTransformerTest.java,,152,152,b033502afa7db1135bde5a3fbc4701f3fe069fd3,9267ae3bb27364ebba95cc615c2bf0308e6cb32e,2003-11-15 19:02:45+00:00,2004-02-16 07:04:04+00:00,// TODO Auto-generated catch block,,,
232,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,,1139,1139,b6f92546451fecbd207b2d67e0854fe1e8ce27e0,328513f3adbcb683aebda8f1b38a0cb14d33de4e,2010-12-10 00:50:50+00:00,2011-04-04 04:51:37+00:00,} catch (MathRuntimeException ex) { // XXX Loosing semantics?,,,
233,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,,1153,1153,b6f92546451fecbd207b2d67e0854fe1e8ce27e0,328513f3adbcb683aebda8f1b38a0cb14d33de4e,2010-12-10 00:50:50+00:00,2011-04-04 04:51:37+00:00,} catch (MathRuntimeException ex) { // XXX Loosing semantics?,,,
234,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,,798,798,9161afbbbc887b89b9fb76dce028c96ed2248e23,760078b411fa3c0a2914574756ef458c3fc68d00,2011-08-24 12:15:51+00:00,2011-08-28 12:58:57+00:00,// TODO It is not specified in the javadoc that getData should,,,
235,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java,,160,156,dafd0976adba45e9dde48dab40be08e7d52dfb72,696be68b5dc8872a818a24d8a377158314b54e31,2010-04-22 22:09:21+00:00,2012-02-14 16:17:55+00:00,// XXX Not sure about this formula,,,
236,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,,98,98,58f407fc8a3329bd2d38451ad4c992dc71441097,962315ba9322bb96d5b1941c4272501cc7cc050e,2010-07-26 12:17:45+00:00,2010-07-28 12:03:41+00:00,// XXX Python: -0.27195612805911351 (instead of -0.2719561279558559).,,,
237,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,,100,100,58f407fc8a3329bd2d38451ad4c992dc71441097,962315ba9322bb96d5b1941c4272501cc7cc050e,2010-07-26 12:17:45+00:00,2010-07-28 12:03:41+00:00,// XXX Python: 15 (instead of 18).,,,
238,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,,102,102,58f407fc8a3329bd2d38451ad4c992dc71441097,962315ba9322bb96d5b1941c4272501cc7cc050e,2010-07-26 12:17:45+00:00,2010-07-28 12:03:41+00:00,// XXX Python: 11 (instead of 17).,,,
239,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,,108,108,58f407fc8a3329bd2d38451ad4c992dc71441097,962315ba9322bb96d5b1941c4272501cc7cc050e,2010-07-26 12:17:45+00:00,2010-07-28 12:03:41+00:00,// XXX Python: 0.82221643488363705 (instead of 0.8222164326561908).,,,
240,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,,110,110,58f407fc8a3329bd2d38451ad4c992dc71441097,962315ba9322bb96d5b1941c4272501cc7cc050e,2010-07-26 12:17:45+00:00,2010-07-28 12:03:41+00:00,// XXX Python: 25 (instead of 43).,,,
241,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java,,112,112,58f407fc8a3329bd2d38451ad4c992dc71441097,962315ba9322bb96d5b1941c4272501cc7cc050e,2010-07-26 12:17:45+00:00,2010-07-28 12:03:41+00:00,// XXX Python: 21 (instead of 24).,,,
242,src/main/java/org/apache/commons/math/util/FastMath.java,src/main/java/org/apache/commons/math/util/FastMath.java,,3683,3851,2c88aa94c18df24c4b37bbc976081b50aa936a38,d86b785b6d67e2bac78a5d14a01cd806b3151b31,2011-01-21 20:04:57+00:00,2011-01-23 22:37:50+00:00,"return StrictMath.hypot(x, y); // TODO provide our own implementation",,,
243,src/main/java/org/apache/commons/math/util/FastMath.java,src/main/java/org/apache/commons/math/util/FastMath.java,,3705,3626,2c88aa94c18df24c4b37bbc976081b50aa936a38,696be68b5dc8872a818a24d8a377158314b54e31,2011-01-21 20:04:57+00:00,2012-02-14 16:17:55+00:00,"return StrictMath.IEEEremainder(dividend, divisor); // TODO provide our own implementation
return StrictMath.IEEEremainder(dividend, divisor); // TODO provide our own implementation",[9774],[3578],['dad0b0163b8e84cf10a7b868079a401c9274f797']
244,src/main/java/org/apache/commons/math/util/FastMath.java,src/main/java/org/apache/commons/math/util/FastMath.java,,256,256,093d8d914ab1af80e08551382e6053430ecf7f89,0d4c8d4a70d1ce77d78e6811788754f34502e14d,2011-01-22 20:19:40+00:00,2011-01-23 00:57:29+00:00,private static double getSign(double d){ // TODO perhaps move to MathUtils?,,,
245,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,,974,978,3719af9ea288f76cfbaf0c9b6d9b0b04faddc146,c9f2d87527d653359d740615b4a7ca8673edf5e5,2011-01-19 19:05:38+00:00,2011-01-21 04:38:45+00:00,final boolean fatal = false; // TODO set true once all bugs have been fixed,,,
246,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,,996,1009,7d763283f8c27fd6ee6da2151343827e36026841,3729cef21aa0bf41df1f39d2cc9cf6dd90144cc8,2011-01-21 20:01:10+00:00,2011-01-22 16:22:06+00:00,sb.append(o.getClass().getSimpleName().toLowerCase()); // Hack: assume only Float/Double are used,,,
247,src/test/java/org/apache/commons/math/util/FastMathTest.java,src/test/java/org/apache/commons/math/util/FastMathTest.java,,1099,1240,7d763283f8c27fd6ee6da2151343827e36026841,fa0d87fd628b9ac0a330aac226adb2979da334cb,2011-01-21 20:01:10+00:00,2011-01-24 18:07:48+00:00,"// TODO Assert.assertTrue(""FastMath should implement all StrictMath methods"", ok);",,,
248,src/test/org/apache/commons/math/stat/UnivariateImplTest.java,src/main/java/org/apache/commons/math/linear/SingularMatrixException.java,192b6865a61fb0b9b617c07ab5adfaf410eceb32,235,229,a286c243eb965fc260289509264e1b9cc1524b89,e389289e779612c5930d7c292bbbc94027695ae5,2003-05-29 20:35:46+00:00,2003-11-01 16:09:22+00:00,//FiXME: test all other NaN contract specs,,,
249,src/test/org/apache/commons/math/stat/UnivariateImplTest.java,src/main/java/org/apache/commons/math/linear/SingularMatrixException.java,192b6865a61fb0b9b617c07ab5adfaf410eceb32,229,143,b3a6a6b3b5b269cf6ccab91588c320d925dac9ae,dc2a102e3c9126f5d4f616a41572e2c62281bf24,2003-11-14 22:25:28+00:00,2008-01-04 13:49:14+00:00,//FiXME: test all other NaN contract specs,,,
250,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,,216,287,d451a1fb921f7dec1bde47a05a37fbed4df5a1ba,696be68b5dc8872a818a24d8a377158314b54e31,2011-08-06 17:06:38+00:00,2012-02-14 16:17:55+00:00,"// System.out.println(""bobyqa""); // XXX
printMethod(); // XXX",[215],[275],['9ca170c67f068fd2bc568126c90bc8c0a9f6855b']
251,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,,372,376,d451a1fb921f7dec1bde47a05a37fbed4df5a1ba,696be68b5dc8872a818a24d8a377158314b54e31,2011-08-06 17:06:38+00:00,2012-02-14 16:17:55+00:00,"// System.out.println(""bobyqb""); // XXX
printMethod(); // XXX",[371],[361],['9ca170c67f068fd2bc568126c90bc8c0a9f6855b']
252,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,,779,779,d451a1fb921f7dec1bde47a05a37fbed4df5a1ba,4b1377907d9aff7682fc42fad9c6907e8ae9513c,2011-08-06 17:06:38+00:00,2011-08-16 21:15:56+00:00,d__1 = vlag.getEntry(knew); // XXX Same statement as a few lines below?,,,
253,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,,786,752,d451a1fb921f7dec1bde47a05a37fbed4df5a1ba,696be68b5dc8872a818a24d8a377158314b54e31,2011-08-06 17:06:38+00:00,2012-02-14 16:17:55+00:00,cauchy = ZERO; // XXX Useful statement?,,,
254,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,,790,790,d451a1fb921f7dec1bde47a05a37fbed4df5a1ba,4b1377907d9aff7682fc42fad9c6907e8ae9513c,2011-08-06 17:06:38+00:00,2011-08-16 21:15:56+00:00,d__1 = vlag.getEntry(knew); // XXX Same statement as a few lines above?,,,
255,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,,1338,1260,d451a1fb921f7dec1bde47a05a37fbed4df5a1ba,696be68b5dc8872a818a24d8a377158314b54e31,2011-08-06 17:06:38+00:00,2012-02-14 16:17:55+00:00,"// System.out.println(""altmov""); // XXX
printMethod(); // XXX",[1268],[1245],['9ca170c67f068fd2bc568126c90bc8c0a9f6855b']
256,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,,1721,1584,d451a1fb921f7dec1bde47a05a37fbed4df5a1ba,696be68b5dc8872a818a24d8a377158314b54e31,2011-08-06 17:06:38+00:00,2012-02-14 16:17:55+00:00,"// System.out.println(""prelim""); // XXX
printMethod(); // XXX",[1613],[1567],['9ca170c67f068fd2bc568126c90bc8c0a9f6855b']
257,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,,1965,1966,d451a1fb921f7dec1bde47a05a37fbed4df5a1ba,4b1377907d9aff7682fc42fad9c6907e8ae9513c,2011-08-06 17:06:38+00:00,2011-08-16 21:15:56+00:00,"// System.out.println(""rescue""); // XXX",,,
258,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,,2508,1812,d451a1fb921f7dec1bde47a05a37fbed4df5a1ba,696be68b5dc8872a818a24d8a377158314b54e31,2011-08-06 17:06:38+00:00,2012-02-14 16:17:55+00:00,"// System.out.println(""trsbox""); // XXX
printMethod(); // XXX",[1857],[1793],['9ca170c67f068fd2bc568126c90bc8c0a9f6855b']
259,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,,2996,2300,d451a1fb921f7dec1bde47a05a37fbed4df5a1ba,696be68b5dc8872a818a24d8a377158314b54e31,2011-08-06 17:06:38+00:00,2012-02-14 16:17:55+00:00,"// System.out.println(""update""); // XXX
printMethod(); // XXX",[2343],[2281],['9ca170c67f068fd2bc568126c90bc8c0a9f6855b']
260,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,,3002,2306,d451a1fb921f7dec1bde47a05a37fbed4df5a1ba,696be68b5dc8872a818a24d8a377158314b54e31,2011-08-06 17:06:38+00:00,2012-02-14 16:17:55+00:00,// XXX Should probably be split into two arrays.,,,
261,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,,3089,2384,d451a1fb921f7dec1bde47a05a37fbed4df5a1ba,696be68b5dc8872a818a24d8a377158314b54e31,2011-08-06 17:06:38+00:00,2012-02-14 16:17:55+00:00,"// System.out.println(""setup""); // XXX
printMethod(); // XXX",[2424],[2362],['9ca170c67f068fd2bc568126c90bc8c0a9f6855b']
262,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,,58,58,7c6dd40b330d85ae718e867c4d5cee0b1c4f317b,3872917effefb08c997431a8bdf3aaabbc159fac,2011-08-13 09:08:39+00:00,2011-08-15 21:16:57+00:00,"private static final int INDEX_OFFSET = 1; // XXX to become ""0"" when all loops are 0-based.",,,
263,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,,1999,1923,9c4571dd506954f0893b85ec4b82e5bc69fe2c16,9ca170c67f068fd2bc568126c90bc8c0a9f6855b,2011-08-16 21:55:49+00:00,2011-10-24 21:09:32+00:00,"// System.out.println(""loop in trsbox: state="" + state); // XXX",,,
264,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,,479,468,591e3d166e0e3202c5a4a577077a5a43c101f65e,696be68b5dc8872a818a24d8a377158314b54e31,2011-08-18 22:53:48+00:00,2012-02-14 16:17:55+00:00,throw new PathIsExploredException(); // XXX,,,
265,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,,576,567,1f0c4c94514e40479aedf6ed41b2c88a44dfbe33,696be68b5dc8872a818a24d8a377158314b54e31,2011-08-19 21:35:19+00:00,2012-02-14 16:17:55+00:00,"// sum = sumVector.getEntry(k); // XXX ""testAckley"" and ""testDiffPow"" fail.",,,
266,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,,1699,1636,1f0c4c94514e40479aedf6ed41b2c88a44dfbe33,696be68b5dc8872a818a24d8a377158314b54e31,2011-08-19 21:35:19+00:00,2012-02-14 16:17:55+00:00,throw new PathIsExploredException(); // XXX,,,
267,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,,1707,1644,1f0c4c94514e40479aedf6ed41b2c88a44dfbe33,696be68b5dc8872a818a24d8a377158314b54e31,2011-08-19 21:35:19+00:00,2012-02-14 16:17:55+00:00,throw new PathIsExploredException(); // XXX,,,
268,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,,1711,1648,1f0c4c94514e40479aedf6ed41b2c88a44dfbe33,696be68b5dc8872a818a24d8a377158314b54e31,2011-08-19 21:35:19+00:00,2012-02-14 16:17:55+00:00,throw new PathIsExploredException(); // XXX,,,
269,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,,1723,1660,1f0c4c94514e40479aedf6ed41b2c88a44dfbe33,696be68b5dc8872a818a24d8a377158314b54e31,2011-08-19 21:35:19+00:00,2012-02-14 16:17:55+00:00,"throw new PathIsExploredException(); // XXX
//                     throw new PathIsExploredException(); // XXX",[1660],[1660],['0093f7b0a2a9e06ec5b5e1e551676269171c3e3d']
270,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,,1771,1710,1f0c4c94514e40479aedf6ed41b2c88a44dfbe33,696be68b5dc8872a818a24d8a377158314b54e31,2011-08-19 21:35:19+00:00,2012-02-14 16:17:55+00:00,throw new PathIsExploredException(); // XXX,,,
271,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,,1796,1735,1f0c4c94514e40479aedf6ed41b2c88a44dfbe33,696be68b5dc8872a818a24d8a377158314b54e31,2011-08-19 21:35:19+00:00,2012-02-14 16:17:55+00:00,"// zmat.setEntry(nfm, nfxm, Math.sqrt(HALF) * recip); // XXX ""testAckley"" and ""testDiffPow"" fail.
// zMatrix.setEntry(nfm, nfxm, Math.sqrt(HALF) * recip); // XXX ""testAckley"" and ""testDiffPow"" fail.",[1762],[1716],['9ca170c67f068fd2bc568126c90bc8c0a9f6855b']
272,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,,1813,1752,1f0c4c94514e40479aedf6ed41b2c88a44dfbe33,696be68b5dc8872a818a24d8a377158314b54e31,2011-08-19 21:35:19+00:00,2012-02-14 16:17:55+00:00,"throw new PathIsExploredException(); // XXX
//                 throw new PathIsExploredException(); // XXX",[1750],[1752],['0093f7b0a2a9e06ec5b5e1e551676269171c3e3d']
273,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,,551,540,67480f06e848657b66c20743afecb3d0af3e34bb,696be68b5dc8872a818a24d8a377158314b54e31,2011-09-06 13:05:55+00:00,2012-02-14 16:17:55+00:00,throw new PathIsExploredException(); // XXX,,,
274,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,,728,733,e0f684748b88a85917f2345a3e9b9189c7c72997,696be68b5dc8872a818a24d8a377158314b54e31,2011-10-18 23:12:14+00:00,2012-02-14 16:17:55+00:00,"// beta += dx * dx + dsq * (xoptsq + dx + dx + HALF * dsq) - bsum; // XXX ""testAckley"" and ""testDiffPow"" fail.",,,
275,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,,729,734,e0f684748b88a85917f2345a3e9b9189c7c72997,696be68b5dc8872a818a24d8a377158314b54e31,2011-10-18 23:12:14+00:00,2012-02-14 16:17:55+00:00,"// beta = dx * dx + dsq * (xoptsq + 2 * dx + HALF * dsq) + beta - bsum; // XXX ""testDiffPow"" fails.",,,
276,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,,430,445,9ca170c67f068fd2bc568126c90bc8c0a9f6855b,696be68b5dc8872a818a24d8a377158314b54e31,2011-10-24 21:09:32+00:00,2012-02-14 16:17:55+00:00,printState(20); // XXX,,,
277,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,,466,481,9ca170c67f068fd2bc568126c90bc8c0a9f6855b,696be68b5dc8872a818a24d8a377158314b54e31,2011-10-24 21:09:32+00:00,2012-02-14 16:17:55+00:00,printState(60); // XXX,,,
278,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,,540,555,9ca170c67f068fd2bc568126c90bc8c0a9f6855b,696be68b5dc8872a818a24d8a377158314b54e31,2011-10-24 21:09:32+00:00,2012-02-14 16:17:55+00:00,printState(90); // XXX,,,
279,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,,645,660,9ca170c67f068fd2bc568126c90bc8c0a9f6855b,696be68b5dc8872a818a24d8a377158314b54e31,2011-10-24 21:09:32+00:00,2012-02-14 16:17:55+00:00,printState(210); // XXX,,,
280,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,,671,686,9ca170c67f068fd2bc568126c90bc8c0a9f6855b,696be68b5dc8872a818a24d8a377158314b54e31,2011-10-24 21:09:32+00:00,2012-02-14 16:17:55+00:00,printState(230); // XXX,,,
281,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,,794,809,9ca170c67f068fd2bc568126c90bc8c0a9f6855b,696be68b5dc8872a818a24d8a377158314b54e31,2011-10-24 21:09:32+00:00,2012-02-14 16:17:55+00:00,printState(360); // XXX,,,
282,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,,1103,1118,9ca170c67f068fd2bc568126c90bc8c0a9f6855b,696be68b5dc8872a818a24d8a377158314b54e31,2011-10-24 21:09:32+00:00,2012-02-14 16:17:55+00:00,printState(650); // XXX,,,
283,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,,1155,1170,9ca170c67f068fd2bc568126c90bc8c0a9f6855b,696be68b5dc8872a818a24d8a377158314b54e31,2011-10-24 21:09:32+00:00,2012-02-14 16:17:55+00:00,printState(680); // XXX,,,
284,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,,1180,1195,9ca170c67f068fd2bc568126c90bc8c0a9f6855b,696be68b5dc8872a818a24d8a377158314b54e31,2011-10-24 21:09:32+00:00,2012-02-14 16:17:55+00:00,printState(720); // XXX,,,
285,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,,1861,1880,9ca170c67f068fd2bc568126c90bc8c0a9f6855b,696be68b5dc8872a818a24d8a377158314b54e31,2011-10-24 21:09:32+00:00,2012-02-14 16:17:55+00:00,printState(20); // XXX,,,
286,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,,1865,1884,9ca170c67f068fd2bc568126c90bc8c0a9f6855b,696be68b5dc8872a818a24d8a377158314b54e31,2011-10-24 21:09:32+00:00,2012-02-14 16:17:55+00:00,printState(30); // XXX,,,
287,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,,1898,1917,9ca170c67f068fd2bc568126c90bc8c0a9f6855b,696be68b5dc8872a818a24d8a377158314b54e31,2011-10-24 21:09:32+00:00,2012-02-14 16:17:55+00:00,printState(50); // XXX,,,
288,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,,2006,2025,9ca170c67f068fd2bc568126c90bc8c0a9f6855b,696be68b5dc8872a818a24d8a377158314b54e31,2011-10-24 21:09:32+00:00,2012-02-14 16:17:55+00:00,printState(90); // XXX,,,
289,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,,2015,2034,9ca170c67f068fd2bc568126c90bc8c0a9f6855b,696be68b5dc8872a818a24d8a377158314b54e31,2011-10-24 21:09:32+00:00,2012-02-14 16:17:55+00:00,printState(100); // XXX,,,
290,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,,2042,2061,9ca170c67f068fd2bc568126c90bc8c0a9f6855b,696be68b5dc8872a818a24d8a377158314b54e31,2011-10-24 21:09:32+00:00,2012-02-14 16:17:55+00:00,printState(120); // XXX,,,
291,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,,2113,2132,9ca170c67f068fd2bc568126c90bc8c0a9f6855b,696be68b5dc8872a818a24d8a377158314b54e31,2011-10-24 21:09:32+00:00,2012-02-14 16:17:55+00:00,printState(150); // XXX,,,
292,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,,2198,2217,9ca170c67f068fd2bc568126c90bc8c0a9f6855b,696be68b5dc8872a818a24d8a377158314b54e31,2011-10-24 21:09:32+00:00,2012-02-14 16:17:55+00:00,printState(190); // XXX,,,
293,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,,2224,2243,9ca170c67f068fd2bc568126c90bc8c0a9f6855b,696be68b5dc8872a818a24d8a377158314b54e31,2011-10-24 21:09:32+00:00,2012-02-14 16:17:55+00:00,printState(210); // XXX,,,
294,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,,2452,2452,9ca170c67f068fd2bc568126c90bc8c0a9f6855b,696be68b5dc8872a818a24d8a377158314b54e31,2011-10-24 21:09:32+00:00,2012-02-14 16:17:55+00:00,// XXX utility for figuring out call sequence.,,,
295,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,,2459,2459,9ca170c67f068fd2bc568126c90bc8c0a9f6855b,696be68b5dc8872a818a24d8a377158314b54e31,2011-10-24 21:09:32+00:00,2012-02-14 16:17:55+00:00,// XXX utility for figuring out call sequence.,,,
296,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,,2463,2463,9ca170c67f068fd2bc568126c90bc8c0a9f6855b,696be68b5dc8872a818a24d8a377158314b54e31,2011-10-24 21:09:32+00:00,2012-02-14 16:17:55+00:00,// XXX utility for figuring out call sequence.,,,
297,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,,277,311,d451a1fb921f7dec1bde47a05a37fbed4df5a1ba,696be68b5dc8872a818a24d8a377158314b54e31,2011-08-06 17:06:38+00:00,2012-02-14 16:17:55+00:00,"System.out.println(func.getClass().getName() + "" BEGIN""); // XXX",,,
298,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,,299,332,d451a1fb921f7dec1bde47a05a37fbed4df5a1ba,696be68b5dc8872a818a24d8a377158314b54e31,2011-08-06 17:06:38+00:00,2012-02-14 16:17:55+00:00,"System.out.println(func.getClass().getName() + "" END""); // XXX",,,
299,src/main/java/org/apache/commons/math/ode/ExpandableFirstOrderDifferentialEquations.java,src/main/java/org/apache/commons/math/ode/ExpandableFirstOrderDifferentialEquations.java,,89,89,b7c5cd5ff7b02a22fbac06aef14260e0096ce2c0,b5724e1cc0110ff35b4e75b4784117f4daffcb93,2011-09-25 15:04:39+00:00,2011-09-28 05:56:42+00:00,"// TODO we should not catch Exception, and we should identify the offending additional equation",,,
300,src/main/java/org/apache/commons/math/ode/ExpandableFirstOrderDifferentialEquations.java,src/main/java/org/apache/commons/math/ode/ExpandableFirstOrderDifferentialEquations.java,,121,121,b7c5cd5ff7b02a22fbac06aef14260e0096ce2c0,b5724e1cc0110ff35b4e75b4784117f4daffcb93,2011-09-25 15:04:39+00:00,2011-09-28 05:56:42+00:00,"// TODO we should not catch Exception, and we should identify the offending additional equation",,,
301,src/main/java/org/apache/commons/math/ode/ExpandableFirstOrderDifferentialEquations.java,src/main/java/org/apache/commons/math/ode/ExpandableFirstOrderDifferentialEquations.java,,220,220,b7c5cd5ff7b02a22fbac06aef14260e0096ce2c0,b5724e1cc0110ff35b4e75b4784117f4daffcb93,2011-09-25 15:04:39+00:00,2011-09-28 05:56:42+00:00,"// TODO we should not catch Exception, and we should identify the offending additional equation",,,
302,src/main/java/org/apache/commons/math/ode/ExpandableFirstOrderDifferentialEquations.java,src/main/java/org/apache/commons/math/ode/ExpandableFirstOrderDifferentialEquations.java,,251,251,b7c5cd5ff7b02a22fbac06aef14260e0096ce2c0,b5724e1cc0110ff35b4e75b4784117f4daffcb93,2011-09-25 15:04:39+00:00,2011-09-28 05:56:42+00:00,"// TODO we should not catch Exception, and we should identify the offending additional equation",,,
303,src/main/java/org/apache/commons/math/ode/ExpandableFirstOrderDifferentialEquations.java,src/main/java/org/apache/commons/math/ode/ExpandableFirstOrderDifferentialEquations.java,,268,268,b7c5cd5ff7b02a22fbac06aef14260e0096ce2c0,b5724e1cc0110ff35b4e75b4784117f4daffcb93,2011-09-25 15:04:39+00:00,2011-09-28 05:56:42+00:00,"// TODO we should not catch Exception, and we should identify the offending additional equation",,,
304,src/test/java/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java,src/test/java/org/apache/commons/math/distribution/RealDistributionAbstractTest.java,,182,194,439cb994d17bf227e47db9ae076c0f3ea9f3d61c,02d7cea111cfe0bebba42d1c030dadd1b82036db,2010-03-17 16:45:31+00:00,2011-12-03 06:17:19+00:00,//TODO: remove cast when density(double) is added to ContinuousDistribution,,,
305,src/java/org/apache/commons/math/optimization/MultiStartMultivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/MultivariateMultiStartOptimizer.java,,42,42,b41ff57526cadeb5ab8407dd962d61a615181b42,5fc860d2c151e7d39b49961fe8514563f890e9ce,2009-05-23 11:26:56+00:00,2009-06-20 18:17:32+00:00,// TODO: Add Serializable documentation,,,
306,src/java/org/apache/commons/math/optimization/MultiStartMultivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/MultivariateMultiStartOptimizer.java,,43,43,b41ff57526cadeb5ab8407dd962d61a615181b42,5fc860d2c151e7d39b49961fe8514563f890e9ce,2009-05-23 11:26:56+00:00,2009-06-20 18:17:32+00:00,// TODO: Check Serializable implementation,,,
307,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizer.java,,185,185,a21faeae6ed850c618b4fb739a422e3b144db135,51aa6e6ca29a8265784c037bc3a42455329ee4ab,2010-08-30 13:06:22+00:00,2010-09-23 12:11:56+00:00,"// XXX Main code should be here, using ""startValue"" for the first start.",,,
308,src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizer.java,,186,186,a21faeae6ed850c618b4fb739a422e3b144db135,51aa6e6ca29a8265784c037bc3a42455329ee4ab,2010-08-30 13:06:22+00:00,2010-09-23 12:11:56+00:00,"// XXX This method should set ""startValue"" to min + 0.5 * (max - min)",,,
309,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java,src/test/java/org/apache/commons/math/analysis/solvers/UnivariateSolverUtilsTest.java,,55,50,daa37ac393c6201ceea11c732da5d5b31dfcee2b,696be68b5dc8872a818a24d8a377158314b54e31,2010-10-01 16:56:22+00:00,2012-02-14 16:17:55+00:00,"//             fail(""Expecting IllegalArgumentException""); // TODO needs rework since convergence behaviour was changed
//             Assert.fail(""Expecting IllegalArgumentException""); // TODO needs rework since convergence behaviour was changed
//             Assert.fail(""Expecting MathIllegalArgumentException""); // TODO needs rework since convergence behaviour was changed","[55, 59]","[60, 60]","['b9559bfce972a8b079ebc5ac8b6326a524ce29f8', 'b6f92546451fecbd207b2d67e0854fe1e8ce27e0']"
310,src/java/org/apache/commons/math/optimization/SimpleRealPointChecker.java,src/main/java/org/apache/commons/math/optimization/SimplePointChecker.java,,37,37,b41ff57526cadeb5ab8407dd962d61a615181b42,6135415f3184a4983f80141ccbb0907e0224bbb6,2009-05-23 11:26:56+00:00,2009-07-20 19:34:06+00:00,// TODO: Add Serializable documentation,,,
311,src/java/org/apache/commons/math/optimization/SimpleRealPointChecker.java,src/main/java/org/apache/commons/math/optimization/SimplePointChecker.java,,38,38,b41ff57526cadeb5ab8407dd962d61a615181b42,6135415f3184a4983f80141ccbb0907e0224bbb6,2009-05-23 11:26:56+00:00,2009-07-20 19:34:06+00:00,// TODO: Check Serializable implementation,,,
312,src/java/org/apache/commons/math/optimization/SimpleScalarValueChecker.java,src/main/java/org/apache/commons/math/optimization/SimpleValueChecker.java,,37,37,b41ff57526cadeb5ab8407dd962d61a615181b42,6135415f3184a4983f80141ccbb0907e0224bbb6,2009-05-23 11:26:56+00:00,2009-07-20 19:34:06+00:00,// TODO: Add Serializable documentation,,,
313,src/java/org/apache/commons/math/optimization/SimpleScalarValueChecker.java,src/main/java/org/apache/commons/math/optimization/SimpleValueChecker.java,,38,38,b41ff57526cadeb5ab8407dd962d61a615181b42,6135415f3184a4983f80141ccbb0907e0224bbb6,2009-05-23 11:26:56+00:00,2009-07-20 19:34:06+00:00,// TODO: Check Serializable implementation,,,
314,src/java/org/apache/commons/math/optimization/SimpleVectorialValueChecker.java,src/main/java/org/apache/commons/math/optimization/SimpleVectorValueChecker.java,,37,37,b41ff57526cadeb5ab8407dd962d61a615181b42,6135415f3184a4983f80141ccbb0907e0224bbb6,2009-05-23 11:26:56+00:00,2009-07-20 19:34:06+00:00,// TODO: Add Serializable documentation,,,
315,src/java/org/apache/commons/math/optimization/SimpleVectorialValueChecker.java,src/main/java/org/apache/commons/math/optimization/SimpleVectorValueChecker.java,,38,38,b41ff57526cadeb5ab8407dd962d61a615181b42,6135415f3184a4983f80141ccbb0907e0224bbb6,2009-05-23 11:26:56+00:00,2009-07-20 19:34:06+00:00,// TODO: Check Serializable implementation,,,
316,src/main/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizer.java,,76,78,63030b2b0ad2735a45522b73adc414746eb3dd38,7460c082a39251193108da52ce05e63f3e3796d1,2013-08-09 23:21:14+00:00,2014-02-18 14:31:34+00:00,model = other.model; // XXX Not thread-safe,,,
317,src/main/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizer.java,,77,79,63030b2b0ad2735a45522b73adc414746eb3dd38,7460c082a39251193108da52ce05e63f3e3796d1,2013-08-09 23:21:14+00:00,2014-02-18 14:31:34+00:00,jacobian = other.jacobian; // XXX Not thread-safe,,,
318,src/main/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizer.java,,88,90,63030b2b0ad2735a45522b73adc414746eb3dd38,7460c082a39251193108da52ce05e63f3e3796d1,2013-08-09 23:21:14+00:00,2014-02-18 14:31:34+00:00,"this.weight = weight; // XXX Not thread-safe
this.weight = newWeight; // XXX Not thread-safe",[90],[90],['cf4805081b84624a904af4c510b8467d3beddae9']
319,src/main/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizer.java,,96,98,63030b2b0ad2735a45522b73adc414746eb3dd38,7460c082a39251193108da52ce05e63f3e3796d1,2013-08-09 23:21:14+00:00,2014-02-18 14:31:34+00:00,"this.model = model; // XXX Not thread-safe
this.model = newModel; // XXX Not thread-safe",[98],[98],['cf4805081b84624a904af4c510b8467d3beddae9']
320,src/main/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizer.java,,97,99,63030b2b0ad2735a45522b73adc414746eb3dd38,7460c082a39251193108da52ce05e63f3e3796d1,2013-08-09 23:21:14+00:00,2014-02-18 14:31:34+00:00,"this.jacobian = jacobian; // XXX Not thread-safe
this.jacobian = newJacobian; // XXX Not thread-safe",[99],[99],['cf4805081b84624a904af4c510b8467d3beddae9']
321,src/main/java/org/apache/commons/math3/optim/AbstractOptimizer.java,src/main/java/org/apache/commons/math3/optim/AbstractOptimizer.java,,64,64,63030b2b0ad2735a45522b73adc414746eb3dd38,7460c082a39251193108da52ce05e63f3e3796d1,2013-08-09 23:21:14+00:00,2014-02-18 14:31:34+00:00,checker = other.checker; // XXX Not thread-safe.,,,
322,src/main/java/org/apache/commons/math3/geometry/spherical/oned/SubChord.java,src/main/java/org/apache/commons/math3/geometry/spherical/oned/SubChord.java,,70,70,13188390f33649b1881dbd4d9f2440894a36463a,a3e4cbe0bb26acab07f53a7d4ced1f24045e08e0,2014-01-01 17:24:37+00:00,2014-01-01 17:26:54+00:00,// TODO Auto-generated method stub,,,
323,src/main/java/org/apache/commons/math3/geometry/spherical/oned/SubChord.java,src/main/java/org/apache/commons/math3/geometry/spherical/oned/SubChord.java,,76,76,13188390f33649b1881dbd4d9f2440894a36463a,a3e4cbe0bb26acab07f53a7d4ced1f24045e08e0,2014-01-01 17:24:37+00:00,2014-01-01 17:26:54+00:00,// TODO Auto-generated method stub,,,
324,src/main/java/org/apache/commons/math3/geometry/spherical/oned/SubChord.java,src/main/java/org/apache/commons/math3/geometry/spherical/oned/SubChord.java,,104,104,13188390f33649b1881dbd4d9f2440894a36463a,a3e4cbe0bb26acab07f53a7d4ced1f24045e08e0,2014-01-01 17:24:37+00:00,2014-01-01 17:26:54+00:00,// TODO: implement merging loop,,,
325,src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresProblemImpl.java,src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresProblemImpl.java,,128,75,7460c082a39251193108da52ce05e63f3e3796d1,fc9cb0ce163e54e4bba232d2bbf2f79dc495585d,2014-02-18 14:31:34+00:00,2014-02-18 14:32:06+00:00,//TODO evaluate value and jacobian in one function call,,,
326,src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresProblemImpl.java,src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresProblemImpl.java,,233,233,7460c082a39251193108da52ce05e63f3e3796d1,06d490a4bd763fb634596f2755b436f7f8fbbad8,2014-02-18 14:31:34+00:00,2014-02-18 14:31:53+00:00,//TODO copy?,,,
327,src/main/java/org/apache/commons/math3/RealFieldElement.java,src/main/java/org/apache/commons/math4/RealFieldElement.java,,208,207,3ad5595706a90adc920105b5c486e4fc0db6d497,45df5da2640f8f097915b8a2a0249ef0f6cf514e,2013-03-11 08:37:12+00:00,2015-03-10 22:38:48+01:00,"//    TODO: add this method in 4.0, as it is not possible to do it in 3.2",,,
328,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math4/analysis/differentiation/DSCompiler.java,,1102,1102,87b597c622e5e83beb5e45cdc4bd06266a3f9020,d05fac054e8e4f3b03794540a759ad02f340be0e,2012-08-08 20:33:43+00:00,2012-08-10 18:33:06+00:00,// TODO compute higher order derivatives,,,
329,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math4/analysis/differentiation/DSCompiler.java,,1130,1130,87b597c622e5e83beb5e45cdc4bd06266a3f9020,d05fac054e8e4f3b03794540a759ad02f340be0e,2012-08-08 20:33:43+00:00,2012-08-10 18:33:06+00:00,// TODO compute higher order derivatives,,,
330,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math4/analysis/differentiation/DSCompiler.java,,1158,1158,87b597c622e5e83beb5e45cdc4bd06266a3f9020,d05fac054e8e4f3b03794540a759ad02f340be0e,2012-08-08 20:33:43+00:00,2012-08-10 18:33:06+00:00,// TODO compute higher order derivatives,,,
331,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math4/analysis/differentiation/DSCompiler.java,,1187,1294,87b597c622e5e83beb5e45cdc4bd06266a3f9020,07aa93aae7bf33ac5d3044366f2dc2e1117785dd,2012-08-08 20:33:43+00:00,2012-08-13 13:06:26+00:00,// TODO compute higher order derivatives,,,
332,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math4/analysis/differentiation/DSCompiler.java,,1228,1357,87b597c622e5e83beb5e45cdc4bd06266a3f9020,b6d40681620660194efb4d05b6384c41f3ba8208,2012-08-08 20:33:43+00:00,2012-08-13 14:14:17+00:00,// TODO,,,
333,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math4/analysis/interpolation/TricubicSplineInterpolator.java,,156,161,696be68b5dc8872a818a24d8a377158314b54e31,0a5cd11327d50e5906fb4dc08bce5baea6b2d247,2012-02-14 16:17:55+00:00,2015-02-25 23:02:30+01:00,// XXX Not sure about this formula,,,
334,src/main/java/org/apache/commons/math3/dfp/Dfp.java,src/main/java/org/apache/commons/math4/dfp/Dfp.java,,2668,2674,3ad5595706a90adc920105b5c486e4fc0db6d497,45df5da2640f8f097915b8a2a0249ef0f6cf514e,2013-03-11 08:37:12+00:00,2015-03-10 22:38:48+01:00,//  TODO: deactivate this implementation (and return type) in 4.0,,,
335,src/main/java/org/apache/commons/math3/dfp/Dfp.java,src/main/java/org/apache/commons/math4/dfp/Dfp.java,,2679,2685,3ad5595706a90adc920105b5c486e4fc0db6d497,45df5da2640f8f097915b8a2a0249ef0f6cf514e,2013-03-11 08:37:12+00:00,2015-03-10 22:38:48+01:00,//    TODO: activate this implementation (and return type) in 4.0,,,
336,src/main/java/org/apache/commons/math3/distribution/MixtureMultivariateRealDistribution.java,src/main/java/org/apache/commons/math4/distribution/MixtureMultivariateRealDistribution.java,,143,143,ea138c2da2c7dfd4b7e947fbad8c10d1fda745c2,e0426dfbfb494dac67cc2d40b8d4fd5adeea69c8,2012-10-19 11:00:53+00:00,2012-10-24 21:27:44+00:00,// using the same sequence of random numbers. XXX,,,
337,src/main/java/org/apache/commons/math3/distribution/MixtureMultivariateRealDistribution.java,src/main/java/org/apache/commons/math4/distribution/MixtureMultivariateRealDistribution.java,,145,145,ea138c2da2c7dfd4b7e947fbad8c10d1fda745c2,e0426dfbfb494dac67cc2d40b8d4fd5adeea69c8,2012-10-19 11:00:53+00:00,2012-10-24 21:27:44+00:00,distribution.get(i).reseedRandomGenerator(seed); // XXX original code.,,,
338,src/main/java/org/apache/commons/math3/fitting/GaussianCurveFitter.java,src/main/java/org/apache/commons/math4/fitting/GaussianCurveFitter.java,,302,305,eb1a3f00a265fb23e839e2b99096f12833105424,9d1741bfe4a7808cfa0c313891a717adf98a3087,2013-08-23 15:39:55+00:00,2021-05-15 05:36:48+02:00,// TODO: Exceptions should not be used for flow control.,,,
339,src/main/java/org/apache/commons/math3/fitting/GaussianCurveFitter.java,src/main/java/org/apache/commons/math4/fitting/GaussianCurveFitter.java,,401,404,eb1a3f00a265fb23e839e2b99096f12833105424,9d1741bfe4a7808cfa0c313891a717adf98a3087,2013-08-23 15:39:55+00:00,2021-05-15 05:36:48+02:00,// TODO: Exceptions should not be used for flow control.,,,
340,src/main/java/org/apache/commons/math3/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math4/fitting/GaussianFitter.java,,240,243,7ee7843ffe817f79a54f77feebd51506f36c7ef8,0a5cd11327d50e5906fb4dc08bce5baea6b2d247,2012-12-12 14:10:38+00:00,2015-02-25 23:02:30+01:00,// TODO: Exceptions should not be used for flow control.,,,
341,src/main/java/org/apache/commons/math3/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math4/fitting/GaussianFitter.java,,339,342,7ee7843ffe817f79a54f77feebd51506f36c7ef8,0a5cd11327d50e5906fb4dc08bce5baea6b2d247,2012-12-12 14:10:38+00:00,2015-02-25 23:02:30+01:00,// TODO: Exceptions should not be used for flow control.,,,
342,src/main/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizer.java,src/main/java/org/apache/commons/math4/fitting/leastsquares/GaussNewtonOptimizer.java,,47,52,3e18e999c7a0648cc9eee72202e07669df3c4ffb,9d1741bfe4a7808cfa0c313891a717adf98a3087,2014-02-18 14:32:36+00:00,2021-05-15 05:36:48+02:00,//TODO move to linear package and expand options?,,,
343,src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.java,src/main/java/org/apache/commons/math4/fitting/leastsquares/LeastSquaresFactory.java,,58,58,7460c082a39251193108da52ce05e63f3e3796d1,06d490a4bd763fb634596f2755b436f7f8fbbad8,2014-02-18 14:31:34+00:00,2014-02-18 14:31:53+00:00,//TODO adapter?,,,
344,src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.java,src/main/java/org/apache/commons/math4/fitting/leastsquares/LeastSquaresFactory.java,,120,213,06d490a4bd763fb634596f2755b436f7f8fbbad8,9d1741bfe4a7808cfa0c313891a717adf98a3087,2014-02-18 14:31:53+00:00,2021-05-15 05:36:48+02:00,"//TODO more efficient implementation
// TODO more efficient implementation",[174],[197],['0714c7cbe61a8db315e2aac578614f5a706f8014']
345,src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.java,src/main/java/org/apache/commons/math4/fitting/leastsquares/LeastSquaresFactory.java,,269,327,0079828734d62dbc2b44ccf4f21e3dc1daa7b90b,9d1741bfe4a7808cfa0c313891a717adf98a3087,2014-02-18 14:32:54+00:00,2021-05-15 05:36:48+02:00,"//TODO get array from RealVector without copying?
//TODO get array from RealVector without copying?",[264],[311],['0714c7cbe61a8db315e2aac578614f5a706f8014']
346,src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresOptimizer.java,src/main/java/org/apache/commons/math4/fitting/leastsquares/LeastSquaresOptimizer.java,,26,40,7460c082a39251193108da52ce05e63f3e3796d1,9d1741bfe4a7808cfa0c313891a717adf98a3087,2014-02-18 14:31:34+00:00,2021-05-15 05:36:48+02:00,//TODO Solution?,,,
347,src/main/java/org/apache/commons/math3/geometry/enclosing/WelzlEncloser.java,src/main/java/org/apache/commons/math4/geometry/enclosing/WelzlEncloser.java,,108,103,2a3b56daa03253a8abccf5d895a310831ef0275a,19c1c3bb9bc175f9c19b026e7cda1d0fe47ade90,2014-01-29 20:19:20+00:00,2014-02-02 20:52:49+00:00,"// TODO: fix this, it should never happen but it does!",,,
348,src/main/java/org/apache/commons/math3/geometry/spherical/twod/SphericalPolygonsSet.java,src/main/java/org/apache/commons/math4/geometry/spherical/twod/SphericalPolygonsSet.java,,490,490,739708f1af316d9b31a83b9e5d0cc7303155853d,e5002ce3f6a625bfd52f63fa38279c09178e8354,2014-02-05 20:42:58+00:00,2014-02-05 20:46:43+00:00,// TODO: compute enclosing small circle,,,
349,src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java,src/main/java/org/apache/commons/math4/linear/EigenDecomposition.java,,721,745,afce27e29d42c5caa46a2c7496fedac647405ae9,1213c8a2dd83c3cb6931334626955ae853924e25,2012-05-06 19:40:57+00:00,2012-07-18 20:49:43+00:00,"// TODO: we can not handle a zero matrix, what exception to throw?",,,
350,src/main/java/org/apache/commons/math3/linear/RealVector.java,src/main/java/org/apache/commons/math4/linear/RealVector.java,,217,217,6b5659033e48e96c7d7bddab9a715132b6661e19,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-05-28 08:31:13+00:00,2021-05-15 05:36:48+02:00,// TODO Use more specific error message,,,
351,src/main/java/org/apache/commons/math3/linear/RealVectorPreservingVisitor.java,src/main/java/org/apache/commons/math4/linear/RealVectorPreservingVisitor.java,,52,52,97a5210fd70a226f2d18b27d6beb74ebba70966b,6b5659033e48e96c7d7bddab9a715132b6661e19,2012-05-28 07:54:16+00:00,2012-05-28 08:31:13+00:00,// TODO Check above javadoc comment (add proper link to methods in,,,
352,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,src/main/java/org/apache/commons/math4/optim/BaseMultiStartMultivariateOptimizer.java,,181,173,7ee7843ffe817f79a54f77feebd51506f36c7ef8,f00bd95151792341002bf4e987f403f0124bb323,2012-12-12 14:10:38+00:00,2013-03-09 17:37:30+00:00,generator.nextVector(); // XXX This does not enforce bounds!,,,
353,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,src/main/java/org/apache/commons/math4/optim/BaseMultiStartMultivariateOptimizer.java,,167,160,77910da210dd4349c83d3455968ce14a2635845d,f00bd95151792341002bf4e987f403f0124bb323,2012-12-13 13:29:56+00:00,2013-03-09 17:37:30+00:00,final double[] min = getLowerBound(); // XXX Should be used to enforce bounds (see below).,,,
354,src/main/java/org/apache/commons/math3/optim/BaseMultiStartMultivariateOptimizer.java,src/main/java/org/apache/commons/math4/optim/BaseMultiStartMultivariateOptimizer.java,,168,161,77910da210dd4349c83d3455968ce14a2635845d,f00bd95151792341002bf4e987f403f0124bb323,2012-12-13 13:29:56+00:00,2013-03-09 17:37:30+00:00,final double[] max = getUpperBound(); // XXX Should be used to enforce bounds (see below).,,,
355,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math4/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java,,235,229,7ee7843ffe817f79a54f77feebd51506f36c7ef8,f0ae42aa934c10686c613277bd7a0837f6a1602d,2012-12-12 14:10:38+00:00,2014-02-28 16:23:26+00:00,// XXX Last parameters is set to a value close to zero in order to,,,
356,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,286,295,7ee7843ffe817f79a54f77feebd51506f36c7ef8,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-12-12 14:10:38+00:00,2021-05-15 05:36:48+02:00,printMethod(); // XXX,,,
357,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,375,384,7ee7843ffe817f79a54f77feebd51506f36c7ef8,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-12-12 14:10:38+00:00,2021-05-15 05:36:48+02:00,printMethod(); // XXX,,,
358,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,444,454,7ee7843ffe817f79a54f77feebd51506f36c7ef8,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-12-12 14:10:38+00:00,2021-05-15 05:36:48+02:00,printState(20); // XXX,,,
359,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,467,477,7ee7843ffe817f79a54f77feebd51506f36c7ef8,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-12-12 14:10:38+00:00,2021-05-15 05:36:48+02:00,// throw new PathIsExploredException(); // XXX,,,
360,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,480,490,7ee7843ffe817f79a54f77feebd51506f36c7ef8,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-12-12 14:10:38+00:00,2021-05-15 05:36:48+02:00,printState(60); // XXX,,,
361,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,539,549,7ee7843ffe817f79a54f77feebd51506f36c7ef8,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-12-12 14:10:38+00:00,2021-05-15 05:36:48+02:00,// throw new PathIsExploredException(); // XXX,,,
362,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,554,564,7ee7843ffe817f79a54f77feebd51506f36c7ef8,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-12-12 14:10:38+00:00,2021-05-15 05:36:48+02:00,printState(90); // XXX,,,
363,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,566,576,7ee7843ffe817f79a54f77feebd51506f36c7ef8,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-12-12 14:10:38+00:00,2021-05-15 05:36:48+02:00,"// sum = sumVector.getEntry(k); // XXX ""testAckley"" and ""testDiffPow"" fail.",,,
364,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,659,669,7ee7843ffe817f79a54f77feebd51506f36c7ef8,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-12-12 14:10:38+00:00,2021-05-15 05:36:48+02:00,printState(210); // XXX,,,
365,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,685,695,7ee7843ffe817f79a54f77feebd51506f36c7ef8,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-12-12 14:10:38+00:00,2021-05-15 05:36:48+02:00,printState(230); // XXX,,,
366,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,732,742,7ee7843ffe817f79a54f77feebd51506f36c7ef8,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-12-12 14:10:38+00:00,2021-05-15 05:36:48+02:00,"// beta += dx * dx + dsq * (xoptsq + dx + dx + HALF * dsq) - bsum; // XXX ""testAckley"" and ""testDiffPow"" fail.",,,
367,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,733,743,7ee7843ffe817f79a54f77feebd51506f36c7ef8,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-12-12 14:10:38+00:00,2021-05-15 05:36:48+02:00,"// beta = dx * dx + dsq * (xoptsq + 2 * dx + HALF * dsq) + beta - bsum; // XXX ""testDiffPow"" fails.",,,
368,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,751,761,7ee7843ffe817f79a54f77feebd51506f36c7ef8,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-12-12 14:10:38+00:00,2021-05-15 05:36:48+02:00,cauchy = ZERO; // XXX Useful statement?,,,
369,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,808,818,7ee7843ffe817f79a54f77feebd51506f36c7ef8,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-12-12 14:10:38+00:00,2021-05-15 05:36:48+02:00,printState(360); // XXX,,,
370,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,1117,1128,7ee7843ffe817f79a54f77feebd51506f36c7ef8,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-12-12 14:10:38+00:00,2021-05-15 05:36:48+02:00,printState(650); // XXX,,,
371,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,1169,1180,7ee7843ffe817f79a54f77feebd51506f36c7ef8,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-12-12 14:10:38+00:00,2021-05-15 05:36:48+02:00,printState(680); // XXX,,,
372,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,1194,1205,7ee7843ffe817f79a54f77feebd51506f36c7ef8,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-12-12 14:10:38+00:00,2021-05-15 05:36:48+02:00,printState(720); // XXX,,,
373,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,1259,1270,7ee7843ffe817f79a54f77feebd51506f36c7ef8,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-12-12 14:10:38+00:00,2021-05-15 05:36:48+02:00,printMethod(); // XXX,,,
374,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,1583,1592,7ee7843ffe817f79a54f77feebd51506f36c7ef8,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-12-12 14:10:38+00:00,2021-05-15 05:36:48+02:00,printMethod(); // XXX,,,
375,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,1635,1644,7ee7843ffe817f79a54f77feebd51506f36c7ef8,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-12-12 14:10:38+00:00,2021-05-15 05:36:48+02:00,// throw new PathIsExploredException(); // XXX,,,
376,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,1643,1652,7ee7843ffe817f79a54f77feebd51506f36c7ef8,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-12-12 14:10:38+00:00,2021-05-15 05:36:48+02:00,// throw new PathIsExploredException(); // XXX,,,
377,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,1647,1656,7ee7843ffe817f79a54f77feebd51506f36c7ef8,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-12-12 14:10:38+00:00,2021-05-15 05:36:48+02:00,// throw new PathIsExploredException(); // XXX,,,
378,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,1659,1668,7ee7843ffe817f79a54f77feebd51506f36c7ef8,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-12-12 14:10:38+00:00,2021-05-15 05:36:48+02:00,//                     throw new PathIsExploredException(); // XXX,,,
379,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,1709,1718,7ee7843ffe817f79a54f77feebd51506f36c7ef8,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-12-12 14:10:38+00:00,2021-05-15 05:36:48+02:00,// throw new PathIsExploredException(); // XXX,,,
380,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,1734,1741,7ee7843ffe817f79a54f77feebd51506f36c7ef8,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-12-12 14:10:38+00:00,2021-05-15 05:36:48+02:00,"// zMatrix.setEntry(nfm, nfxm, Math.sqrt(HALF) * recip); // XXX ""testAckley"" and ""testDiffPow"" fail.
// zMatrix.setEntry(nfm, nfxm, FastMath.sqrt(HALF) * recip); // XXX ""testAckley"" and ""testDiffPow"" fail.",[1728],[1729],['e4c6bb0b27ee625380416a503c7fa73610db649c']
381,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,1751,1758,7ee7843ffe817f79a54f77feebd51506f36c7ef8,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-12-12 14:10:38+00:00,2021-05-15 05:36:48+02:00,//                 throw new PathIsExploredException(); // XXX,,,
382,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,1811,1818,7ee7843ffe817f79a54f77feebd51506f36c7ef8,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-12-12 14:10:38+00:00,2021-05-15 05:36:48+02:00,printMethod(); // XXX,,,
383,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,1879,1885,7ee7843ffe817f79a54f77feebd51506f36c7ef8,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-12-12 14:10:38+00:00,2021-05-15 05:36:48+02:00,printState(20); // XXX,,,
384,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,1883,1889,7ee7843ffe817f79a54f77feebd51506f36c7ef8,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-12-12 14:10:38+00:00,2021-05-15 05:36:48+02:00,printState(30); // XXX,,,
385,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,1916,1922,7ee7843ffe817f79a54f77feebd51506f36c7ef8,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-12-12 14:10:38+00:00,2021-05-15 05:36:48+02:00,printState(50); // XXX,,,
386,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,2024,2030,7ee7843ffe817f79a54f77feebd51506f36c7ef8,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-12-12 14:10:38+00:00,2021-05-15 05:36:48+02:00,printState(90); // XXX,,,
387,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,2033,2039,7ee7843ffe817f79a54f77feebd51506f36c7ef8,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-12-12 14:10:38+00:00,2021-05-15 05:36:48+02:00,printState(100); // XXX,,,
388,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,2060,2066,7ee7843ffe817f79a54f77feebd51506f36c7ef8,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-12-12 14:10:38+00:00,2021-05-15 05:36:48+02:00,printState(120); // XXX,,,
389,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,2131,2137,7ee7843ffe817f79a54f77feebd51506f36c7ef8,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-12-12 14:10:38+00:00,2021-05-15 05:36:48+02:00,printState(150); // XXX,,,
390,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,2216,2222,7ee7843ffe817f79a54f77feebd51506f36c7ef8,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-12-12 14:10:38+00:00,2021-05-15 05:36:48+02:00,printState(190); // XXX,,,
391,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,2242,2248,7ee7843ffe817f79a54f77feebd51506f36c7ef8,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-12-12 14:10:38+00:00,2021-05-15 05:36:48+02:00,printState(210); // XXX,,,
392,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,2299,2305,7ee7843ffe817f79a54f77feebd51506f36c7ef8,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-12-12 14:10:38+00:00,2021-05-15 05:36:48+02:00,printMethod(); // XXX,,,
393,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,2305,2311,7ee7843ffe817f79a54f77feebd51506f36c7ef8,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-12-12 14:10:38+00:00,2021-05-15 05:36:48+02:00,// XXX Should probably be split into two arrays.,,,
394,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,2383,2389,7ee7843ffe817f79a54f77feebd51506f36c7ef8,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-12-12 14:10:38+00:00,2021-05-15 05:36:48+02:00,printMethod(); // XXX,,,
395,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,2451,2442,7ee7843ffe817f79a54f77feebd51506f36c7ef8,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-12-12 14:10:38+00:00,2021-05-15 05:36:48+02:00,// XXX utility for figuring out call sequence.,,,
396,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,2458,2449,7ee7843ffe817f79a54f77feebd51506f36c7ef8,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-12-12 14:10:38+00:00,2021-05-15 05:36:48+02:00,// XXX utility for figuring out call sequence.,,,
397,src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,2462,2453,7ee7843ffe817f79a54f77feebd51506f36c7ef8,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-12-12 14:10:38+00:00,2021-05-15 05:36:48+02:00,// XXX utility for figuring out call sequence.,,,
398,src/main/java/org/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer.java,src/main/java/org/apache/commons/math4/optim/nonlinear/vector/MultivariateVectorOptimizer.java,,178,178,250cf6e3669ee3c0cfda5d20761fb1324f594df0,ed39d2dbe2522a7842d8f173af46b483d983cb0a,2012-12-28 20:16:38+00:00,2012-12-29 12:10:52+00:00,"// TODO: remove this for 4.0, when the Weight class will be removed",,,
399,src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math4/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java,,84,84,250cf6e3669ee3c0cfda5d20761fb1324f594df0,ed39d2dbe2522a7842d8f173af46b483d983cb0a,2012-12-28 20:16:38+00:00,2012-12-29 12:10:52+00:00,"// TODO: remove for 4.0, when the {@link Weight} class will be removed",,,
400,src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math4/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java,,281,281,250cf6e3669ee3c0cfda5d20761fb1324f594df0,ed39d2dbe2522a7842d8f173af46b483d983cb0a,2012-12-28 20:16:38+00:00,2012-12-29 12:10:52+00:00,"// TODO: remove for 4.0, when the {@link Weight} class will be removed",,,
401,src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,,287,289,696be68b5dc8872a818a24d8a377158314b54e31,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-02-14 16:17:55+00:00,2015-02-25 22:34:53+01:00,printMethod(); // XXX,,,
402,src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,,376,378,696be68b5dc8872a818a24d8a377158314b54e31,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-02-14 16:17:55+00:00,2015-02-25 22:34:53+01:00,printMethod(); // XXX,,,
403,src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,,445,447,696be68b5dc8872a818a24d8a377158314b54e31,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-02-14 16:17:55+00:00,2015-02-25 22:34:53+01:00,printState(20); // XXX,,,
404,src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,,468,470,696be68b5dc8872a818a24d8a377158314b54e31,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-02-14 16:17:55+00:00,2015-02-25 22:34:53+01:00,"throw new PathIsExploredException(); // XXX
// throw new PathIsExploredException(); // XXX",[469],[469],['88b7d7f6fc23b89ba0fd6fc32ddbaf87cb805496']
405,src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,,481,483,696be68b5dc8872a818a24d8a377158314b54e31,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-02-14 16:17:55+00:00,2015-02-25 22:34:53+01:00,printState(60); // XXX,,,
406,src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,,540,542,696be68b5dc8872a818a24d8a377158314b54e31,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-02-14 16:17:55+00:00,2015-02-25 22:34:53+01:00,"throw new PathIsExploredException(); // XXX
// throw new PathIsExploredException(); // XXX",[541],[541],['88b7d7f6fc23b89ba0fd6fc32ddbaf87cb805496']
407,src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,,555,557,696be68b5dc8872a818a24d8a377158314b54e31,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-02-14 16:17:55+00:00,2015-02-25 22:34:53+01:00,printState(90); // XXX,,,
408,src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,,567,569,696be68b5dc8872a818a24d8a377158314b54e31,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-02-14 16:17:55+00:00,2015-02-25 22:34:53+01:00,"// sum = sumVector.getEntry(k); // XXX ""testAckley"" and ""testDiffPow"" fail.",,,
409,src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,,660,662,696be68b5dc8872a818a24d8a377158314b54e31,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-02-14 16:17:55+00:00,2015-02-25 22:34:53+01:00,printState(210); // XXX,,,
410,src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,,686,688,696be68b5dc8872a818a24d8a377158314b54e31,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-02-14 16:17:55+00:00,2015-02-25 22:34:53+01:00,printState(230); // XXX,,,
411,src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,,733,735,696be68b5dc8872a818a24d8a377158314b54e31,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-02-14 16:17:55+00:00,2015-02-25 22:34:53+01:00,"// beta += dx * dx + dsq * (xoptsq + dx + dx + HALF * dsq) - bsum; // XXX ""testAckley"" and ""testDiffPow"" fail.",,,
412,src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,,734,736,696be68b5dc8872a818a24d8a377158314b54e31,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-02-14 16:17:55+00:00,2015-02-25 22:34:53+01:00,"// beta = dx * dx + dsq * (xoptsq + 2 * dx + HALF * dsq) + beta - bsum; // XXX ""testDiffPow"" fails.",,,
413,src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,,752,754,696be68b5dc8872a818a24d8a377158314b54e31,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-02-14 16:17:55+00:00,2015-02-25 22:34:53+01:00,cauchy = ZERO; // XXX Useful statement?,,,
414,src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,,809,811,696be68b5dc8872a818a24d8a377158314b54e31,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-02-14 16:17:55+00:00,2015-02-25 22:34:53+01:00,printState(360); // XXX,,,
415,src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,,1118,1120,696be68b5dc8872a818a24d8a377158314b54e31,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-02-14 16:17:55+00:00,2015-02-25 22:34:53+01:00,printState(650); // XXX,,,
416,src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,,1170,1172,696be68b5dc8872a818a24d8a377158314b54e31,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-02-14 16:17:55+00:00,2015-02-25 22:34:53+01:00,printState(680); // XXX,,,
417,src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,,1195,1197,696be68b5dc8872a818a24d8a377158314b54e31,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-02-14 16:17:55+00:00,2015-02-25 22:34:53+01:00,printState(720); // XXX,,,
418,src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,,1260,1262,696be68b5dc8872a818a24d8a377158314b54e31,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-02-14 16:17:55+00:00,2015-02-25 22:34:53+01:00,printMethod(); // XXX,,,
419,src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,,1584,1584,696be68b5dc8872a818a24d8a377158314b54e31,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-02-14 16:17:55+00:00,2015-02-25 22:34:53+01:00,printMethod(); // XXX,,,
420,src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,,1636,1636,696be68b5dc8872a818a24d8a377158314b54e31,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-02-14 16:17:55+00:00,2015-02-25 22:34:53+01:00,"throw new PathIsExploredException(); // XXX
// throw new PathIsExploredException(); // XXX",[1637],[1637],['88b7d7f6fc23b89ba0fd6fc32ddbaf87cb805496']
421,src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,,1644,1644,696be68b5dc8872a818a24d8a377158314b54e31,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-02-14 16:17:55+00:00,2015-02-25 22:34:53+01:00,"throw new PathIsExploredException(); // XXX
// throw new PathIsExploredException(); // XXX",[1645],[1645],['88b7d7f6fc23b89ba0fd6fc32ddbaf87cb805496']
422,src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,,1648,1648,696be68b5dc8872a818a24d8a377158314b54e31,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-02-14 16:17:55+00:00,2015-02-25 22:34:53+01:00,"throw new PathIsExploredException(); // XXX
// throw new PathIsExploredException(); // XXX",[1649],[1649],['88b7d7f6fc23b89ba0fd6fc32ddbaf87cb805496']
423,src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,,1660,1660,696be68b5dc8872a818a24d8a377158314b54e31,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-02-14 16:17:55+00:00,2015-02-25 22:34:53+01:00,//                     throw new PathIsExploredException(); // XXX,,,
424,src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,,1710,1710,696be68b5dc8872a818a24d8a377158314b54e31,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-02-14 16:17:55+00:00,2015-02-25 22:34:53+01:00,"throw new PathIsExploredException(); // XXX
// throw new PathIsExploredException(); // XXX",[1711],[1711],['88b7d7f6fc23b89ba0fd6fc32ddbaf87cb805496']
425,src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,,1735,1733,696be68b5dc8872a818a24d8a377158314b54e31,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-02-14 16:17:55+00:00,2015-02-25 22:34:53+01:00,"// zMatrix.setEntry(nfm, nfxm, Math.sqrt(HALF) * recip); // XXX ""testAckley"" and ""testDiffPow"" fail.
// zMatrix.setEntry(nfm, nfxm, FastMath.sqrt(HALF) * recip); // XXX ""testAckley"" and ""testDiffPow"" fail.",[1733],[1734],['e4c6bb0b27ee625380416a503c7fa73610db649c']
426,src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,,1752,1750,696be68b5dc8872a818a24d8a377158314b54e31,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-02-14 16:17:55+00:00,2015-02-25 22:34:53+01:00,//                 throw new PathIsExploredException(); // XXX,,,
427,src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,,1812,1810,696be68b5dc8872a818a24d8a377158314b54e31,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-02-14 16:17:55+00:00,2015-02-25 22:34:53+01:00,printMethod(); // XXX,,,
428,src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,,1880,1877,696be68b5dc8872a818a24d8a377158314b54e31,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-02-14 16:17:55+00:00,2015-02-25 22:34:53+01:00,printState(20); // XXX,,,
429,src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,,1884,1881,696be68b5dc8872a818a24d8a377158314b54e31,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-02-14 16:17:55+00:00,2015-02-25 22:34:53+01:00,printState(30); // XXX,,,
430,src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,,1917,1914,696be68b5dc8872a818a24d8a377158314b54e31,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-02-14 16:17:55+00:00,2015-02-25 22:34:53+01:00,printState(50); // XXX,,,
431,src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,,2025,2022,696be68b5dc8872a818a24d8a377158314b54e31,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-02-14 16:17:55+00:00,2015-02-25 22:34:53+01:00,printState(90); // XXX,,,
432,src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,,2034,2031,696be68b5dc8872a818a24d8a377158314b54e31,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-02-14 16:17:55+00:00,2015-02-25 22:34:53+01:00,printState(100); // XXX,,,
433,src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,,2061,2058,696be68b5dc8872a818a24d8a377158314b54e31,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-02-14 16:17:55+00:00,2015-02-25 22:34:53+01:00,printState(120); // XXX,,,
434,src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,,2132,2129,696be68b5dc8872a818a24d8a377158314b54e31,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-02-14 16:17:55+00:00,2015-02-25 22:34:53+01:00,printState(150); // XXX,,,
435,src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,,2217,2214,696be68b5dc8872a818a24d8a377158314b54e31,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-02-14 16:17:55+00:00,2015-02-25 22:34:53+01:00,printState(190); // XXX,,,
436,src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,,2243,2240,696be68b5dc8872a818a24d8a377158314b54e31,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-02-14 16:17:55+00:00,2015-02-25 22:34:53+01:00,printState(210); // XXX,,,
437,src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,,2300,2297,696be68b5dc8872a818a24d8a377158314b54e31,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-02-14 16:17:55+00:00,2015-02-25 22:34:53+01:00,printMethod(); // XXX,,,
438,src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,,2306,2303,696be68b5dc8872a818a24d8a377158314b54e31,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-02-14 16:17:55+00:00,2015-02-25 22:34:53+01:00,// XXX Should probably be split into two arrays.,,,
439,src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,,2384,2381,696be68b5dc8872a818a24d8a377158314b54e31,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-02-14 16:17:55+00:00,2015-02-25 22:34:53+01:00,printMethod(); // XXX,,,
440,src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,,2452,2434,696be68b5dc8872a818a24d8a377158314b54e31,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-02-14 16:17:55+00:00,2015-02-25 22:34:53+01:00,// XXX utility for figuring out call sequence.,,,
441,src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,,2459,2441,696be68b5dc8872a818a24d8a377158314b54e31,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-02-14 16:17:55+00:00,2015-02-25 22:34:53+01:00,// XXX utility for figuring out call sequence.,,,
442,src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizer.java,,2463,2445,696be68b5dc8872a818a24d8a377158314b54e31,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-02-14 16:17:55+00:00,2015-02-25 22:34:53+01:00,// XXX utility for figuring out call sequence.,,,
443,src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateVectorOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/BaseAbstractMultivariateVectorOptimizer.java,,349,320,d0d4760c97ac6e725a37758743199d3c35c85559,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-10-26 18:19:40+00:00,2015-02-25 22:34:53+01:00,// XXX Temporary code until the new internal data is used everywhere.,,,
444,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/CMAESOptimizer.java,,679,680,0912bac5201d98af64a832766146797a9d75bb6f,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-10-19 14:20:16+00:00,2015-02-25 22:34:53+01:00,"// XXX Remove this block in 4.0 (check performed in ""Sigma"" class).",,,
445,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/CMAESOptimizer.java,,696,697,0912bac5201d98af64a832766146797a9d75bb6f,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-10-19 14:20:16+00:00,2015-02-25 22:34:53+01:00,// XXX Line below to replace the current one in 4.0 (MATH-879).,,,
446,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/CMAESOptimizer.java,,703,704,0912bac5201d98af64a832766146797a9d75bb6f,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-10-19 14:20:16+00:00,2015-02-25 22:34:53+01:00,// XXX Line below to replace the current one in 4.0 (MATH-868).,,,
447,src/main/java/org/apache/commons/math3/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math4/optimization/direct/PowellOptimizer.java,,96,96,c7c27f910a99aca49a91d725a2410dae3bb2709c,48d4f49acb2625a0147a116e6a23b20dfbe73398,2012-04-26 10:02:48+00:00,2012-04-28 23:05:47+00:00,// required for the optimizer itself. XXX Is it still true with the new checker?,,,
448,src/main/java/org/apache/commons/math3/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math4/optimization/fitting/GaussianFitter.java,,244,243,8abe21fe47c128c797bf122b30c8fca9f75652d0,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-08-18 01:09:25+00:00,2015-02-25 22:34:53+01:00,// TODO: Exceptions should not be used for flow control.,,,
449,src/main/java/org/apache/commons/math3/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math4/optimization/fitting/GaussianFitter.java,,343,342,8abe21fe47c128c797bf122b30c8fca9f75652d0,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-08-18 01:09:25+00:00,2015-02-25 22:34:53+01:00,// TODO: Exceptions should not be used for flow control.,,,
450,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math4/optimization/general/AbstractLeastSquaresOptimizer.java,,395,497,d0d4760c97ac6e725a37758743199d3c35c85559,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-10-26 18:19:40+00:00,2015-02-25 22:34:53+01:00,// XXX Conversion will be removed when the generic argument of the,,,
451,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math4/optimization/general/AbstractLeastSquaresOptimizer.java,,409,514,d0d4760c97ac6e725a37758743199d3c35c85559,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-10-26 18:19:40+00:00,2015-02-25 22:34:53+01:00,// XXX The conversion won't be necessary when the generic argument of,,,
452,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math4/optimization/general/AbstractLeastSquaresOptimizer.java,,411,516,d0d4760c97ac6e725a37758743199d3c35c85559,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-10-26 18:19:40+00:00,2015-02-25 22:34:53+01:00,"// XXX ""jF"" is not strictly necessary anymore but is currently more",,,
453,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math4/optimization/general/AbstractLeastSquaresOptimizer.java,,186,186,54cfc6ce0a5d405008ae0cdcbab793cec680d1bc,6080bc88a8e9d8c2f9e5e76dd79cc6f2e143927b,2012-11-08 10:50:34+00:00,2012-11-12 11:36:40+00:00,// XXX What is the purpose of the multiplication by -1?,,,
454,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math4/optimization/general/AbstractLeastSquaresOptimizer.java,,190,190,54cfc6ce0a5d405008ae0cdcbab793cec680d1bc,6080bc88a8e9d8c2f9e5e76dd79cc6f2e143927b,2012-11-08 10:50:34+00:00,2012-11-12 11:36:40+00:00,"// XXX For backwards-compatibility (field ""weightedResidualJacobian""",,,
455,src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math4/optimization/general/AbstractLeastSquaresOptimizer.java,,215,215,54cfc6ce0a5d405008ae0cdcbab793cec680d1bc,6080bc88a8e9d8c2f9e5e76dd79cc6f2e143927b,2012-11-08 10:50:34+00:00,2012-11-12 11:36:40+00:00,"// Compute weighted residuals. XXX To be moved to ""LevenbergMarquardtOptimizer"".",,,
456,src/main/java/org/apache/commons/math3/optimization/general/GaussNewtonOptimizer.java,src/main/java/org/apache/commons/math4/optimization/general/GaussNewtonOptimizer.java,,145,146,2ce650bf54758aee82508eb7f06b46fbacb2c597,6080bc88a8e9d8c2f9e5e76dd79cc6f2e143927b,2012-11-08 12:48:54+00:00,2012-11-12 11:36:40+00:00,"// XXX Minus sign could be left out if ""weightedJacobian""",,,
457,src/main/java/org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math4/optimization/general/NonLinearConjugateGradientOptimizer.java,,186,187,696be68b5dc8872a818a24d8a377158314b54e31,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-02-14 16:17:55+00:00,2015-02-25 22:34:53+01:00,// XXX Last parameters is set to a value close to zero in order to,,,
458,src/main/java/org/apache/commons/math3/special/Gamma.java,src/main/java/org/apache/commons/math4/special/Gamma.java,,642,709,cf1f553dc66931091beb6994ac95083c761f4302,fec77409580f1f1608b881a5add07ca16d081de0,2012-08-31 02:48:29+00:00,2012-11-26 19:45:52+00:00,// TODO Check whether x is a negative integer,,,
459,src/main/java/org/apache/commons/math3/stat/Frequency.java,src/main/java/org/apache/commons/math4/stat/Frequency.java,,69,85,696be68b5dc8872a818a24d8a377158314b54e31,843fbfbc3428819dc0763fa470a8af64c0e74775,2012-02-14 16:17:55+00:00,2017-05-10 19:56:52+12:00,"@SuppressWarnings(""unchecked"") // TODO is the cast OK?",,,
460,src/main/java/org/apache/commons/math3/stat/inference/KolmogorovSmirnovTest.java,src/main/java/org/apache/commons/math4/stat/inference/KolmogorovSmirnovTest.java,,618,881,99189ff527554aa345f63fc038fc8eacf28cbb39,9d1741bfe4a7808cfa0c313891a717adf98a3087,2014-02-26 23:14:08+00:00,2021-05-15 05:36:48+02:00,"// TODO: for small t (say less than 1), the alternative expansion in part 3 of [1]",,,
461,src/main/java/org/apache/commons/math3/util/Combinations.java,src/main/java/org/apache/commons/math4/util/Combinations.java,,106,138,77ba0961e519b851f6fe329a3c4cfd0b180a760a,034ed33e47a8487fbd3fda7eb555b053d6d0545d,2013-09-04 07:28:48+00:00,2013-09-06 16:15:34+00:00,"// TODO: once getNatural is extracted from RandomDataGenerator, use it",,,
462,src/main/java/org/apache/commons/math3/util/CombinatoricsUtils.java,src/main/java/org/apache/commons/math4/util/CombinatoricsUtils.java,,448,448,ad35857d0fab949b00dafc22b20b8e93bcb603d2,77ba0961e519b851f6fe329a3c4cfd0b180a760a,2013-08-24 21:55:35+00:00,2013-09-04 07:28:48+00:00,"// TODO: once getNatural is extracted from RandomDataGenerator, use it",,,
463,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math4/util/FastMath.java,,3626,3637,696be68b5dc8872a818a24d8a377158314b54e31,15a24dc0fc9067fabe00857f8546aee4a5234a78,2012-02-14 16:17:55+00:00,2015-05-16 14:24:13+02:00,"return StrictMath.IEEEremainder(dividend, divisor); // TODO provide our own implementation",,,
464,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math4/util/ResizableDoubleArray.java,,296,371,4b60e4262d3c897455281fbe7747be5c46b0a130,76b7413d2b1eb2dc22f05de5b76f9519be5142e0,2012-11-13 15:50:24+00:00,2015-03-10 23:16:03+01:00,// XXX Just ot retain the expected failure in a unit test.,,,
465,src/test/java/org/apache/commons/math3/ExtendedFieldElementAbstractTest.java,src/test/java/org/apache/commons/math4/ExtendedFieldElementAbstractTest.java,,315,316,3ad5595706a90adc920105b5c486e4fc0db6d497,9d1741bfe4a7808cfa0c313891a717adf98a3087,2013-03-11 08:37:12+00:00,2021-05-15 05:36:48+02:00,"//  TODO: add this test in 4.0, as it is not possible to do it in 3.2",,,
466,src/test/java/org/apache/commons/math4/PerfTestUtils.java,src/test/java/org/apache/commons/math4/PerfTestUtils.java,,200,200,e0b2c86c8754312d1e89307fbf84e6efbfa9fe0b,9d1741bfe4a7808cfa0c313891a717adf98a3087,2016-02-04 00:25:56+01:00,2021-05-15 05:36:48+02:00,// TODO: user-defined parameter?,,,
467,src/test/java/org/apache/commons/math3/analysis/interpolation/TricubicInterpolatorTest.java,src/test/java/org/apache/commons/math4/analysis/interpolation/TricubicInterpolatorTest.java,,223,225,753f278d10fc0c92e912965379401ac182644101,9d1741bfe4a7808cfa0c313891a717adf98a3087,2014-12-14 18:25:08+01:00,2021-05-15 05:36:48+02:00,"expected, result, 1e-1); // XXX Too high tolerance!",,,
468,src/test/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtilsTest.java,src/test/java/org/apache/commons/math4/analysis/solvers/UnivariateSolverUtilsTest.java,,50,51,696be68b5dc8872a818a24d8a377158314b54e31,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-02-14 16:17:55+00:00,2021-05-15 05:36:48+02:00,"//             Assert.fail(""Expecting MathIllegalArgumentException""); // TODO needs rework since convergence behaviour was changed",,,
469,src/test/java/org/apache/commons/math3/complex/ComplexTest.java,src/test/java/org/apache/commons/math4/complex/ComplexTest.java,,800,835,bae46709ecb13f80aaad0d279b3618ab83d09275,e4e1ac23c734f65686be4bc0e503f82f941afd4d,2015-01-12 20:08:44+00:00,2015-02-16 23:37:23+01:00,"System.out.println(""expReal=""+FastMath.exp(negInfOne.getReal())); // TODO temp debug",,,
470,src/test/java/org/apache/commons/math3/complex/ComplexTest.java,src/test/java/org/apache/commons/math4/complex/ComplexTest.java,,801,836,bae46709ecb13f80aaad0d279b3618ab83d09275,e4e1ac23c734f65686be4bc0e503f82f941afd4d,2015-01-12 20:08:44+00:00,2015-02-16 23:37:23+01:00,"System.out.println(""cosImag=""+FastMath.cos(negInfOne.getImaginary())); // TODO temp debug",,,
471,src/test/java/org/apache/commons/math3/complex/ComplexTest.java,src/test/java/org/apache/commons/math4/complex/ComplexTest.java,,802,837,bae46709ecb13f80aaad0d279b3618ab83d09275,e4e1ac23c734f65686be4bc0e503f82f941afd4d,2015-01-12 20:08:44+00:00,2015-02-16 23:37:23+01:00,"System.out.println(""sinImag=""+FastMath.sin(negInfOne.getImaginary())); // TODO temp debug",,,
472,src/test/java/org/apache/commons/math3/complex/ComplexTest.java,src/test/java/org/apache/commons/math4/complex/ComplexTest.java,,804,839,bae46709ecb13f80aaad0d279b3618ab83d09275,e4e1ac23c734f65686be4bc0e503f82f941afd4d,2015-01-12 20:08:44+00:00,2015-02-16 23:37:23+01:00,"System.out.println(""result=""+exp); // TODO temp debug",,,
473,src/test/java/org/apache/commons/math3/complex/ComplexTest.java,src/test/java/org/apache/commons/math4/complex/ComplexTest.java,,800,827,dc5f850d1d9b0b952b7f0dabd6778cf0f7675cba,e4e1ac23c734f65686be4bc0e503f82f941afd4d,2015-01-12 22:07:54+01:00,2015-02-16 23:37:23+01:00,// TODO: temp debug start,,,
474,src/test/java/org/apache/commons/math3/complex/ComplexTest.java,src/test/java/org/apache/commons/math4/complex/ComplexTest.java,,805,834,dc5f850d1d9b0b952b7f0dabd6778cf0f7675cba,e4e1ac23c734f65686be4bc0e503f82f941afd4d,2015-01-12 22:07:54+01:00,2015-02-16 23:37:23+01:00,// TODO: temp debug end,,,
475,src/test/java/org/apache/commons/math3/complex/ComplexTest.java,src/test/java/org/apache/commons/math4/complex/ComplexTest.java,,799,821,b4abfb93676fb0abbab1d9bac40ba2714a3872f5,35378d9c4a3a656b881e77fb405fabd22f7803eb,2015-01-13 01:23:51+00:00,2018-02-28 03:32:19+01:00,public void testJava() {// TODO more debug,,,
476,src/test/java/org/apache/commons/math3/complex/ComplexTest.java,src/test/java/org/apache/commons/math4/complex/ComplexTest.java,,840,841,9a9e7268162f9fed146c74a8acbd234d9bc2ed84,e4e1ac23c734f65686be4bc0e503f82f941afd4d,2015-01-13 02:00:47+00:00,2015-02-16 23:37:23+01:00,"System.out.println(""<<testExpInf4()""); // TODO debug",,,
477,src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java,src/test/java/org/apache/commons/math4/distribution/IntegerDistributionAbstractTest.java,,170,172,422fc2a42662797aeb3a419b84a66e12debd4556,bf5d19e08bfc74c56bc3d3828e5c3d93abbdff8b,2013-10-20 20:42:41+00:00,2019-12-17 03:14:12+01:00,"// FIXME: when logProbability methods are added to IntegerDistribution in 4.0, remove cast below",,,
478,src/test/java/org/apache/commons/math3/distribution/NormalDistributionTest.java,src/test/java/org/apache/commons/math4/distribution/NormalDistributionTest.java,,159,170,696be68b5dc8872a818a24d8a377158314b54e31,ef84681392520396745def163b692a002b269be7,2012-02-14 16:17:55+00:00,2018-01-25 18:36:19+01:00,"// TODO: once MATH-364 is resolved, replace 9 with 30",,,
479,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math4/distribution/RealDistributionAbstractTest.java,,156,185,bfdf1c44af26540c3749806e300ed0ff580efcda,3fd9cf1753a24587ee9d64d2133784adaa099219,2012-08-04 19:40:03+00:00,2015-02-25 21:43:34+01:00,"// XXX In 4.0, ""cumulativeProbability(double,double)"" must be replaced with ""probability"" (MATH-839).",,,
480,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math4/distribution/RealDistributionAbstractTest.java,,237,288,bfdf1c44af26540c3749806e300ed0ff580efcda,3fd9cf1753a24587ee9d64d2133784adaa099219,2012-08-04 19:40:03+00:00,2015-02-25 21:43:34+01:00,"// XXX In 4.0, ""cumulativeProbability(double,double)"" must be replaced with ""probability"" (MATH-839).",,,
481,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math4/distribution/RealDistributionAbstractTest.java,,247,298,bfdf1c44af26540c3749806e300ed0ff580efcda,3fd9cf1753a24587ee9d64d2133784adaa099219,2012-08-04 19:40:03+00:00,2015-02-25 21:43:34+01:00,"// XXX In 4.0, ""cumulativeProbability(double,double)"" must be replaced with ""probability"" (MATH-839).",,,
482,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math4/distribution/RealDistributionAbstractTest.java,,260,311,bfdf1c44af26540c3749806e300ed0ff580efcda,3fd9cf1753a24587ee9d64d2133784adaa099219,2012-08-04 19:40:03+00:00,2015-02-25 21:43:34+01:00,"// XXX In 4.0, ""cumulativeProbability(double,double)"" must be replaced with ""probability"" (MATH-839).",,,
483,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math4/distribution/RealDistributionAbstractTest.java,,333,378,04b34cc1a560fd334c5602c62fc6efdcb8f90581,3fd9cf1753a24587ee9d64d2133784adaa099219,2012-09-05 06:53:45+00:00,2015-02-25 21:43:34+01:00,distribution.cumulativeProbability(  // FIXME @4.0 when rename happens,,,
484,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math4/distribution/RealDistributionAbstractTest.java,,232,233,422fc2a42662797aeb3a419b84a66e12debd4556,3fd9cf1753a24587ee9d64d2133784adaa099219,2013-10-20 20:42:41+00:00,2015-02-25 21:43:34+01:00,"// FIXME: when logProbability methods are added to RealDistribution in 4.0, remove cast below",,,
485,src/test/java/org/apache/commons/math3/distribution/fitting/MultivariateNormalMixtureExpectationMaximizationTest.java,src/test/java/org/apache/commons/math4/distribution/fitting/MultivariateNormalMixtureExpectationMaximizationTest.java,,39,39,9c90639c10fea427d701632ed780e26ab539efef,16e0a6d47b6498555b9691a190960bd72ea32e56,2013-03-21 16:22:02+00:00,2013-03-25 15:47:31+00:00,// TODO reject initial mixes where means/covMats not computable with data,,,
486,src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java,src/test/java/org/apache/commons/math4/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java,,141,150,7460c082a39251193108da52ce05e63f3e3796d1,9d1741bfe4a7808cfa0c313891a717adf98a3087,2014-02-18 14:31:34+00:00,2021-05-15 05:36:48+02:00,//TODO more specific test? could pass with 'return 1;',,,
487,src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java,src/test/java/org/apache/commons/math4/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java,,335,340,7460c082a39251193108da52ce05e63f3e3796d1,9d1741bfe4a7808cfa0c313891a717adf98a3087,2014-02-18 14:31:34+00:00,2021-05-15 05:36:48+02:00,//TODO what is this actually testing?,,,
488,src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java,src/test/java/org/apache/commons/math4/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java,,346,352,7460c082a39251193108da52ce05e63f3e3796d1,9d1741bfe4a7808cfa0c313891a717adf98a3087,2014-02-18 14:31:34+00:00,2021-05-15 05:36:48+02:00,//TODO why is this part here? hasn't it been tested already?,,,
489,src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java,src/test/java/org/apache/commons/math4/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java,,353,358,7460c082a39251193108da52ce05e63f3e3796d1,9d1741bfe4a7808cfa0c313891a717adf98a3087,2014-02-18 14:31:34+00:00,2021-05-15 05:36:48+02:00,//TODO move to builder test,,,
490,src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java,src/test/java/org/apache/commons/math4/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java,,375,380,7460c082a39251193108da52ce05e63f3e3796d1,9d1741bfe4a7808cfa0c313891a717adf98a3087,2014-02-18 14:31:34+00:00,2021-05-15 05:36:48+02:00,//TODO move to builder test,,,
491,src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java,src/test/java/org/apache/commons/math4/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java,,305,306,0079828734d62dbc2b44ccf4f21e3dc1daa7b90b,007a701755f318562b0cbf2005d84299733d9b45,2014-02-18 14:32:54+00:00,2014-03-02 19:54:43+00:00,//TODO the first two elements of point were not previously checked,,,
492,src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerTestValidation.java,src/test/java/org/apache/commons/math4/fitting/leastsquares/EvaluationTestValidation.java,,82,83,acd569595ee919d1afed3884cf7584cc609ad9ef,9d1741bfe4a7808cfa0c313891a717adf98a3087,2013-07-30 15:04:22+00:00,2021-05-15 05:36:48+02:00,final int numObs = 100; // XXX Should be a command-line option.,,,
493,src/test/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java,src/test/java/org/apache/commons/math4/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java,,96,87,7460c082a39251193108da52ce05e63f3e3796d1,9d1741bfe4a7808cfa0c313891a717adf98a3087,2014-02-18 14:31:34+00:00,2021-05-15 05:36:48+02:00,//TODO check that it is a bad fit? Why the extra conditions?,,,
494,src/test/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java,src/test/java/org/apache/commons/math4/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java,,123,114,7460c082a39251193108da52ce05e63f3e3796d1,9d1741bfe4a7808cfa0c313891a717adf98a3087,2014-02-18 14:31:34+00:00,2021-05-15 05:36:48+02:00,//TODO why should this fail? It uses 15 evaluations.,,,
495,src/test/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java,src/test/java/org/apache/commons/math4/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java,,149,140,7460c082a39251193108da52ce05e63f3e3796d1,9d1741bfe4a7808cfa0c313891a717adf98a3087,2014-02-18 14:31:34+00:00,2021-05-15 05:36:48+02:00,//TODO check it got the right answer,,,
496,src/test/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java,src/test/java/org/apache/commons/math4/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java,,272,291,7460c082a39251193108da52ce05e63f3e3796d1,e875e6d59875be86fb8de8df7642c370b652eb76,2014-02-18 14:31:34+00:00,2014-09-22 18:07:54+02:00,//TODO delete or use,,,
497,src/test/java/org/apache/commons/math4/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java,src/test/java/org/apache/commons/math4/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java,,243,233,0a499402d707bc8cf775d7f9b3840780a7401f7d,9d1741bfe4a7808cfa0c313891a717adf98a3087,2015-04-09 14:37:42+02:00,2021-05-15 05:36:48+02:00,// XXX Values computed by the CM code: It would be better to compare,,,
498,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math4/geometry/euclidean/twod/PolygonsSetTest.java,,900,900,b25f448d2f934c08fc4de4ed11b654c87b218bab,2a9cbbab467052a523d3d59e3d66cf1ef527fb68,2012-10-21 20:08:32+00:00,2012-10-22 19:21:36+00:00,// TODO: the following assertion fails and should not,,,
499,src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java,src/test/java/org/apache/commons/math4/geometry/euclidean/twod/PolygonsSetTest.java,,975,975,b25f448d2f934c08fc4de4ed11b654c87b218bab,2a9cbbab467052a523d3d59e3d66cf1ef527fb68,2012-10-21 20:08:32+00:00,2012-10-22 19:21:36+00:00,// TODO: the resulting polygon has two boundaries but should have only one,,,
500,src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/MultiStartMultivariateOptimizerTest.java,src/test/java/org/apache/commons/math4/optim/nonlinear/scalar/MultiStartMultivariateOptimizerTest.java,,47,46,7ee7843ffe817f79a54f77feebd51506f36c7ef8,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-12-12 14:10:38+00:00,2021-05-15 05:36:48+02:00,// TODO: the wrapper around NonLinearConjugateGradientOptimizer is a temporary hack for,,,
501,src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java,,314,314,7ee7843ffe817f79a54f77feebd51506f36c7ef8,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-12-12 14:10:38+00:00,2021-05-15 05:36:48+02:00,"//         System.out.println(func.getClass().getName() + "" BEGIN""); // XXX",,,
502,src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java,,341,341,7ee7843ffe817f79a54f77feebd51506f36c7ef8,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-12-12 14:10:38+00:00,2021-05-15 05:36:48+02:00,"//         System.out.println(func.getClass().getName() + "" END""); // XXX",,,
503,src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java,,239,236,8a25d709f50ce97d50c653dbb5897c01e6b5d9cb,9d1741bfe4a7808cfa0c313891a717adf98a3087,2013-03-29 15:48:27+00:00,2021-05-15 05:36:48+02:00,// TODO: this test is temporarily disabled for 3.2 release as a bug in Cobertura,,,
504,src/test/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerTestValidation.java,src/test/java/org/apache/commons/math4/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizerTestValidation.java,,84,87,7ee7843ffe817f79a54f77feebd51506f36c7ef8,e31fde875c6075ae3da9572c6f910cc29ceaf6c3,2012-12-12 14:10:38+00:00,2015-04-11 16:05:10+02:00,final int numObs = 100; // XXX Should be a command-line option.,,,
505,src/test/java/org/apache/commons/math3/optimization/MultivariateDifferentiableMultiStartOptimizerTest.java,src/test/java/org/apache/commons/math4/optimization/MultivariateDifferentiableMultiStartOptimizerTest.java,,43,50,c8b8e612430cdc2f54d0bbb3f25f1c956963d99b,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-09-14 20:17:00+00:00,2015-02-25 22:34:53+01:00,// TODO: the wrapper around NonLinearConjugateGradientOptimizer is a temporary hack for,,,
506,src/test/java/org/apache/commons/math3/optimization/MultivariateDifferentiableVectorMultiStartOptimizerTest.java,src/test/java/org/apache/commons/math4/optimization/MultivariateDifferentiableVectorMultiStartOptimizerTest.java,,102,108,c8b8e612430cdc2f54d0bbb3f25f1c956963d99b,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-09-14 20:17:00+00:00,2015-02-25 22:34:53+01:00,// TODO: the wrapper around GaussNewtonOptimizer is a temporary hack for,,,
507,src/test/java/org/apache/commons/math3/optimization/MultivariateDifferentiableVectorMultiStartOptimizerTest.java,src/test/java/org/apache/commons/math4/optimization/MultivariateDifferentiableVectorMultiStartOptimizerTest.java,,164,170,c8b8e612430cdc2f54d0bbb3f25f1c956963d99b,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-09-14 20:17:00+00:00,2015-02-25 22:34:53+01:00,// TODO: the wrapper around GaussNewtonOptimizer is a temporary hack for,,,
508,src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizerTest.java,,311,319,696be68b5dc8872a818a24d8a377158314b54e31,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-02-14 16:17:55+00:00,2015-02-25 22:34:53+01:00,"System.out.println(func.getClass().getName() + "" BEGIN""); // XXX
//         System.out.println(func.getClass().getName() + "" BEGIN""); // XXX",[311],[311],['88b7d7f6fc23b89ba0fd6fc32ddbaf87cb805496']
509,src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizerTest.java,,332,345,696be68b5dc8872a818a24d8a377158314b54e31,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-02-14 16:17:55+00:00,2015-02-25 22:34:53+01:00,"System.out.println(func.getClass().getName() + "" END""); // XXX
//         System.out.println(func.getClass().getName() + "" END""); // XXX",[332],[332],['88b7d7f6fc23b89ba0fd6fc32ddbaf87cb805496']
510,src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math4/optimization/direct/BOBYQAOptimizerTest.java,,238,241,8a25d709f50ce97d50c653dbb5897c01e6b5d9cb,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2013-03-29 15:48:27+00:00,2015-02-25 22:34:53+01:00,// TODO: this test is temporarily disabled for 3.2 release as a bug in Cobertura,,,
511,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerTestValidation.java,src/test/java/org/apache/commons/math4/optimization/general/AbstractLeastSquaresOptimizerTestValidation.java,,82,83,94e0cbdcde5cdd29aad59915ac6eb5e6c04491b6,b4669aad3f2185894db7d4fb84cbcc311c32e34d,2012-05-14 10:50:51+00:00,2015-02-25 22:34:53+01:00,final int numObs = 100; // XXX Should be a command-line option.,,,
512,src/test/java/org/apache/commons/math3/random/MersenneTwisterTest.java,src/test/java/org/apache/commons/math4/random/MersenneTwisterTest.java,,29,31,696be68b5dc8872a818a24d8a377158314b54e31,595f3fb79a885f8620f77ebcccf8da65b5024b4e,2012-02-14 16:17:55+00:00,2016-05-29 22:19:13+02:00,// TODO: Some of the tests moved up to RandomGeneratorAbstractTest tested alternative seeding / constructors,,,
513,src/test/java/org/apache/commons/math3/random/RandomDataTest.java,src/test/java/org/apache/commons/math4/random/RandomDataGeneratorTest.java,,372,424,696be68b5dc8872a818a24d8a377158314b54e31,232b96ceb131ff8cb58fbbdd021c22f7e5160239,2012-02-14 16:17:55+00:00,2013-07-02 20:00:47+00:00,"// TODO: When MATH-282 is resolved, s/3000/10000 below",,,
514,src/test/java/org/apache/commons/math3/random/RandomGeneratorAbstractTest.java,src/test/java/org/apache/commons/math4/random/RandomGeneratorAbstractTest.java,,164,164,83dfa0a5c07b100a1ba2f73a30413483ae2a8f5b,26f3166f1156ecede6e046ce2d74ac5bc3bf64fb,2012-04-26 01:29:46+00:00,2013-03-10 13:02:04+00:00,@Override // TODO is this supposed to be an override?,,,
515,src/test/java/org/apache/commons/math3/stat/descriptive/SummaryStatisticsTest.java,src/test/java/org/apache/commons/math4/stat/descriptive/SummaryStatisticsTest.java,,146,143,696be68b5dc8872a818a24d8a377158314b54e31,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-02-14 16:17:55+00:00,2021-05-15 05:36:48+02:00,//FiXME: test all other NaN contract specs,,,
516,src/test/java/org/apache/commons/math3/stat/inference/KolmogorovSmirnovTestTest.java,src/test/java/org/apache/commons/math4/stat/inference/KolmogorovSmirnovTestTest.java,,288,250,99189ff527554aa345f63fc038fc8eacf28cbb39,9d1741bfe4a7808cfa0c313891a717adf98a3087,2014-02-26 23:14:08+00:00,2021-05-15 05:36:48+02:00,// From Wikipedia KS article - TODO: get (and test) more precise values,,,
517,src/test/java/org/apache/commons/math4/stat/inference/KolmogorovSmirnovTestTest.java,src/test/java/org/apache/commons/math4/stat/inference/KolmogorovSmirnovTestTest.java,,796,796,8ba4b12f40d40a9d705cca8d0b24fc1718bd3c5f,9f778c41356d9a30258cf62165c9aab1197d5f04,2019-04-05 15:17:36+02:00,2020-05-29 10:22:36+02:00,"System.out.println(""p="" + p); // XXX",,,
518,src/test/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math4/stat/regression/GLSMultipleLinearRegressionTest.java,,205,209,696be68b5dc8872a818a24d8a377158314b54e31,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-02-14 16:17:55+00:00,2021-05-15 05:36:48+02:00,"// TODO:  Should have assertRelativelyEquals(double[], double[], eps) in TestUtils",,,
519,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math4/stat/regression/SimpleRegressionTest.java,,343,527,696be68b5dc8872a818a24d8a377158314b54e31,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-02-14 16:17:55+00:00,2021-05-15 05:36:48+02:00,//FIXME: get a real example to test against with alpha = .01,,,
520,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math4/stat/regression/SimpleRegressionTest.java,,554,558,b8e9475505fee98aae2819c03a33c7aa3db843d3,c22e7fb6f9b5df6f5c3ea9d595214d63bc803a6c,2015-01-12 18:20:01+00:00,2015-02-25 22:20:33+01:00,"System.out.println(""getXSumSquares()="" + regression.getXSumSquares()); // TODO temp check to see why Jenkins H10 is failing",,,
521,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math4/stat/regression/SimpleRegressionTest.java,,556,560,b8e9475505fee98aae2819c03a33c7aa3db843d3,c22e7fb6f9b5df6f5c3ea9d595214d63bc803a6c,2015-01-12 18:20:01+00:00,2015-02-25 22:20:33+01:00,"System.out.println(""getXSumSquares()="" + regression.getXSumSquares()); // TODO temp check to see why Jenkins H10 is failing",,,
522,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math4/stat/regression/SimpleRegressionTest.java,,558,562,b8e9475505fee98aae2819c03a33c7aa3db843d3,c22e7fb6f9b5df6f5c3ea9d595214d63bc803a6c,2015-01-12 18:20:01+00:00,2015-02-25 22:20:33+01:00,"System.out.println(""getXSumSquares()="" + regression.getXSumSquares()); // TODO temp check to see why Jenkins H10 is failing",,,
523,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math4/stat/regression/SimpleRegressionTest.java,,560,564,b8e9475505fee98aae2819c03a33c7aa3db843d3,c22e7fb6f9b5df6f5c3ea9d595214d63bc803a6c,2015-01-12 18:20:01+00:00,2015-02-25 22:20:33+01:00,"System.out.println(""getXSumSquares()="" + regression.getXSumSquares()); // TODO temp check to see why Jenkins H10 is failing",,,
524,src/test/java/org/apache/commons/math3/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math4/stat/regression/SimpleRegressionTest.java,,561,565,a14acdf6395f588dda7597bb4c7810dacaa503d2,c22e7fb6f9b5df6f5c3ea9d595214d63bc803a6c,2015-01-12 18:36:54+00:00,2015-02-25 22:20:33+01:00,"System.out.println(""getMeanSquareError()="" + regression.getMeanSquareError()); // TODO temp check to see why Jenkins H10/H11 is failing",,,
525,src/userguide/java/org/apache/commons/math3/userguide/genetics/ImageEvolutionExample.java,src/userguide/java/org/apache/commons/math4/userguide/genetics/ImageEvolutionExample.java,,72,72,1cdc902f3d7cf877b4db7a31f19eb1dfd2fade3e,e9ea52189a92f7e2ab051e4d75c4e0c872034b18,2013-12-09 22:34:28+00:00,2013-12-10 21:40:32+00:00,// TODO: improve this,,,
526,src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java,src/main/java/org/apache/commons/math4/distribution/EmpiricalDistribution.java,,205,205,29a297de44d2f4dcc3d7e2c22c313f51414dab8a,2f332839813214a5ca7d9a606bd9d87fd699ae9c,2012-12-14 14:57:56+00:00,2012-12-14 16:28:23+00:00,useRandomDataImpl = false; // XXX Remove in 4.0,,,
527,src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java,src/main/java/org/apache/commons/math4/distribution/EmpiricalDistribution.java,,501,501,29a297de44d2f4dcc3d7e2c22c313f51414dab8a,2f332839813214a5ca7d9a606bd9d87fd699ae9c,2012-12-14 14:57:56+00:00,2012-12-14 16:28:23+00:00,// XXX backward compatibility.,,,
528,src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java,src/main/java/org/apache/commons/math4/distribution/EmpiricalDistribution.java,,628,628,29a297de44d2f4dcc3d7e2c22c313f51414dab8a,2f332839813214a5ca7d9a606bd9d87fd699ae9c,2012-12-14 14:57:56+00:00,2012-12-14 16:28:23+00:00,// XXX backward compatibility.,,,
529,src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java,src/test/java/org/apache/commons/math4/distribution/EmpiricalDistributionTest.java,,83,114,696be68b5dc8872a818a24d8a377158314b54e31,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-02-14 16:17:55+00:00,2021-05-15 05:36:48+02:00,//TODO: replace with statistical tests,,,
530,src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java,src/test/java/org/apache/commons/math4/distribution/EmpiricalDistributionTest.java,,102,133,696be68b5dc8872a818a24d8a377158314b54e31,9d1741bfe4a7808cfa0c313891a717adf98a3087,2012-02-14 16:17:55+00:00,2021-05-15 05:36:48+02:00,//TODO: replace with statistical tests,,,
531,src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java,src/test/java/org/apache/commons/math4/distribution/EmpiricalDistributionTest.java,,58,62,29a297de44d2f4dcc3d7e2c22c313f51414dab8a,3fd9cf1753a24587ee9d64d2133784adaa099219,2012-12-14 14:57:56+00:00,2015-02-25 21:43:34+01:00,"//         empiricalDistribution = new EmpiricalDistribution(100, new RandomDataImpl()); // XXX Deprecated API",,,
532,src/test/java/org/apache/commons/math3/random/EmpiricalDistributionTest.java,src/test/java/org/apache/commons/math4/distribution/EmpiricalDistributionTest.java,,63,67,29a297de44d2f4dcc3d7e2c22c313f51414dab8a,3fd9cf1753a24587ee9d64d2133784adaa099219,2012-12-14 14:57:56+00:00,2015-02-25 21:43:34+01:00,"//             empiricalDistribution2 = new EmpiricalDistribution(100, new RandomDataImpl()); // XXX Deprecated API",,,
533,src/test/java/org/apache/commons/math4/random/EmpiricalDistributionTest.java,src/test/java/org/apache/commons/math4/distribution/EmpiricalDistributionTest.java,,260,260,78ebedb0f1c84787e622a92cc47c2d28a0e1e4e5,595f3fb79a885f8620f77ebcccf8da65b5024b4e,2016-04-22 00:03:03+02:00,2016-05-29 22:19:13+02:00,"// XXX REMOVE (test ""embedded RNG"" which is to be removed)",,,
534,src/test/java/org/apache/commons/math4/random/EmpiricalDistributionTest.java,src/test/java/org/apache/commons/math4/distribution/EmpiricalDistributionTest.java,,278,278,78ebedb0f1c84787e622a92cc47c2d28a0e1e4e5,595f3fb79a885f8620f77ebcccf8da65b5024b4e,2016-04-22 00:03:03+02:00,2016-05-29 22:19:13+02:00,"// XXX REMOVE (test ""embedded RNG"" which is to be removed)",,,
535,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/fitting/GaussianCurveFitter.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/fitting/GaussianCurveFitter.java,,305,173,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,// TODO: Exceptions should not be used for flow control.,,,
536,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/fitting/GaussianCurveFitter.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/fitting/GaussianCurveFitter.java,,404,404,9d1741bfe4a7808cfa0c313891a717adf98a3087,1d9670cb12613a2d8c27ad318237e000668f8836,2021-05-15 05:36:48+02:00,2021-05-29 00:34:28+02:00,// TODO: Exceptions should not be used for flow control.,,,
537,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/fitting/SimpleCurveFitter.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/fitting/SimpleCurveFitter.java,,305,302,1d9670cb12613a2d8c27ad318237e000668f8836,,2021-05-29 00:34:28+02:00,,// TODO: Exceptions should not be used for flow control.,,,
538,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/fitting/leastsquares/GaussNewtonOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/fitting/leastsquares/GaussNewtonOptimizer.java,,52,52,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,//TODO move to linear package and expand options?,,,
539,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/fitting/leastsquares/LeastSquaresFactory.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/fitting/leastsquares/LeastSquaresFactory.java,,213,213,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,// TODO more efficient implementation,,,
540,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/fitting/leastsquares/LeastSquaresFactory.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/fitting/leastsquares/LeastSquaresFactory.java,,327,327,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,//TODO get array from RealVector without copying?,,,
541,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/fitting/leastsquares/LeastSquaresOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/fitting/leastsquares/LeastSquaresOptimizer.java,,40,40,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,//TODO Solution?,,,
542,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/linear/RealVector.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/linear/RealVector.java,,217,217,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,// TODO Use more specific error message,,,
543,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,295,296,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,printMethod(); // XXX,,,
544,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,384,385,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,printMethod(); // XXX,,,
545,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,454,455,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,printState(20); // XXX,,,
546,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,477,478,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,// throw new PathIsExploredException(); // XXX,,,
547,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,490,490,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,printState(60); // XXX,,,
548,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,549,549,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,// throw new PathIsExploredException(); // XXX,,,
549,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,564,563,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,printState(90); // XXX,,,
550,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,576,575,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,"// sum = sumVector.getEntry(k); // XXX ""testAckley"" and ""testDiffPow"" fail.",,,
551,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,669,667,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,printState(210); // XXX,,,
552,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,695,692,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,printState(230); // XXX,,,
553,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,742,739,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,"// beta += dx * dx + dsq * (xoptsq + dx + dx + HALF * dsq) - bsum; // XXX ""testAckley"" and ""testDiffPow"" fail.",,,
554,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,743,740,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,"// beta = dx * dx + dsq * (xoptsq + 2 * dx + HALF * dsq) + beta - bsum; // XXX ""testDiffPow"" fails.",,,
555,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,761,758,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,cauchy = ZERO; // XXX Useful statement?,,,
556,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,818,813,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,printState(360); // XXX,,,
557,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,1128,1123,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,printState(650); // XXX,,,
558,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,1180,1175,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,printState(680); // XXX,,,
559,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,1205,1200,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,printState(720); // XXX,,,
560,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,1270,1266,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,printMethod(); // XXX,,,
561,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,1592,1587,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,printMethod(); // XXX,,,
562,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,1644,1639,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,// throw new PathIsExploredException(); // XXX,,,
563,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,1652,1647,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,// throw new PathIsExploredException(); // XXX,,,
564,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,1656,1651,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,// throw new PathIsExploredException(); // XXX,,,
565,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,1668,1663,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,//                     throw new PathIsExploredException(); // XXX,,,
566,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,1718,1713,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,// throw new PathIsExploredException(); // XXX,,,
567,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,1741,1736,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,"// zMatrix.setEntry(nfm, nfxm, FastMath.sqrt(HALF) * recip); // XXX ""testAckley"" and ""testDiffPow"" fail.
// zMatrix.setEntry(nfm, nfxm, AccurateMath.sqrt(HALF) * recip); // XXX ""testAckley"" and ""testDiffPow"" fail.
// zMatrix.setEntry(nfm, nfxm, JdkMath.sqrt(HALF) * recip); // XXX ""testAckley"" and ""testDiffPow"" fail.","[1741, 1742]","[1741, 1742]","['e85e8b53f22d6b470492862a67f39068117bd175', '21e230ae83f57f8823f1ce4d1a2155a515ad107f']"
568,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,1758,1752,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,//                 throw new PathIsExploredException(); // XXX,,,
569,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,1818,1813,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,printMethod(); // XXX,,,
570,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,1885,1880,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,printState(20); // XXX,,,
571,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,1889,1884,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,printState(30); // XXX,,,
572,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,1922,1917,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,printState(50); // XXX,,,
573,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,2030,2025,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,printState(90); // XXX,,,
574,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,2039,2033,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,printState(100); // XXX,,,
575,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,2066,2060,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,printState(120); // XXX,,,
576,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,2137,2131,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,printState(150); // XXX,,,
577,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,2222,2216,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,printState(190); // XXX,,,
578,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,2248,2242,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,printState(210); // XXX,,,
579,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,2305,2299,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,printMethod(); // XXX,,,
580,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,2311,2305,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,// XXX Should probably be split into two arrays.,,,
581,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,2389,2383,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,printMethod(); // XXX,,,
582,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,2442,2436,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,// XXX utility for figuring out call sequence.,,,
583,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,2449,2443,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,// XXX utility for figuring out call sequence.,,,
584,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java,,2453,2447,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,// XXX utility for figuring out call sequence.,,,
585,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/stat/inference/KolmogorovSmirnovTest.java,commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/stat/inference/KolmogorovSmirnovTest.java,,881,881,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,"// TODO: for small t (say less than 1), the alternative expansion in part 3 of [1]",,,
586,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/PerfTestUtils.java,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/PerfTestUtils.java,,200,203,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,// TODO: user-defined parameter?,,,
587,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/analysis/interpolation/TricubicInterpolatorTest.java,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/analysis/interpolation/TricubicInterpolatorTest.java,,225,231,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,"expected, result, 1e-1); // XXX Too high tolerance!",,,
588,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/analysis/solvers/UnivariateSolverUtilsTest.java,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/analysis/solvers/UnivariateSolverUtilsTest.java,,51,51,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,"//             Assert.fail(""Expecting MathIllegalArgumentException""); // TODO needs rework since convergence behaviour was changed",,,
589,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/distribution/EmpiricalDistributionTest.java,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/distribution/EmpiricalDistributionTest.java,,114,98,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,//TODO: replace with statistical tests,,,
590,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/distribution/EmpiricalDistributionTest.java,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/distribution/EmpiricalDistributionTest.java,,133,135,9d1741bfe4a7808cfa0c313891a717adf98a3087,9dbceb0ed1d58c6ccb4d841a2384fe8f6d98149c,2021-05-15 05:36:48+02:00,2021-07-20 18:07:12+02:00,//TODO: replace with statistical tests,,,
591,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java,,150,146,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,//TODO more specific test? could pass with 'return 1;',,,
592,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java,,340,336,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,//TODO what is this actually testing?,,,
593,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java,,352,348,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,//TODO why is this part here? hasn't it been tested already?,,,
594,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java,,358,354,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,//TODO move to builder test,,,
595,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java,,380,376,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,//TODO move to builder test,,,
596,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/fitting/leastsquares/EvaluationTestValidation.java,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/fitting/leastsquares/EvaluationTestValidation.java,,83,86,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,final int numObs = 100; // XXX Should be a command-line option.,,,
597,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java,,87,84,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,//TODO check that it is a bad fit? Why the extra conditions?,,,
598,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java,,114,111,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,//TODO why should this fail? It uses 15 evaluations.,,,
599,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java,,140,137,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,//TODO check it got the right answer,,,
600,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java,,233,229,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,// XXX Values computed by the CM code: It would be better to compare,,,
601,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/MultiStartMultivariateOptimizerTest.java,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/MultiStartMultivariateOptimizerTest.java,,46,47,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,// TODO: the wrapper around NonLinearConjugateGradientOptimizer is a temporary hack for,,,
602,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java,,236,233,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,// TODO: this test is temporarily disabled for 3.2 release as a bug in Cobertura,,,
603,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java,,314,312,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,"//         System.out.println(func.getClass().getName() + "" BEGIN""); // XXX",,,
604,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java,,341,339,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,"//         System.out.println(func.getClass().getName() + "" END""); // XXX",,,
605,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/stat/descriptive/SummaryStatisticsTest.java,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/stat/descriptive/SummaryStatisticsTest.java,,143,138,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,//FiXME: test all other NaN contract specs,,,
606,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/stat/inference/KolmogorovSmirnovTestTest.java,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/stat/inference/KolmogorovSmirnovTestTest.java,,250,250,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,// From Wikipedia KS article - TODO: get (and test) more precise values,,,
607,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/stat/regression/GLSMultipleLinearRegressionTest.java,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/stat/regression/GLSMultipleLinearRegressionTest.java,,209,211,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,"// TODO:  Should have assertRelativelyEquals(double[], double[], eps) in TestUtils",,,
608,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/stat/regression/SimpleRegressionTest.java,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/stat/regression/SimpleRegressionTest.java,,527,525,9d1741bfe4a7808cfa0c313891a717adf98a3087,,2021-05-15 05:36:48+02:00,,//FIXME: get a real example to test against with alpha = .01,,,
609,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/ExtendedFieldElementAbstractTest.java,commons-math-legacy-core/src/test/java/org/apache/commons/math4/legacy/core/ExtendedFieldElementAbstractTest.java,,316,316,9d1741bfe4a7808cfa0c313891a717adf98a3087,c3ec07380f82c868dd015cf83f3ee2575c6fcd51,2021-05-15 05:36:48+02:00,2021-06-01 01:25:15+02:00,"//  TODO: add this test in 4.0, as it is not possible to do it in 3.2",,,
610,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/field/ExtendedFieldElementAbstractTest.java,commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/field/ExtendedFieldElementAbstractTest.java,,318,318,e85e8b53f22d6b470492862a67f39068117bd175,c3ec07380f82c868dd015cf83f3ee2575c6fcd51,2021-06-01 00:26:35+02:00,2021-06-01 01:25:15+02:00,"//  TODO: add this test in 4.0, as it is not possible to do it in 3.2",,,
